[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"linnn-7"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T12-4/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T12-4/tp/graph/badge.svg?token\u003d2O08Y4YRPC)](https://codecov.io/gh/AY2324S2-CS2103T-T12-4/tp)","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"linnn-7"},"content":"# PayBack","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"linnn-7"},"content":"PayBack is a comprehensive financial management application designed to streamline and simplify financial tracking between a company manager and its employees. ","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"linnn-7"},"content":"With PayBack, the manager can efficiently manage financial transactions, reimbursements, salaries, and other financial interactions with his/her employees.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"linnn-7"},"content":"* It is named `PayBack` because it mainly keeps track of a company\u0027s financial details with its employees.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"linnn-7"},"content":"* This project is based on the project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"linnn-7"},"content":"## Getting Started","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"linnn-7"},"content":"1. Ensure that Java 11 or above is available on your computer.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"linnn-7"},"content":"2. Download the **payback.jar** file from here.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"linnn-7"},"content":"3. Open your terminal and navigate to the file\u0027s location.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"linnn-7"},"content":"4. Run the jar file with the follow command","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"linnn-7"},"content":"```shell","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"linnn-7"},"content":"java -jar payback.jar","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"linnn-7"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"linnn-7"},"content":"## Contact","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"linnn-7"},"content":"For any inquiries or support, please contact `e0969732@u.nus.edu`.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"linnn-7":21,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"    implementation \u0027org.controlsfx:controlsfx:11.1.1\u0027","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"    archiveFileName \u003d \u0027payback.jar\u0027","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"PateShin"},"content":"run {","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"PateShin":5,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"### Dhiraputta Pathama Tengara","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"\u003cimg src\u003d\"images/dhirapt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"[[homepage](https://dhirapt-portfolio.vercel.app)]","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"[[github](https://github.com/DhiraPT)]","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"linnn-7"},"content":"### Lin Bin","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"linnn-7"},"content":"\u003cimg src\u003d\"images/linnn-7.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"linnn-7"},"content":"[[github](http://github.com/linnn-7)]","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"### Ondre Tann","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"\u003cimg src\u003d\"images/ondretann.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"[[github](http://github.com/ondretann)]","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"### Shin Dong Yoon","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"\u003cimg src\u003d\"images/pateshin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"[[github](https://github.com/PateShin)]","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"[[portfolio](team/dongyoon.md)]","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"* Responsibilities: Code Quality + UI/UX","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"linnn-7":3,"PateShin":5,"DhiraPT":4,"-":35,"ondretann":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"linnn-7"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `/delete 240001`.","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"linnn-7"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"linnn-7"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"linnn-7"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"linnn-7"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"/delete 240001\")` API call as an example.","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"linnn-7"},"content":"![Interactions Inside the Logic Component for the `/delete 240001` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `PayBackParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"* When called upon to parse a user command, the `PaybackParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `PaybackParser` returns back as a `Command` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"linnn-7"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"PateShin"},"content":"* stores the employee data i.e., all `Person` and `Transaction` objects (which are contained in `UniquePersonList` and `UniqueTransactionList` object respectively).","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"ondretann"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of the /find command) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"ondretann"},"content":"* stores the currently \u0027selected\u0027 `Transaction` objects (e.g., results of the /view command) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTransaction\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"PateShin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Payback`, which `Person` references. This allows `Payback` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"linnn-7"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"PateShin"},"content":"* can save both employee data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"PateShin"},"content":"* inherits from both `PayBackStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"linnn-7"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"PateShin"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedPayBack`. It extends `PayBack` with an undo/redo history, stored internally as an `payBackStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"PateShin"},"content":"* `VersionedPayBack#commit()` — Saves the current employee state in its history.","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"PateShin"},"content":"* `VersionedPayBack#undo()` — Restores the previous employee state from its history.","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"PateShin"},"content":"* `VersionedPayBack#redo()` — Restores a previously undone employee state from its history.","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"PateShin"},"content":"These operations are exposed in the `Model` interface as `Model#commitPayBack()`, `Model#undoPayBack()` and `Model#redoPayBack()` respectively.","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"PateShin"},"content":"Step 1. The user launches the application for the first time. The `VersionedPayBack` will be initialized with the initial employee state, and the `currentStatePointer` pointing to that single employee state.","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"PateShin"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the employee. The `delete` command calls `Model#commitPayBack()`, causing the modified state of the employee after the `delete 5` command executes to be saved in the `payBackStateList`, and the `currentStatePointer` is shifted to the newly inserted employee state.","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"PateShin"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitPayBack()`, causing another modified employee state to be saved into the `payBackStateList`.","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"PateShin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitPayBack()`, so the employee state will not be saved into the `PayBackStateList`.","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"PateShin"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoPayBack()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous employee state, and restores the employee to that state.","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"PateShin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial PayBack state, then there are no previous PayBack states to restore. The `undo` command uses `Model#canUndoPayBack()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":210,"author":{"gitId":"PateShin"},"content":"The `redo` command does the opposite — it calls `Model#redoPayBack()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the employee to that state.","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"PateShin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `payBackStateList.size() - 1`, pointing to the latest employee state, then there are no undone PayBack states to restore. The `redo` command uses `Model#canRedoPayBack()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"PateShin"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the employee, such as `list`, will usually not call `Model#commitPayBack()`, `Model#undoPayBack()` or `Model#redoPayBack()`. Thus, the `payBackStateList` remains unchanged.","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"PateShin"},"content":"Step 6. The user executes `clear`, which calls `Model#commitPayBack()`. Since the `currentStatePointer` is not pointing at the end of the `payBackStateList`, all employee states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"PateShin"},"content":"* **Alternative 1 (current choice):** Saves the entire employee list.","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"ondretann"},"content":"* is a company manager","lastModifiedDate":"2024-03-06"},{"lineNumber":267,"author":{"gitId":"ondretann"},"content":"* has a need to manage a significant number of employees","lastModifiedDate":"2024-03-06"},{"lineNumber":268,"author":{"gitId":"ondretann"},"content":"* is required to handle a multitude of financial transactions (such as salary crediting, loans, etc)","lastModifiedDate":"2024-03-06"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"linnn-7"},"content":"**Value proposition**: manage employee information more efficiently and clearly than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-06"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​             | I want to …​                                | So that I can…​                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"PateShin"},"content":"| -------- |---------------------|---------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":281,"author":{"gitId":"PateShin"},"content":"| `* * *`  | New Company Manager | read the instructions of the program        | Learn or remember the lists of commands or methods to use the system |","lastModifiedDate":"2024-03-06"},{"lineNumber":282,"author":{"gitId":"PateShin"},"content":"| `* * *`  | Company Manager     | add a new employee                          | ensure they are officially recorded                                  |","lastModifiedDate":"2024-03-06"},{"lineNumber":283,"author":{"gitId":"PateShin"},"content":"| `* * *`  | Company Manager     | remove/delete a employee                    | have an updated list of employees when they leave the company        |","lastModifiedDate":"2024-03-06"},{"lineNumber":284,"author":{"gitId":"PateShin"},"content":"| `* * *`  | Company Manager     | find a employee by ID, name, phone or email | retrieve details of employee(s) without looking entire workers       |","lastModifiedDate":"2024-03-06"},{"lineNumber":285,"author":{"gitId":"PateShin"},"content":"| `* *`    | Company Manager     | edit information of a employee              | rectify any incorrect inputs entered into the system                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":286,"author":{"gitId":"PateShin"},"content":"| `* *`    | Company Manager     | list entire employees                       | see entire employees                                                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":287,"author":{"gitId":"PateShin"},"content":"| `*`      | Company Manager     | create a tag to employee                    | recognize all types of attention                                     |","lastModifiedDate":"2024-03-06"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"PateShin"},"content":"(For all use cases below, the **System** is the `PayBack` and the **Actor** is the `Company Manager`, unless specified otherwise)","lastModifiedDate":"2024-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"DhiraPT"},"content":"**Use case: Add a new employee**","lastModifiedDate":"2024-03-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":297,"author":{"gitId":"DhiraPT"},"content":"1.  User requests to add a new employee","lastModifiedDate":"2024-03-07"},{"lineNumber":298,"author":{"gitId":"DhiraPT"},"content":"2.  User enters the name, phone number, email, and optionally, year joined","lastModifiedDate":"2024-03-07"},{"lineNumber":299,"author":{"gitId":"DhiraPT"},"content":"3.  PayBack adds the new employee to the employee list","lastModifiedDate":"2024-03-07"},{"lineNumber":300,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":301,"author":{"gitId":"DhiraPT"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":302,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":303,"author":{"gitId":"DhiraPT"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":304,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":305,"author":{"gitId":"DhiraPT"},"content":"* 2a. The fields other than the year joined are not specified.","lastModifiedDate":"2024-03-07"},{"lineNumber":306,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":307,"author":{"gitId":"DhiraPT"},"content":"    * 2a1. PayBack shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":308,"author":{"gitId":"DhiraPT"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":309,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":310,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":311,"author":{"gitId":"DhiraPT"},"content":"* 2b. The parameters are not specified in the correct order.","lastModifiedDate":"2024-03-07"},{"lineNumber":312,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":313,"author":{"gitId":"DhiraPT"},"content":"    * 2b1. PayBack shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":314,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":315,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":316,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":317,"author":{"gitId":"DhiraPT"},"content":"* 2c. Some parameters are specified, some are not.","lastModifiedDate":"2024-03-07"},{"lineNumber":318,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":319,"author":{"gitId":"DhiraPT"},"content":"    * 2c1. PayBack shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":320,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":321,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":322,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":323,"author":{"gitId":"DhiraPT"},"content":"* 2d. The information entered is not in the correct format.","lastModifiedDate":"2024-03-07"},{"lineNumber":324,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":325,"author":{"gitId":"DhiraPT"},"content":"    * 2d1. PayBack shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":326,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":327,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":328,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":329,"author":{"gitId":"ondretann"},"content":"**Use case: Remove a person**","lastModifiedDate":"2024-03-07"},{"lineNumber":330,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":331,"author":{"gitId":"ondretann"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":332,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":333,"author":{"gitId":"ondretann"},"content":"1. User requests to remove an employee","lastModifiedDate":"2024-03-07"},{"lineNumber":334,"author":{"gitId":"ondretann"},"content":"2. User enters employee ID","lastModifiedDate":"2024-03-07"},{"lineNumber":335,"author":{"gitId":"ondretann"},"content":"3. Payback displays details of the employee for confirmation","lastModifiedDate":"2024-03-07"},{"lineNumber":336,"author":{"gitId":"ondretann"},"content":"4. User confirms removal of employee","lastModifiedDate":"2024-03-07"},{"lineNumber":337,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":338,"author":{"gitId":"ondretann"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":339,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":340,"author":{"gitId":"ondretann"},"content":"**Extension**","lastModifiedDate":"2024-03-07"},{"lineNumber":341,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":342,"author":{"gitId":"ondretann"},"content":"* 2a. Employee ID entered is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":343,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":344,"author":{"gitId":"ondretann"},"content":"  * 2a1. Payback shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":345,"author":{"gitId":"ondretann"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":346,"author":{"gitId":"ondretann"},"content":"    Use case resumes at Step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":347,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":348,"author":{"gitId":"ondretann"},"content":"* 4a. User cancels the removal of employee.","lastModifiedDate":"2024-03-07"},{"lineNumber":349,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":350,"author":{"gitId":"ondretann"},"content":"  * 4a1. Payback acknowledges the cancellation.","lastModifiedDate":"2024-03-07"},{"lineNumber":351,"author":{"gitId":"ondretann"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":352,"author":{"gitId":"ondretann"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":353,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":354,"author":{"gitId":"ondretann"},"content":"**Use case: Tag a person**","lastModifiedDate":"2024-03-07"},{"lineNumber":355,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":356,"author":{"gitId":"ondretann"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":357,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":358,"author":{"gitId":"ondretann"},"content":"1. User requests to tag an employee","lastModifiedDate":"2024-03-07"},{"lineNumber":359,"author":{"gitId":"ondretann"},"content":"2. User enters employee id and tags","lastModifiedDate":"2024-03-07"},{"lineNumber":360,"author":{"gitId":"ondretann"},"content":"3. Payback displays details of the employee and tags to be added for confirmation","lastModifiedDate":"2024-03-07"},{"lineNumber":361,"author":{"gitId":"ondretann"},"content":"4. User confirms tagging of employee","lastModifiedDate":"2024-03-07"},{"lineNumber":362,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":363,"author":{"gitId":"ondretann"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":364,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":365,"author":{"gitId":"ondretann"},"content":"**Extension**","lastModifiedDate":"2024-03-07"},{"lineNumber":366,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":367,"author":{"gitId":"ondretann"},"content":"* 2a. Employee ID entered is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":368,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":369,"author":{"gitId":"ondretann"},"content":"  * 2a1. Payback shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":370,"author":{"gitId":"ondretann"},"content":"  ","lastModifiedDate":"2024-03-07"},{"lineNumber":371,"author":{"gitId":"ondretann"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":372,"author":{"gitId":"ondretann"},"content":"  ","lastModifiedDate":"2024-03-07"},{"lineNumber":373,"author":{"gitId":"ondretann"},"content":"* 2b. Tag parameter(s) is/are not specified.","lastModifiedDate":"2024-03-07"},{"lineNumber":374,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":375,"author":{"gitId":"ondretann"},"content":"  * 2b1. Payback shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":376,"author":{"gitId":"ondretann"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":377,"author":{"gitId":"ondretann"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":378,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":379,"author":{"gitId":"ondretann"},"content":"* 4a. User cancels tagging of employee.","lastModifiedDate":"2024-03-07"},{"lineNumber":380,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":381,"author":{"gitId":"ondretann"},"content":"  * 4a1. Payback acknowledges the cancellation.","lastModifiedDate":"2024-03-07"},{"lineNumber":382,"author":{"gitId":"ondretann"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":383,"author":{"gitId":"ondretann"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":384,"author":{"gitId":"ondretann"},"content":"  ","lastModifiedDate":"2024-03-07"},{"lineNumber":385,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":386,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":387,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":388,"author":{"gitId":"PateShin"},"content":"**Use case: Find a person**","lastModifiedDate":"2024-03-06"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"PateShin"},"content":"1. User types command with PREFIX","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"PateShin"},"content":"2. User requests to find a specific employee in the list","lastModifiedDate":"2024-03-29"},{"lineNumber":394,"author":{"gitId":"PateShin"},"content":"3. User requests to list persons","lastModifiedDate":"2024-03-29"},{"lineNumber":395,"author":{"gitId":"PateShin"},"content":"4. PayBack shows a list of employees","lastModifiedDate":"2024-03-29"},{"lineNumber":396,"author":{"gitId":"PateShin"},"content":"5. PayBack finds the employee","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"PateShin"},"content":"* 1a. The PREFIX command is unknown.","lastModifiedDate":"2024-03-29"},{"lineNumber":403,"author":{"gitId":"PateShin"},"content":"  * 3a1. Payback shows an error message","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"PateShin"},"content":"    Use case resumes at Step 1.","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"PateShin"},"content":"* 2a. The given entered format is incorrect.","lastModifiedDate":"2024-03-29"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"PateShin"},"content":"    * 3a1. PayBack shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"PateShin"},"content":"* 2b. There are no employees found.","lastModifiedDate":"2024-03-29"},{"lineNumber":414,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":415,"author":{"gitId":"PateShin"},"content":"    * 3b1. PayBack shows a not found message.","lastModifiedDate":"2024-03-06"},{"lineNumber":416,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":417,"author":{"gitId":"PateShin"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":418,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":419,"author":{"gitId":"PateShin"},"content":"* 3a. The list is empty.","lastModifiedDate":"2024-03-29"},{"lineNumber":420,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":421,"author":{"gitId":"PateShin"},"content":"  Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":422,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":423,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":424,"author":{"gitId":"PateShin"},"content":"**Use case: List entire employees**","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"linnn-7"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":427,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":428,"author":{"gitId":"PateShin"},"content":"1.  User requests to list employees","lastModifiedDate":"2024-03-06"},{"lineNumber":429,"author":{"gitId":"PateShin"},"content":"2.  PayBack shows a list of employees","lastModifiedDate":"2024-03-06"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":439,"author":{"gitId":"linnn-7"},"content":"**Use case: Edit an employee**","lastModifiedDate":"2024-03-06"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":441,"author":{"gitId":"linnn-7"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":443,"author":{"gitId":"linnn-7"},"content":"1.  User requests to edit an employee\u0027s information","lastModifiedDate":"2024-03-06"},{"lineNumber":444,"author":{"gitId":"linnn-7"},"content":"2.  User enters the employee\u0027s ID and fields that need to be updated","lastModifiedDate":"2024-03-06"},{"lineNumber":445,"author":{"gitId":"linnn-7"},"content":"3.  PayBack changes the employee\u0027s information accordingly","lastModifiedDate":"2024-03-06"},{"lineNumber":446,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":447,"author":{"gitId":"linnn-7"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":448,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":449,"author":{"gitId":"linnn-7"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":450,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":451,"author":{"gitId":"linnn-7"},"content":"* 2a. The ID is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":452,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":453,"author":{"gitId":"linnn-7"},"content":"    * 2a1. PayBack shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"linnn-7"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":456,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"linnn-7"},"content":"* 2b. The field that need to be updated is a tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":458,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":459,"author":{"gitId":"linnn-7"},"content":"    * 2b1. User enters tag index and new tag name.","lastModifiedDate":"2024-04-02"},{"lineNumber":460,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":461,"author":{"gitId":"linnn-7"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2024-04-02"},{"lineNumber":462,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":463,"author":{"gitId":"DhiraPT"},"content":"**Use case: Add a transaction**","lastModifiedDate":"2024-03-30"},{"lineNumber":464,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":465,"author":{"gitId":"DhiraPT"},"content":"**MSS**","lastModifiedDate":"2024-03-30"},{"lineNumber":466,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":467,"author":{"gitId":"DhiraPT"},"content":"1. User requests to add a transaction to an employee","lastModifiedDate":"2024-03-30"},{"lineNumber":468,"author":{"gitId":"DhiraPT"},"content":"2. User enters the employee\u0027s ID, amount, description, and optionally, date and time","lastModifiedDate":"2024-03-30"},{"lineNumber":469,"author":{"gitId":"DhiraPT"},"content":"3. PayBack adds the transaction to the transaction list","lastModifiedDate":"2024-03-30"},{"lineNumber":470,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":471,"author":{"gitId":"DhiraPT"},"content":"    Use case ends.","lastModifiedDate":"2024-03-30"},{"lineNumber":472,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":473,"author":{"gitId":"DhiraPT"},"content":"**Extensions**","lastModifiedDate":"2024-03-30"},{"lineNumber":474,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":475,"author":{"gitId":"DhiraPT"},"content":"* 2a. The fields other than the date and time are not specified.","lastModifiedDate":"2024-03-30"},{"lineNumber":476,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":477,"author":{"gitId":"DhiraPT"},"content":"    * 2a1. PayBack shows an error message.","lastModifiedDate":"2024-03-30"},{"lineNumber":478,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":479,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-30"},{"lineNumber":480,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":481,"author":{"gitId":"DhiraPT"},"content":"* 2b. The parameters are not specified in the correct order.","lastModifiedDate":"2024-03-30"},{"lineNumber":482,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":483,"author":{"gitId":"DhiraPT"},"content":"    * 2b1. PayBack shows an error message.","lastModifiedDate":"2024-03-30"},{"lineNumber":484,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":485,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-30"},{"lineNumber":486,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":487,"author":{"gitId":"DhiraPT"},"content":"* 2c. Some parameters are specified, some are not.","lastModifiedDate":"2024-03-30"},{"lineNumber":488,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":489,"author":{"gitId":"DhiraPT"},"content":"    * 2c1. PayBack shows an error message.","lastModifiedDate":"2024-03-30"},{"lineNumber":490,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":491,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-30"},{"lineNumber":492,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":493,"author":{"gitId":"DhiraPT"},"content":"* 2d. The information entered is not in the correct format.","lastModifiedDate":"2024-03-30"},{"lineNumber":494,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":495,"author":{"gitId":"DhiraPT"},"content":"    * 2d1. PayBack shows an error message.","lastModifiedDate":"2024-03-30"},{"lineNumber":496,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":497,"author":{"gitId":"DhiraPT"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2024-03-30"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"linnn-7"},"content":"2.  Should be able to hold up to 1000 employees without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-06"},{"lineNumber":503,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"linnn-7"},"content":"4.  The system should provide real-time access to employee information with response times not exceeding 2 seconds for any query.","lastModifiedDate":"2024-03-06"},{"lineNumber":505,"author":{"gitId":"linnn-7"},"content":"5.  The app should have an intuitive user interface, allowing users to easily navigate and perform tasks without extensive training.","lastModifiedDate":"2024-03-06"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"DhiraPT"},"content":"* **Actor**: A user or any other system that interacts with the system being described","lastModifiedDate":"2024-03-07"},{"lineNumber":510,"author":{"gitId":"DhiraPT"},"content":"* **API**: Abbreviation for Application Programming Interface, a set of rules and protocols that allows different software applications to communicate with each other","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"DhiraPT"},"content":"* **Aspect**: A particular feature or consideration that needs to be taken into account when designing or implementing a system","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"DhiraPT"},"content":"* **CLI**: Abbreviation for Command Line Interface, a text-based interface used for entering commands to interact with the application","lastModifiedDate":"2024-03-07"},{"lineNumber":513,"author":{"gitId":"DhiraPT"},"content":"* **DevOps**: A set of practices that combines software development (Dev) and IT operations (Ops), aimed at shortening the systems development life cycle and providing continuous delivery with high software quality","lastModifiedDate":"2024-03-07"},{"lineNumber":514,"author":{"gitId":"DhiraPT"},"content":"* **GUI**: Abbreviation for Graphical User Interface, a type of user interface that allows users to interact with the application through graphical icons and visual indicators, as opposed to text-based interfaces like command-line interfaces (CLI)","lastModifiedDate":"2024-03-07"},{"lineNumber":515,"author":{"gitId":"DhiraPT"},"content":"* **JSON**: Abbreviation for JavaScript Object Notation, a lightweight data-interchange format that uses key-value pairs","lastModifiedDate":"2024-03-07"},{"lineNumber":516,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":517,"author":{"gitId":"DhiraPT"},"content":"* **MSS**: Abbreviation for Main Success Scenario, the main flow of events in a use case","lastModifiedDate":"2024-03-07"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"DhiraPT"},"content":"* **Tag**: A label or identifier associated with a particular record or entity in the application","lastModifiedDate":"2024-03-07"},{"lineNumber":520,"author":{"gitId":"DhiraPT"},"content":"* **UI**: Abbreviation for User Interface, refers to the interface through which users interact with the application","lastModifiedDate":"2024-03-07"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"linnn-7":37,"PateShin":57,"DhiraPT":78,"-":337,"ondretann":64}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"linnn-7"},"content":"title: PayBack User Guide","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"linnn-7"},"content":"![PayBackIcon](images/PaybackIcon.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"linnn-7"},"content":"\u003ca href\u003d\"https://www.flaticon.com/free-icons/budget\" title\u003d\"budget icons\"\u003eBudget icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"\u003ch1 style\u003d\"font-size:25px;\"\u003eWelcome Notes\u003c/h1\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"linnn-7"},"content":"Dear company managers,","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"linnn-7"},"content":"Welcome to the user guide for **PayBack**! We\u0027re thrilled to have you on board and to introduce you to the comprehensive tool designed to streamline your employee information management process.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"linnn-7"},"content":"Throughout this user guide, you will find","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"linnn-7"},"content":"- step-by-step instructions,","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"linnn-7"},"content":"- helpful tips,","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"linnn-7"},"content":"- best practices","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"linnn-7"},"content":"to make the most out of our app. From onboarding new employees to tracking their work progress, and beyond, we have got you covered.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"linnn-7"},"content":"We recommend starting with:","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"linnn-7"},"content":"- **Quick Start Guide**: This section provides a concise overview of the essential steps to launch PayBack.","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"linnn-7"},"content":"- **Key Features**: This section offers a detailed explanation of each feature, including command formats and examples.","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"linnn-7"},"content":"Thank you for choosing PayBack to optimise your company\u0027s management processes. We\u0027re committed to providing you with exceptional support along the way!","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"linnn-7"},"content":"# Table of Contents","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"linnn-7"},"content":"1. [Product Information](#product-info)","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"linnn-7"},"content":"2. [Getting Started](#getting-started)","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"linnn-7"},"content":"3. [Main Interface](#main-interface)","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"linnn-7"},"content":"   1. [User Command Panel](#user-command-panel)","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"linnn-7"},"content":"   2. [Command Result/Guidance](#command)","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"linnn-7"},"content":"   3. [Employee List](#employee-list)","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"linnn-7"},"content":"4. [Key Features](#key-features)","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"linnn-7"},"content":"   1. [Add Employee](#add)","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"linnn-7"},"content":"   2. [Delete Employee](#delete)","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"linnn-7"},"content":"   3. [Edit Employee Information](#edit)","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"linnn-7"},"content":"   4. [List All Employees](#list)","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"linnn-7"},"content":"   5. [Find An Employee](#find)","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"linnn-7"},"content":"   6. [Tag An Employee](#tag)","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"linnn-7"},"content":"   7. [Help](#help)","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"linnn-7"},"content":"   8. [View Transaction Records of An Employee](#view)","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"linnn-7"},"content":"   9. [Add A Transaction](#transaction)","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"linnn-7"},"content":"   10. [AutoComplete TextBox](#autoComplete)","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"linnn-7"},"content":"   11. [Save Data](#save-data)","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"linnn-7"},"content":"   12. [Edit the Data File](#edit-data-file)","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"linnn-7"},"content":"5. [Troubleshooting](#troubleshooting)","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"linnn-7"},"content":"   1. [Java Version Compatibility](#java-version)","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"linnn-7"},"content":"   2. [GUI Error](#gui-error)","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"linnn-7"},"content":"   3. [Transferring data to another computer](#transfer-data)","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"linnn-7"},"content":"6. [Command Summary](#command-summary)","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"linnn-7"},"content":"7. [Support and Feedback](#support)","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"linnn-7"},"content":"8. [Closing](#closing)","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"linnn-7"},"content":"## Product Information \u003ca name\u003d\"product-info\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"linnn-7"},"content":"Payback is a software designed to take the hassle out of contact management so you can focus on what’s important in your organisation -  financial transactions. Offering both Graphical User Interface (GUI) and Command Line Interface (CLI), you can be sure that it will be easy for most to learn and use.","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"linnn-7"},"content":"Our GUI has a visually intuitive environment, making it ideal for users who prefer point-and-click interactions and graphical representations of data. On the other hand, our CLI offers you the ability to perform tasks efficiently through text-based commands, allowing for rapid execution of commands.","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"linnn-7"},"content":"Key features include:","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"linnn-7"},"content":"1. Adding contacts","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"linnn-7"},"content":"2. Deleting contacts","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"linnn-7"},"content":"3. Editing contact information","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"linnn-7"},"content":"4. Listing contacts","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"linnn-7"},"content":"5. Searching for contacts","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"linnn-7"},"content":"6. Tagging contacts","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"linnn-7"},"content":"## Getting Started \u003ca name\u003d\"getting-started\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"linnn-7"},"content":"2. Download the latest `payback.jar` from [here](https://github.com/AY2324S2-CS2103T-T12-4/tp/releases).","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"linnn-7"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"linnn-7"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar payback.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"linnn-7"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"linnn-7"},"content":"   * `/list` : Lists all contacts.","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"   * `/add John Doe, 98765432, johndoe@example.com, street a, 2024` : Adds a contact named `John Doe` to the PayBack.","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"linnn-7"},"content":"   * `/delete 240001` : Deletes the contact with id 240001.","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"linnn-7"},"content":"6. Refer to the [Key Features](#key-features) below for details of each command.","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"linnn-7"},"content":"## Main Interface \u003ca name\u003d\"main-interface\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"linnn-7"},"content":"### User Command Panel: \u003ca name\u003d\"user-command-panel\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"linnn-7"},"content":"![UserCommandPanel](images/UserCommandPanel.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"linnn-7"},"content":"You can use this panel to interact with Payback by typing in your commands!","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"linnn-7"},"content":"### Command Result/Guidance: \u003ca name\u003d\"command\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"linnn-7"},"content":"![CommandResult](images/CommandResult.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"linnn-7"},"content":"Upon pressing Enter, you will be presented with the outcomes of your commands. In the event of any errors in the command format, you will receive guidance to help rectify the issue.","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"linnn-7"},"content":"### Employee List \u003ca name\u003d\"employee-list\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"linnn-7"},"content":"![EmployeeList](images/EmployeeList.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"linnn-7"},"content":"All employee information is conveniently displayed here, allowing you to easily access and review all relevant details in a straightforward manner.","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"linnn-7"},"content":"## Key Features \u003ca name\u003d\"key-features\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"linnn-7"},"content":"PayBack Application offers a range of features to a company manager to manage employees. Before we delve into the key features, let’s take a look at the command formats and the parameters.","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"linnn-7"},"content":"| Parameters | Details | Requirements     |","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"linnn-7"},"content":"|------------|---------|------------------|","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"linnn-7"},"content":"| ID         | Employee ID | Must be 6 digits |","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"linnn-7"},"content":"| NAME       | Full name of the employee  | Must be String   |","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"linnn-7"},"content":"| PHONE      | Employee\u0027s phone number    | At least 3 digits                 |","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"linnn-7"},"content":"| EMAIL      | Employee\u0027s email address   | Must include “@”                 |","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"linnn-7"},"content":"| ADDRESS    | Employee\u0027s residential address       |                  |","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"linnn-7"},"content":"| YEAR JOINED | Year the employee joined the company | Must be 4 digits                 |","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"linnn-7"},"content":"| TAG        | Add tags to categorise employees        |                  |","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"linnn-7"},"content":"### Command formats:","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"linnn-7"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"linnn-7"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"linnn-7"},"content":"- Items with …​ after them can be used multiple times.","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"linnn-7"},"content":"- Parameters can be in any order, if specified.","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"linnn-7"},"content":"Here is a closer look at each key feature.","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"linnn-7"},"content":"### Add Employee \u003ca name\u003d\"add\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"linnn-7"},"content":"This feature allows the user to add new employees to the PayBack system and automatically generate an employee ID based on the year they joined and the last ID of that year.","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"linnn-7"},"content":"There are two ways to use /add command:","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"linnn-7"},"content":"- Use the `/add` command followed by the employee\u0027s details, separated by semicolons.","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"linnn-7"},"content":"    - Format: `/add NAME; PHONE; EMAIL; ADDRESS; YEAR_JOINED; [TAG]…`","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"linnn-7"},"content":"- Use the `/add` command followed by the employee’s details, preceded by PREFIX (_:name, :phone, :email, :address, :year, :tag_)","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"linnn-7"},"content":"  - Format: `/add :name NAME :phone PHONE :email EMAIL :address ADDRESS :year YEAR_JOINED [:tag TAG]…`","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"linnn-7"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"linnn-7"},"content":"`/add :name John Doe :phone 91234567 :email johndoe@email.com :address 12 Kent Ridge Dr :year 2024 :tag Finance`","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"linnn-7"},"content":"`/add John Doe; 91234567; johndoe@email.com; 12 Kent Ridge Dr; 2024; Finance`","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"linnn-7"},"content":"### Delete Employee \u003ca name\u003d\"delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"ondretann"},"content":"This feature deletes the specified employee from the PayBack system.","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"linnn-7"},"content":"Format: `/delete ID`","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"ondretann"},"content":"**Note**:","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"ondretann"},"content":"- All transactions with `employeeId` \u003d `ID` will be deleted as well.","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"linnn-7"},"content":"`/delete 240001`: deletes the employee with 240001 ID.","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"linnn-7"},"content":"### Edit Employee Information \u003ca name\u003d\"edit\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"PateShin"},"content":"This feature edits an existing employee in PayBack.","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"linnn-7"},"content":"Format: ","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"linnn-7"},"content":"`/edit ID [:name NAME] [:phone PHONE] [:email EMAIL] [:address ADDRESS] [:tag TAG_INDEX NEW_TAG]`","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"linnn-7"},"content":"**Note**:","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"linnn-7"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"linnn-7"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"linnn-7"},"content":"- Only one tag can be edited at a time, valid tag index and new tag name must be provided.","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"linnn-7"},"content":"- Able to remove all the employee’s tags by typing `:tag -1`.","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"linnn-7"},"content":"Example:","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"linnn-7"},"content":"`/edit 240001 :phone 91234567 :email: johndoe@example.com`:","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"linnn-7"},"content":"Edits the phone number and email address of employee with ID 240001 to be 91234567 and johndoe@example.com respectively.","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"linnn-7"},"content":"`/edit 240001 :tag -1`: Removes all tags of employee with ID 240001.","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"linnn-7"},"content":"`/edit 240001 :tag 1 boss`: Changes the first tag of employee with ID 240001 to \"boss\".","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"linnn-7"},"content":"### List All Employees \u003ca name\u003d\"list\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"linnn-7"},"content":"This feature displays a list of entire employees currently stored in the PayBack system.","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"linnn-7"},"content":"Use the `/list` command to refresh the displayed list and ensure the user is viewing the full information.","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"linnn-7"},"content":"### Find An Employee \u003ca name\u003d\"find\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"linnn-7"},"content":"This feature allows a user to search for specific employees.","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"linnn-7"},"content":"Use the `/find` command followed by the appropriate prefix and keyword:","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"linnn-7"},"content":"- `:name`, Search by employee name (supports multiple keywords).","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"linnn-7"},"content":"- `:phone`, Search by phone number.","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"linnn-7"},"content":"- `:email`, Search by email address.","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"linnn-7"},"content":"- `:id`, Search by employee ID.","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"linnn-7"},"content":"- `:year`, Search by year joined.","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"linnn-7"},"content":"- `:tag`, Search by tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"linnn-7"},"content":"Example:","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"linnn-7"},"content":"`/find :name Patrick Star`:","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"linnn-7"},"content":"Searches employees with the name ‘Patrick Star’","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":208,"author":{"gitId":"linnn-7"},"content":"### Tag An Employee \u003ca name\u003d\"tag\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"linnn-7"},"content":"This feature allows a user to add “tags” to existing employees for easier identification.","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":211,"author":{"gitId":"linnn-7"},"content":"Use the `/tag` command followed by the “employee\u0027s ID” and the desired tags, separated by the `:tag` prefix.","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":213,"author":{"gitId":"linnn-7"},"content":"The application allows a user to add multiple tags to a single employee.  (e.g., “Intern”, “Developer”)","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"linnn-7"},"content":"Example:","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"linnn-7"},"content":"`/tag 240001 :tag Intern :tag Developer`:","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"linnn-7"},"content":"Tags employee 240001 with ‘Intern’ and ‘Developer’","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"linnn-7"},"content":"### View Transaction Records of An Employee \u003ca name\u003d\"view\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"ondretann"},"content":"This feature displays the transaction records of an existing employee.","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"ondretann"},"content":"Format: `/view ID`","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"ondretann"},"content":"![view_transaction](images/ViewTransaction.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"ondretann"},"content":"Transaction records will be displayed on the right side of the employee list panel, as shown above.","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"linnn-7"},"content":"### Help \u003ca name\u003d\"help\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"linnn-7"},"content":"Format: `help`","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"ondretann"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"linnn-7"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"linnn-7"},"content":"### Add A Transaction \u003ca name\u003d\"transaction\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"DhiraPT"},"content":"Adds a transaction to the specified person.","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"DhiraPT"},"content":"Format:","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"DhiraPT"},"content":"* `/transaction ID; AMOUNT; DESCRIPTION; [DATETIME]`","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"DhiraPT"},"content":"* `/transaction :id ID :amount AMOUNT :description DESCRIPTION [:datetime DATETIME]`","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"DhiraPT"},"content":"* `/transaction 240001; 2000; Salary; 30/09/2021 12:00`","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"DhiraPT"},"content":"* `/transaction :id 240001 :amount 2000 :description Salary :datetime 30/09/2021 12:00`","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"PateShin"},"content":"### AutoComplete TextBox \u003ca name\u003d\"autoComplete\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"PateShin"},"content":"Auto-complete feature allows to enter command quickly and accurately by suggesting possible completions as typing.","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"PateShin"},"content":"![AutoComplete](images/AutoComplete.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"PateShin"},"content":"#### How it works:","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"PateShin"},"content":"As a command is typed into the command box, PayBack analyzes the input and suggests possible completions based on existing commands, taking the following inputs for the command.","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"PateShin"},"content":"- Command words: PayBack will suggest matching command words as user type. For example, typing `/a` will suggest `/add`.","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"PateShin"},"content":"- The suggestions appear in a pop-up menu below the command box. Use the arrow keys to navigate the suggestions and press Enter or press tab to select the desired completion.","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"PateShin"},"content":"**Tips for Usage:**","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"PateShin"},"content":"1. Start typing the command: PayBack will begin suggesting completions after the first few characters are typed. ","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"PateShin"},"content":"2. Use the arrow keys: Navigate through the suggestions using the up and down arrow keys. ","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"PateShin"},"content":"3. Press Enter to select: Once the desired completion is seen, press Enter to select it. ","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"PateShin"},"content":"4. Ignore suggestions: If the suggestions are not helpful, continue typing the command.","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"linnn-7"},"content":"### Save Data \u003ca name\u003d\"save-data\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"linnn-7"},"content":"PayBack data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"linnn-7"},"content":"### Edit the Data File \u003ca name\u003d\"edit-data-file\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":274,"author":{"gitId":"linnn-7"},"content":"PayBack data are saved automatically as a JSON file `[JAR file location]/data/payback.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"linnn-7"},"content":"If modifications to the data file result in an invalid format, PayBack will discard all data and initiate the next run with an empty data file. ","lastModifiedDate":"2024-03-06"},{"lineNumber":278,"author":{"gitId":"linnn-7"},"content":"Therefore, it is advisable to create a backup of the file before making any edits. ","lastModifiedDate":"2024-03-06"},{"lineNumber":279,"author":{"gitId":"linnn-7"},"content":"Additionally, specific changes may lead to unexpected behavior in PayBack, such as if a value entered falls outside the acceptable range. Hence, proceed with editing the data file only if you are certain that you can make accurate updates.","lastModifiedDate":"2024-03-06"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-06"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":285,"author":{"gitId":"linnn-7"},"content":"## Troubleshooting \u003ca name\u003d\"troubleshooting\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":287,"author":{"gitId":"linnn-7"},"content":"### 1. Java Version Compatibility \u003ca name\u003d\"java-version\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"linnn-7"},"content":"Ensure you have Java 11 or above installed on your computer. PayBack requires Java 11 or later to function properly. You can download and install the latest version of Java from the official Java website (https://www.oracle.com/java).","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":290,"author":{"gitId":"linnn-7"},"content":"### 2. GUI Error \u003ca name\u003d\"gui-error\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"linnn-7"},"content":"If you utilise multiple screens and relocate the application to a secondary screen, then subsequently revert to using only the primary screen, the graphical user interface (GUI) may open out of view. To resolve this issue, you can delete the preferences.json file generated by the application before launching it again.","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":293,"author":{"gitId":"linnn-7"},"content":"### 3. Transferring data to another computer \u003ca name\u003d\"transfer-data\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"linnn-7"},"content":"When installing PayBack on another computer, you can replace the empty data file it generates (e.g., payback.json) with the file containing the data from your previous PayBack home folder. This will ensure that your existing data is seamlessly transferred to the new installation.","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":296,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-06"},{"lineNumber":297,"author":{"gitId":"linnn-7"},"content":"## Command Summary \u003ca name\u003d\"command-summary\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2024-04-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"linnn-7"},"content":"**Add** | `/add NAME; PHONE; EMAIL; ADDRESS; YEAR_JOINED; [TAG]…` \u003cbr\u003e e.g., `/add :name John Doe :phone 91234567 :email johndoe@email.com :address 12 Kent Ridge Dr :year 2024 :tag Finance`","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"linnn-7"},"content":"**Delete** | `/delete ID`\u003cbr\u003e e.g., `/delete 240001`","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"linnn-7"},"content":"**Edit** | `/edit ID [:name NAME] [:phone PHONE] [:email EMAIL] [:address ADDRESS] [:tag TAG_INDEX NEW_TAG]`\u003cbr\u003e e.g.,`/edit 240001 :phone 91234567 :email: johndoe@example.com`","lastModifiedDate":"2024-04-02"},{"lineNumber":304,"author":{"gitId":"linnn-7"},"content":"**List** | `/list`","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"linnn-7"},"content":"**Find** | `/find :name [name]`\u003cbr\u003e`/find :email [email]`\u003cbr\u003e`/find :phone [phone number]`\u003cbr\u003e`/find :id [ID]`\u003cbr\u003e`/find :year [year]`\u003cbr\u003e`/find :tag [tag]`\u003cbr\u003e\u003cbr\u003e e.g., `find :name John`","lastModifiedDate":"2024-04-02"},{"lineNumber":306,"author":{"gitId":"linnn-7"},"content":"**Tag** | `/tag` \u003cbr\u003e e.g., `/tag 240001 :tag Intern :tag Developer`","lastModifiedDate":"2024-04-02"},{"lineNumber":307,"author":{"gitId":"linnn-7"},"content":"**Help** | `/help`","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"linnn-7"},"content":"**View** | `/view ID` \u003cbr\u003e e.g., `/view 240001`","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"linnn-7"},"content":"**Transaction** | `/transaction :id ID :amount AMOUNT :description DESCRIPTION [:datetime DATETIME]` \u003cbr\u003e e.g., `/transaction :id 240001 :amount 2000 :description Salary :datetime 30/09/2021 12:00`","lastModifiedDate":"2024-04-02"},{"lineNumber":310,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":311,"author":{"gitId":"linnn-7"},"content":"## Support and Feedback \u003ca name\u003d\"support\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"linnn-7"},"content":"Dear Company Managers,","lastModifiedDate":"2024-04-02"},{"lineNumber":313,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":314,"author":{"gitId":"linnn-7"},"content":"If you encounter any difficulties, have questions, or require assistance while using PayBack, please do not hesitate to reach out to our dedicated support team. You can contact us through the following channels:","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":316,"author":{"gitId":"linnn-7"},"content":"- Email: someone@nus.edu.sg","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"linnn-7"},"content":"- Phone: +65 23142412","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":319,"author":{"gitId":"linnn-7"},"content":"We genuinely appreciate your partnership and look forward to serving you better with your continued support and feedback!","lastModifiedDate":"2024-04-02"},{"lineNumber":320,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":321,"author":{"gitId":"linnn-7"},"content":"## Closing \u003ca name\u003d\"closing\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"linnn-7"},"content":"As you conclude your journey of PayBack through this user guide, we want to express our gratitude for choosing us to streamline your company’s management processes. We hope the information provided will be valuable in helping you harness the full potential of PayBack.","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"linnn-7"},"content":"Thank you once again for choosing PayBack. We look forward to serving you and your team, and we wish you continued success in all your endeavours!","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"linnn-7":194,"PateShin":15,"DhiraPT":8,"-":95,"ondretann":12}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"linnn-7"},"content":"    content: \"PayBack\";","lastModifiedDate":"2024-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"linnn-7":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"user -[USER_COLOR]\u003e ui : \"/delete 240001\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"/delete 240001\")","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"logic -[LOGIC_COLOR]\u003e storage : savePayBack(payback)","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":3,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"PayBack *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"PayBack *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"UniquePersonList -right-\u003e \"*\" Person","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"Person *--\u003e Id","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"Person *--\u003e YearJoined","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":2,"DhiraPT":3,"-":18}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"if () then ([command commits PayBack])","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    :Save PayBack to","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    payBackStateList;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":3,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"participant \":PayBackParser\" as PayBackParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"linnn-7"},"content":"[-\u003e LogicManager : execute(\"/delete 240001\")","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"LogicManager -\u003e PayBackParser : parseCommand(\"/delete 240001\")","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"activate PayBackParser","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"PayBackParser -\u003e DeleteCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"DeleteCommandParser --\u003e PayBackParser","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"PayBackParser -\u003e DeleteCommandParser : parse(\"240001\")","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"DeleteCommandParser --\u003e PayBackParser : d","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"DeleteCommandParser -[hidden]-\u003e PayBackParser","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"PayBackParser --\u003e LogicManager : d","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"deactivate PayBackParser","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"linnn-7"},"content":"DeleteCommand -\u003e Model : deletePerson(240001)","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"linnn-7":2,"PateShin":10,"-":58}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyPayback\" as ReadOnlyPayback","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"Class Payback","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"Class Id","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"Class UniqueTransactionList","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"Class Transaction","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"Class TransactionId","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"Class DateTime","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"Class Amount","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"Class Description","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"Payback .up.|\u003e ReadOnlyPayback","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"Model .left.\u003e ReadOnlyPayback","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"ModelManager -left-\u003e \"1\" Payback","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"Payback *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"Person *--\u003e Id","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"Payback *--\u003e \"1\" UniqueTransactionList","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"UniqueTransactionList --\u003e \"~* all\" Transaction","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"Transaction *--\u003e TransactionId","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"Transaction *--\u003e DateTime","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"Transaction *--\u003e Amount","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"Transaction *--\u003e Description","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"Transaction --\u003e Id","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":6,"-":50,"ondretann":15}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"Class PaybackParser","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"HiddenOutside ..\u003e PaybackParser","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"PaybackParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"PaybackParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"PateShin":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"package \"PayBack Storage\" #F4F6F6{","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPayBackStorage\" as PayBackStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"Class JsonPayBackStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"Class JsonSerializablePayBack","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"StorageManager -up-\u003e \"1\" PayBackStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"Storage -right-|\u003e PayBackStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"JsonPayBackStorage .up.|\u003e PayBackStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"JsonPayBackStorage ..\u003e JsonSerializablePayBack","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"JsonSerializablePayBack --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":9,"-":34}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    class State1 as \"\u003cu\u003eab0:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    class State2 as \"\u003cu\u003eab1:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    class State3 as \"\u003cu\u003eab2:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":3,"-":18}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    class State1 as \"\u003cu\u003eab0:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    class State2 as \"\u003cu\u003eab1:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    class State3 as \"\u003cu\u003eab2:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    class State1 as \"\u003cu\u003eab0:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    class State2 as \"\u003cu\u003eab1:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    class State3 as \"\u003cu\u003eab2:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    class State1 as \"\u003cu\u003eab0:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    class State2 as \"\u003cu\u003eab1:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    class State3 as \"\u003cu\u003eab3:PayBack\u003c/u\u003e\"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":3,"-":19}},{"path":"docs/diagrams/UndoSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"participant \":PayBackParser\" as PayBackParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"LogicManager -\u003e PayBackParser : parseCommand(undo)","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"activate PayBackParser","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"PayBackParser -\u003e UndoCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"UndoCommand --\u003e PayBackParser","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"PayBackParser --\u003e LogicManager : u","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"deactivate PayBackParser","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"UndoCommand -\u003e Model : undoPayBack()","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PateShin":8,"-":38}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"participant \":VersionedPayBack\" as VersionedPayBack MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"[-\u003e Model : undoPayBack()","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"Model -\u003e VersionedPayBack : undo()","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"activate VersionedPayBack","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"VersionedPayBack -\u003e VersionedPayBack :resetData(ReadOnlyPayBack)","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"VersionedPayBack --\u003e Model :","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"deactivate VersionedPayBack","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"[\u003c-- Model","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"PateShin":7,"-":16}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"linnn-7"},"content":"title: PayBack","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"linnn-7"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T12-4/tp/graph/badge.svg?token\u003d2O08Y4YRPC)](https://codecov.io/gh/AY2324S2-CS2103T-T12-4/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"linnn-7"},"content":"**PayBack is a desktop application for managing your employee details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"linnn-7"},"content":"* If you are interested in using PayBack, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"linnn-7"},"content":"* If you are interested about developing PayBack, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"linnn-7":5,"-":13}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"DhiraPT"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/payback.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"DhiraPT":1,"-":398}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"import seedu.address.storage.JsonPayBackStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"import seedu.address.storage.PayBackStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PayBack ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        PayBackStorage payBackStorage \u003d new JsonPayBackStorage(userPrefs.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"        storage \u003d new StorageManager(payBackStorage, userPrefsStorage);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s PayBack and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"        logger.info(\"Using data file : \" + storage.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"PateShin"},"content":"        Optional\u003cReadOnlyPayBack\u003e payBackOptional;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"PateShin"},"content":"        ReadOnlyPayBack initialData;","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"            payBackOptional \u003d storage.readPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"PateShin"},"content":"            if (!payBackOptional.isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"PateShin"},"content":"                logger.info(\"Creating a new data file \" + storage.getPayBackFilePath()","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"                        + \" populated with a sample PayBack.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"PateShin"},"content":"            initialData \u003d payBackOptional.orElseGet(SampleDataUtil::getSamplePayBack);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"PateShin"},"content":"            logger.warning(\"Data file at \" + storage.getPayBackFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"                    + \" Will be starting with an empty PayBack.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"            initialData \u003d new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"PateShin"},"content":"        logger.info(\"Starting PayBack \" + MainApp.VERSION);","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"PateShin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping PayBack ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PateShin":21,"-":165}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    private static final String LOG_FILE \u003d \"payback.log\";","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PateShin":1,"-":105}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"linnn-7"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"linnn-7"},"content":"     * Returns true if {@code s} represents a 6-digit number in range (100000, 999999).","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"linnn-7"},"content":"     * e.g. 240001, 240002, ..., \u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"linnn-7"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"linnn-7"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"linnn-7"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"linnn-7"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"linnn-7"},"content":"    public static boolean isSixDigitNumber(String s) {","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"linnn-7"},"content":"        requireNonNull(s);","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"linnn-7"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"linnn-7"},"content":"            return s.matches(\"[1-9]\\\\d{5}\")","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"linnn-7"},"content":"                    \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"linnn-7"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"linnn-7"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"linnn-7":18,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"     * Returns the PayBack.","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"     * @see seedu.address.model.Model#getPayBack()","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"    ReadOnlyPayBack getPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"    /** Returns an unmodifiable view of the filtered list of transactions */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"     * Returns an empty unmodifiable view of the  list of transactions","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"    ObservableList\u003cTransaction\u003e getEmptyTransactionList();","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    Path getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"PateShin":5,"DhiraPT":4,"-":45,"ondretann":5}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.DeleteConfirmationCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.parser.ConfirmationStageParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"import seedu.address.logic.parser.PayBackParser;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    private final PayBackParser payBackParser;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"    private final ConfirmationStageParser confirmationStageParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"    private LogicState state \u003d LogicState.NORMAL;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        payBackParser \u003d new PayBackParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"        confirmationStageParser \u003d new ConfirmationStageParser();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"        switch(state) {","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"        case NORMAL:","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"            command \u003d payBackParser.parseCommand(model, commandText);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"        case CONFIRMDELETE:","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"            command \u003d confirmationStageParser.parseCommand(commandText);","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"        default:","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"ondretann"},"content":"        if (command instanceof DeleteConfirmationCommand) {","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"            state \u003d LogicState.CONFIRMDELETE;","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ondretann"},"content":"            state \u003d LogicState.NORMAL;","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"PateShin"},"content":"            storage.savePayBack(model.getPayBack());","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"    public ReadOnlyPayBack getPayBack() {","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"        return model.getPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"DhiraPT"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"DhiraPT"},"content":"        return model.getFilteredTransactionList();","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"ondretann"},"content":"    public ObservableList\u003cTransaction\u003e getEmptyTransactionList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"ondretann"},"content":"        model.updateFilteredTransactionList(unused -\u003e false);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"ondretann"},"content":"        return model.getFilteredTransactionList();","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"    public Path getPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"        return model.getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"PateShin":9,"DhiraPT":5,"-":79,"ondretann":30}},{"path":"src/main/java/seedu/address/logic/LogicState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":" * Different states the logic class can have.","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"public enum LogicState {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"    NORMAL,","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"    CONFIRMDELETE","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ondretann":9}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"linnn-7"},"content":"    public static final String TAG_INVALID_INDEX \u003d \"The tag index provided is invalid\";","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"linnn-7"},"content":"    public static final String TAG_NO_INDEX \u003d \"The tag index provided is not provided\";","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_ID \u003d \"The person with the ID provided is not found\";","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"                .append(\"; ID: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"                .append(person.getId())","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"     * Formats the {@code transaction} for display to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    public static String format(Transaction transaction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        builder.append(\"Transaction ID: \")","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"                .append(transaction.getId())","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"                .append(\"; DateTime: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"                .append(transaction.getDateTime())","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"                .append(\"; Employee ID: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"                .append(transaction.getEmployeeId())","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"                .append(\"; Amount: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"                .append(transaction.getAmount())","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"                .append(transaction.getDescription());","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linnn-7":2,"DhiraPT":22,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AbortDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":" * Aborts the deletion of command.","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"public class AbortDeleteCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deletion aborted.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"        model.setLastMentionedPerson(null);","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ondretann":19}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR_JOINED;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":" * Adds an employee to PayBack.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    public static final String COMMAND_WORD \u003d \"/add\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Follows:\\n:name NAME :phone PHONE :email EMAIL \"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            + \":address ADDRESS :year YEAR_JOINED :tag TAG\";","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an employee to the address book.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"            + \"Format:\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"            + \"• \" + COMMAND_WORD + \" NAME; PHONE; EMAIL; ADDRESS; YEAR_JOINED; [TAG]...\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"            + \"• \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"linnn-7"},"content":"            + PREFIX_ADDRESS + \" ADDRESS\"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"linnn-7"},"content":"            + PREFIX_YEAR_JOINED + \" YEAR_JOINED\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"            + \"• \" + COMMAND_WORD + \" John Doe; 98765432; johnd@example.com; Street A; 2024; Software Developer\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"            + \"• \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"linnn-7"},"content":"            + PREFIX_ADDRESS + \" Street A\"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"            + PREFIX_YEAR_JOINED + \" 2024\"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"            + PREFIX_TAG + \" Software Developer\";","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New employee added: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This employee already exists in PayBack\";","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linnn-7":3,"PateShin":10,"DhiraPT":8,"-":72}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":" * Clears PayBack.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public static final String COMMAND_WORD \u003d \"/clear\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Payback has been cleared!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        model.setPayBack(new PayBack());","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PateShin":5,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/CommandData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":" * Encapsulates command words and their associated follow-up messages for auto-completion and guidance.","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":" * This class provides a central point of reference for command words and messages,","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"public class CommandData {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"     * A map holding command words as keys and their associated follow-up messages as values.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    private static final Map\u003cString, String\u003e commandFollowMessages \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    static {","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(AddCommand.COMMAND_WORD, AddCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(EditCommand.COMMAND_WORD, EditCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(ExitCommand.COMMAND_WORD, ExitCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(DeleteCommand.COMMAND_WORD, DeleteCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(FindCommand.COMMAND_WORD, FindCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(HelpCommand.COMMAND_WORD, HelpCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(TagCommand.COMMAND_WORD, TagCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(TransactionCommand.COMMAND_WORD, TransactionCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        commandFollowMessages.put(ListCommand.COMMAND_WORD, ListCommand.FOLLOW_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"     * Retrieves the follow-up message associated with a given command word.","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"     * @param commandWord The command word whose follow-up message is to be retrieved.","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"     * @return The follow-up message for the given command word; an empty string if none exists.","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    public static String getFollowMessage(String commandWord) {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"        return commandFollowMessages.getOrDefault(commandWord, \"\");","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"     * Returns an array of all command words.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"     * A complete list of command words defined in the application.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"     * @return An array containing all command words.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"    public static String[] getCommandWords() {","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"        return commandFollowMessages.keySet().toArray(new String[0]);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"PateShin":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"    public static final String COMMAND_WORD \u003d \"/delete\";","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Follows:\\nID\";","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"            + \": Deletes the person identified by the id number provided.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"            + \"Parameters: ID (must be a positive 6-digit number)\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"            + \"Example: \" + COMMAND_WORD + \" 240001\";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"        Person personToDelete \u003d model.getLastMentionedPerson();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"        assert(personToDelete !\u003d null);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"        Id id \u003d personToDelete.getId();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        model.updateFilteredTransactionList(transaction -\u003e transaction.getEmployeeId().equals(id));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"        List\u003cTransaction\u003e transactionsToDelete \u003d model.getFilteredTransactionList();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"        for (int i \u003d 0; i \u003c transactionsToDelete.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"            model.deleteTransaction(transactionsToDelete.get(i));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"        return (other instanceof DeleteCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PateShin":1,"-":38,"ondretann":15}},{"path":"src/main/java/seedu/address/logic/commands/DeleteConfirmationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":" * Displays details of user to be deleted, allowing user to confirm/abort.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"public class DeleteConfirmationCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Are you sure you want to delete the following person?:\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"            + \" %1$s\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"            + \"(Y/N)\";","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"    private final Id id;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"     * Creates a DeleteConfirmationCommand to allow user to confirm/abort the deletion of employee.","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"     * @param id ID of the worker to be deleted.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"    public DeleteConfirmationCommand(Id id) {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"        Person personToDelete \u003d lastShownList","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"                .stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"                .filter(person -\u003e person.getId().value \u003d\u003d (this.id.value))","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"                .findFirst()","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"                .orElse(null);","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"        if (personToDelete \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"        model.setLastMentionedPerson(personToDelete);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"        if (!(other instanceof DeleteConfirmationCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"        DeleteConfirmationCommand otherDeleteCommand \u003d (DeleteConfirmationCommand) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ondretann"},"content":"        return id.equals(otherDeleteCommand.id);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ondretann"},"content":"                .add(\"targetIndex\", id)","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ondretann"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ondretann":77}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"linnn-7"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"linnn-7"},"content":"    public static final String COMMAND_WORD \u003d \"/edit\";","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Follows:\\nID :phone PHONE and/or :email EMAIL \"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"            + \"and/or :tag INDEX NEW_TAG\";","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"linnn-7"},"content":"            + \"by the id number provided.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"            + \"Parameters: ID (must be a positive 6-digit number) \"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"linnn-7"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] + [TAG_INDEX] + [NEW_TAG]\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"linnn-7"},"content":"            + \"Example: \" + COMMAND_WORD + \" 240001 \"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"linnn-7"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"linnn-7"},"content":"            + PREFIX_TAG + \" 1 friend\";","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"linnn-7"},"content":"    private final Id id;","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"linnn-7"},"content":"     * @param id of the person stored in the data file to edit","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"linnn-7"},"content":"    public EditCommand(Id id, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"linnn-7"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"linnn-7"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"linnn-7"},"content":"        Person personToEdit \u003d lastShownList","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"linnn-7"},"content":"                .stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"linnn-7"},"content":"                .filter(person -\u003e person.getId().value \u003d\u003d (this.id.value))","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"linnn-7"},"content":"                .findFirst()","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"linnn-7"},"content":"                .orElse(null);","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"linnn-7"},"content":"        if (personToEdit \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"linnn-7"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"linnn-7"},"content":"        editPersonDescriptor.setTags(personToEdit.getTags());","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"linnn-7"},"content":"        editPersonDescriptor.setUpdatedTags();","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"DhiraPT"},"content":"        Id id \u003d personToEdit.getId();","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"DhiraPT"},"content":"        YearJoined yearJoined \u003d personToEdit.getYearJoined();","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"DhiraPT"},"content":"        return new Person(id, updatedName, updatedPhone, updatedEmail, updatedAddress, yearJoined, updatedTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"linnn-7"},"content":"        return id.equals(otherEditCommand.id)","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"linnn-7"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"linnn-7"},"content":"        private Id id;","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"linnn-7"},"content":"        private YearJoined yearJoined;","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"linnn-7"},"content":"        private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"linnn-7"},"content":"        private Pair\u003cInteger, String\u003e updateTagInfo;","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"linnn-7"},"content":"            setId(toCopy.id);","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"linnn-7"},"content":"            setYearJoined(toCopy.yearJoined);","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"linnn-7"},"content":"            if (toCopy.tags \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":172,"author":{"gitId":"linnn-7"},"content":"                setTags(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"linnn-7"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"linnn-7"},"content":"            setUpdateTagInfo(toCopy.updateTagInfo);","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"linnn-7"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address);","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"linnn-7"},"content":"        public void setId(Id id) {","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"linnn-7"},"content":"            this.id \u003d id;","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"linnn-7"},"content":"        public void setYearJoined(YearJoined yearJoined) {","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"linnn-7"},"content":"            this.yearJoined \u003d yearJoined;","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"linnn-7"},"content":"        public Optional\u003cYearJoined\u003e getYearJoined() {","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"linnn-7"},"content":"            return Optional.ofNullable(yearJoined);","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":230,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"linnn-7"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"linnn-7"},"content":"         * Stores tag info to be updated later.","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"linnn-7"},"content":"         * @param tagInfo A pair of index and new tag name.","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"linnn-7"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"linnn-7"},"content":"        public void setUpdateTagInfo(Pair\u003cInteger, String\u003e tagInfo) {","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"linnn-7"},"content":"            updateTagInfo \u003d tagInfo;","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"linnn-7"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"linnn-7"},"content":"         * Sets {@code tagInfo} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"linnn-7"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"linnn-7"},"content":"        public void setUpdatedTags() {","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"linnn-7"},"content":"            if (updateTagInfo \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"linnn-7"},"content":"                return;","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"linnn-7"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"linnn-7"},"content":"            if (updateTagInfo.getKey() \u003e this.tags.size()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"linnn-7"},"content":"                return;","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"linnn-7"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"linnn-7"},"content":"            if (updateTagInfo.getKey() \u003d\u003d -1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"linnn-7"},"content":"                this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"linnn-7"},"content":"            } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"linnn-7"},"content":"                Object[] newTags \u003d tags.toArray();","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"linnn-7"},"content":"                newTags[updateTagInfo.getKey() - 1] \u003d new Tag(updateTagInfo.getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"linnn-7"},"content":"                Tag[] tag \u003d new Tag[tags.size()];","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"linnn-7"},"content":"                for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"linnn-7"},"content":"                    tag[i] \u003d (Tag) newTags[i];","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"linnn-7"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"linnn-7"},"content":"                tags \u003d Set.of(tag);","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"linnn-7"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":292,"author":{"gitId":"linnn-7"},"content":"                    \u0026\u0026 Objects.equals(yearJoined, otherEditPersonDescriptor.yearJoined)","lastModifiedDate":"2024-03-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":305,"author":{"gitId":"linnn-7"},"content":"                    .add(\"year joined\", yearJoined)","lastModifiedDate":"2024-03-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"linnn-7":81,"PateShin":2,"DhiraPT":6,"-":222}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    public static final String COMMAND_WORD \u003d \"/exit\";","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Exit from Payback\";","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting PayBack as requested ...\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"PateShin":4,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"    public static final String COMMAND_WORD \u003d \"/find\";","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Follows:\\n:id, :name, :phone, :email, :year, :tag\";","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons who match the given search criteria \"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"            + \"Parameters: /find PREFIX [KEYWORD]\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            + \"Example: \" + COMMAND_WORD + \" :name Patrick\";","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"        return predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"PateShin":15,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    public static final String COMMAND_WORD \u003d \"/help\";","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PateShin":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":" * Lists all persons in PayBack to the user.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public static final String COMMAND_WORD \u003d \"/list\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Shows list of all employee\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed and Refreshed the workers recorded in the system\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PateShin":5,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":" * Tags an employee in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"    public static final String COMMAND_WORD \u003d \"/tag\";","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Follows:\\nID :tag TAG\";","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Tags an employee in the address book.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"            + \"Format:\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"            + \"• \" + COMMAND_WORD + \" ID \" + PREFIX_TAG + \" TAG...\\n \"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"            + \"• \" + COMMAND_WORD + \" 240001 \" + PREFIX_TAG + \" Finance \" + PREFIX_TAG + \" Manager\\n\";","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Employee tagged\\n\";","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"    public static final String MESSAGE_DUPLICATE_TAGS \u003d \"All tags are already present in the employee!\";","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"    private final Id id;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"     * @param id Id of {@Code Person} to tag.","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"     * @param tags Set of (@Code Tag} to tag {@Code Person} with.","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"    public TagCommand(Id id, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"        Person personToTag \u003d lastShownList","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"                .stream()","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"                .filter(person -\u003e person.getId().value \u003d\u003d (this.id.value))","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"                .findFirst()","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"                .orElse(null);","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"        if (personToTag \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ondretann"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"ondretann"},"content":"        Person editedPerson \u003d addTagsToPerson(personToTag, tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"        model.setPerson(personToTag, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ondretann"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ondretann"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ondretann"},"content":"     * Adds a set of tags to an existing {@Code Person}.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ondretann"},"content":"     * Returns a new (@Code Person} with the added set of tags.","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ondretann"},"content":"    private Person addTagsToPerson(Person personToTag, Set\u003cTag\u003e tagsToAdd) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ondretann"},"content":"        Id id \u003d personToTag.getId();","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ondretann"},"content":"        Name name \u003d personToTag.getName();","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ondretann"},"content":"        Email email \u003d personToTag.getEmail();","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ondretann"},"content":"        Phone phone \u003d personToTag.getPhone();","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ondretann"},"content":"        YearJoined yearJoined \u003d personToTag.getYearJoined();","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ondretann"},"content":"        Address address \u003d personToTag.getAddress();","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tags \u003d personToTag.getTags();","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ondretann"},"content":"        int originalLength \u003d tags.size();","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ondretann"},"content":"        tagsToAdd.addAll(tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ondretann"},"content":"        int newLength \u003d tagsToAdd.size();","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ondretann"},"content":"        if (originalLength \u003d\u003d newLength) {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ondretann"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TAGS);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"DhiraPT"},"content":"        Person editedPerson \u003d new Person(id, name, phone, email, address, yearJoined, tagsToAdd);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ondretann"},"content":"        return editedPerson;","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ondretann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"ondretann"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"ondretann"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ondretann"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"ondretann"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"ondretann"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"ondretann"},"content":"        TagCommand otherTagCommand \u003d (TagCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"ondretann"},"content":"        return id.equals(otherTagCommand.id)","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"ondretann"},"content":"                \u0026\u0026 tags.equals(otherTagCommand.tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"ondretann"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"ondretann"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"ondretann"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"ondretann"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"ondretann"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"PateShin":2,"DhiraPT":1,"ondretann":129}},{"path":"src/main/java/seedu/address/logic/commands/TransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":" * Adds a transaction to PayBack.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"public class TransactionCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    public static final String COMMAND_WORD \u003d \"/transaction\";","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    public static final String FOLLOW_MESSAGE \u003d \"Follows\\nID; AMOUNT; DESCRIPTION; [DATETIME]\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a transaction to PayBack.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"            + \"Format:\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"            + \"• \" + COMMAND_WORD + \" ID; AMOUNT; DESCRIPTION; [DATETIME]\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"            + \"• \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"            + PREFIX_ID + \" ID \"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"            + PREFIX_AMOUNT + \" AMOUNT \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"            + PREFIX_DESCRIPTION + \" DESCRIPTION \"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"            + \"[\" + PREFIX_DATETIME + \" DATETIME]\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"            + \"• \" + COMMAND_WORD + \" 240001; 4500; Salary; 14/05/2024 12:00\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"            + \"• \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"            + PREFIX_ID + \" 240001 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"            + PREFIX_AMOUNT + \" 4500 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"            + PREFIX_DESCRIPTION + \" Salary \"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"            + PREFIX_DATETIME + \" 14/05/2024 12:00\";","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New transaction added: %1$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d \"This transaction already exists in PayBack\";","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"    private final Transaction toAdd;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"     * Creates a TransactionCommand to add the specified {@code Transaction}","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"    public TransactionCommand(Transaction transaction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        toAdd \u003d transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"        if (model.hasTransaction(toAdd)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        model.addTransaction(toAdd);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof TransactionCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"        TransactionCommand otherTransactionCommand \u003d (TransactionCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"        return toAdd.equals(otherTransactionCommand.toAdd);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"                .toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"PateShin":2,"DhiraPT":83}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":" * Command that displays all transactions for the specified employee.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"    public static final String COMMAND_WORD \u003d \"/view\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"            + \": Views the transaction of the person identified by the id number provided.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"            + \"Parameters: ID (must be a positive 6-digit number)\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"            + \"Example: \" + COMMAND_WORD + \" 240001\";","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewed Person: %1$s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"    private final Id id;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"    private final Predicate\u003cTransaction\u003e predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"     * Constructs a ViewCommand with specified Id.","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"    public ViewCommand(Id id) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        predicate \u003d transaction -\u003e transaction.getEmployeeId().equals(id);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"        Person personToView \u003d lastShownList","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"                .stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"                .filter(person -\u003e person.getId().value \u003d\u003d (this.id.value))","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"                .findFirst()","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"                .orElse(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"        if (personToView \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"        model.updateFilteredTransactionList(predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, Messages.format(personToView)));","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ondretann"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ondretann"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ondretann"},"content":"        return id.equals(otherViewCommand.id);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ondretann"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ondretann"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ondretann"},"content":"                .add(\"targetIndex\", id)","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ondretann"},"content":"                .toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ondretann":83}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR_JOINED;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    private final Model model;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a new AddCommandParser.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"     * @param model Model to be used in parsing.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"    public AddCommandParser(Model model) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        this.model \u003d model;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        if (args.matches(\"\\\\s+[^;].*(?:;\\\\s+[^;].*){3,}\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"            args \u003d Parser.appendPrefixes(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"                    PREFIX_YEAR_JOINED, PREFIX_TAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"                        PREFIX_YEAR_JOINED, PREFIX_TAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"        YearJoined yearJoined \u003d ParserUtil.parseYearJoined(argMultimap.getValue(PREFIX_YEAR_JOINED).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"        Person person \u003d new Person(model, name, phone, email, address, yearJoined, tagList);","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"DhiraPT":24,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\":name\");","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\":phone\");","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\":email\");","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"    public static final Prefix PREFIX_YEAR_JOINED \u003d new Prefix(\":year\");","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\":id\");","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\":address\");","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\":tag\");","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"    public static final Prefix PREFIX_AMOUNT \u003d new Prefix(\":amount\");","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\":description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\":datetime\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"PateShin":3,"DhiraPT":7,"-":9}},{"path":"src/main/java/seedu/address/logic/parser/ConfirmationStageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.AbortDeleteCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":" * Parses user inputs after confirmation message is shown to user.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"public class ConfirmationStageParser {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PayBackParser.class);","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"     * Parses user input to either return DeleteCommand or AbortDeleteCommand.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"        switch(userInput.toLowerCase()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"        case \"y\":","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"            return new DeleteCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"        case \"n\":","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"            return new AbortDeleteCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"        default:","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ondretann":33}},{"path":"src/main/java/seedu/address/logic/parser/DeleteConfirmationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.DeleteConfirmationCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":" * Parses user input and creates a DeleteConfirmationCommand object.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"public class DeleteConfirmationCommandParser implements Parser\u003cDeleteConfirmationCommand\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"    public DeleteConfirmationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"            Id id \u003d ParserUtil.parseId(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"            return new DeleteConfirmationCommand(id);","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":14,"ondretann":12}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"linnn-7"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"linnn-7"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"linnn-7"},"content":"        Id id;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"linnn-7"},"content":"            id \u003d ParserUtil.parseId(argMultimap.getPreamble());","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"linnn-7"},"content":"        if (parseTagsForEdit(argMultimap.getValue(PREFIX_TAG)).isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"linnn-7"},"content":"        parseTagsForEdit(argMultimap.getValue(PREFIX_TAG)).ifPresent(editPersonDescriptor::setUpdateTagInfo);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"linnn-7"},"content":"        return new EditCommand(id, editPersonDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"linnn-7"},"content":"    private Optional\u003cPair\u003cInteger, String\u003e\u003e parseTagsForEdit(Optional\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"linnn-7"},"content":"        return Optional.of(ParserUtil.parseUpdatedTags(tags));","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"linnn-7":9,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.IdEqualsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.TagEqualsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.YearJoinedEqualsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"                CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_ID, CliSyntax.PREFIX_YEAR_JOINED, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"            List\u003cString\u003e keywords \u003d Arrays.asList(","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_NAME).get().split(\"\\\\s+\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        } else if (argMultimap.getValue(CliSyntax.PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"            return new FindCommand(new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"                    argMultimap.getAllValues(CliSyntax.PREFIX_PHONE)));","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"        } else if (argMultimap.getValue(CliSyntax.PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"            return new FindCommand(new EmailContainsKeywordsPredicate(","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"                    argMultimap.getAllValues(CliSyntax.PREFIX_EMAIL)));","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        } else if (argMultimap.getValue(CliSyntax.PREFIX_ID).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"            return new FindCommand(new IdEqualsPredicate(","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_ID).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        } else if (argMultimap.getValue(CliSyntax.PREFIX_YEAR_JOINED).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"            return new FindCommand(new YearJoinedEqualsPredicate(","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_YEAR_JOINED).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"        } else if (argMultimap.getValue(CliSyntax.PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"            return new FindCommand(new TagEqualsPredicate(","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_TAG).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"PateShin":30,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"     * Appends prefixes to the given arguments.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"     * @param args Arguments to append prefixes to.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"     * @param prefixes Prefixes to append.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"     * @return Arguments with prefixes appended.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    static String appendPrefixes(String args, Prefix... prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"        String[] argsArr \u003d args.trim().split(\";\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"        for (int i \u003d 0; i \u003c Math.min(prefixes.length, argsArr.length); i++) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"            result.append(\" \").append(prefixes[i]).append(\" \").append(argsArr[i]);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        return result.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"DhiraPT":15,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.Messages.TAG_INVALID_INDEX;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"linnn-7"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"linnn-7"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"linnn-7"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.DateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Description;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"linnn-7"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"linnn-7"},"content":"     * Parses {@code id} into an {@code id} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"linnn-7"},"content":"     * trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"linnn-7"},"content":"     * @throws ParseException if the specified id is invalid (not 6-digit number).","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"linnn-7"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"linnn-7"},"content":"    public static Id parseId(String id) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"linnn-7"},"content":"        String trimmedIndex \u003d id.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"linnn-7"},"content":"        if (!StringUtil.isSixDigitNumber(trimmedIndex)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"linnn-7"},"content":"        return new Id(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"linnn-7"},"content":"        String trimmedAddress \u003d address.replace(\":tag\", \"\").trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"linnn-7"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"linnn-7"},"content":"     * Returns a pair of valid index and new tag name.","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"linnn-7"},"content":"     * @param tag Specific tag name to be updated.","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"linnn-7"},"content":"     * @return A pair of valid index and tag name.","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"linnn-7"},"content":"     * @throws ParseException Alerts users for invalid input.","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"linnn-7"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"linnn-7"},"content":"    public static Pair\u003cInteger, String\u003e parseUpdatedTags(Optional\u003cString\u003e tag) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"linnn-7"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"linnn-7"},"content":"        String[] tagInfo \u003d tag.get().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"linnn-7"},"content":"        if (Integer.valueOf(tagInfo[0]) \u003c -1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"linnn-7"},"content":"            throw new ParseException(TAG_INVALID_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"linnn-7"},"content":"        if (Integer.valueOf(tagInfo[0]) \u003d\u003d -1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"linnn-7"},"content":"            return new Pair\u003c\u003e(Integer.valueOf(tagInfo[0]), null);","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"linnn-7"},"content":"        if (tagInfo.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"linnn-7"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"linnn-7"},"content":"        if (!Tag.isValidTagName(tagInfo[1])) {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"linnn-7"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"linnn-7"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"linnn-7"},"content":"            return new Pair\u003c\u003e(Integer.valueOf(tagInfo[0]), tagInfo[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"linnn-7"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"DhiraPT"},"content":"     * Parses a {@code String yearJoined} into a {@code YearJoined}.","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"DhiraPT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"DhiraPT"},"content":"     * @throws ParseException if the given {@code yearJoined} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"DhiraPT"},"content":"    public static YearJoined parseYearJoined(String yearJoined) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"DhiraPT"},"content":"        String trimmedYearJoined \u003d yearJoined.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"DhiraPT"},"content":"        if (!YearJoined.isValidYearJoined(trimmedYearJoined)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"DhiraPT"},"content":"            throw new ParseException(YearJoined.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"DhiraPT"},"content":"        return new YearJoined(trimmedYearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"DhiraPT"},"content":"     * Parses a {@code String amount} into a {@code Amount}.","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"DhiraPT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"DhiraPT"},"content":"     * @throws ParseException if the given {@code amount} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"DhiraPT"},"content":"    public static Amount parseAmount(String amount) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(amount);","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"DhiraPT"},"content":"        String trimmedAmount \u003d amount.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"DhiraPT"},"content":"        if (!Amount.isValidAmount(trimmedAmount)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"DhiraPT"},"content":"            throw new ParseException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"DhiraPT"},"content":"        return new Amount(trimmedAmount);","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"DhiraPT"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"DhiraPT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"DhiraPT"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"DhiraPT"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"DhiraPT"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"DhiraPT"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"DhiraPT"},"content":"     * Parses a {@code String dateTime} into a {@code DateTime}.","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"DhiraPT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"DhiraPT"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"DhiraPT"},"content":"    public static DateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"DhiraPT"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"DhiraPT"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"DhiraPT"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"DhiraPT"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"linnn-7":43,"DhiraPT":62,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/PayBackParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.logic.commands.TransactionCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"public class PayBackParser {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PayBackParser.class);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    public Command parseCommand(Model model, String userInput) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"            return new AddCommandParser(model).parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"            return new DeleteConfirmationCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"ondretann"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ondretann"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"        case TransactionCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"            return new TransactionCommandParser(model).parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"ondretann"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"ondretann"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PateShin":2,"DhiraPT":7,"-":81,"ondretann":9}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.ParserUtil.parseTag;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"        if (!isPrefixPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"        Id id;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"            id \u003d ParserUtil.parseId(argMultimap.getPreamble());","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"        Set\u003cString\u003e tagNames \u003d new HashSet\u003c\u003e(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"        Iterator\u003cString\u003e tagIterator \u003d tagNames.iterator();","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"        while (tagIterator.hasNext()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"            tags.add(parseTag(tagIterator.next()));","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"        return new TagCommand(id, tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"     * Checks if {@Code Prefix} is present in {@Code ArgumentMultiMap}.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap, Prefix prefix) {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"        return argumentMultimap.getValue(prefix).isPresent();","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ondretann":56}},{"path":"src/main/java/seedu/address/logic/parser/TransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.logic.commands.TransactionCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.DateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Description;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":" * Parses input arguments and creates a new TransactionCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"public class TransactionCommandParser implements Parser\u003cTransactionCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    private final Model model;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a new TransactionCommandParser.","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"     * @param model Model to be used in parsing.","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    TransactionCommandParser(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        this.model \u003d model;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"     * Parses the given {@code String} of arguments in the context of the TransactionCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"     * and returns a TransactionCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    public TransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        if (args.matches(\"\\\\s+[^;].*(?:;\\\\s+[^;].*){2,3}\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"            args \u003d Parser.appendPrefixes(args, PREFIX_ID, PREFIX_AMOUNT, PREFIX_DESCRIPTION, PREFIX_DATETIME);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATETIME, PREFIX_ID, PREFIX_AMOUNT, PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_AMOUNT, PREFIX_DESCRIPTION)","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATETIME, PREFIX_ID, PREFIX_AMOUNT, PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        DateTime dateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"            dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"            dateTime \u003d new DateTime(LocalDateTime.now());","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        Id employeeId \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"        if (!model.hasPersonId(employeeId)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"        Amount amount \u003d ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get());","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"        Transaction transaction \u003d new Transaction(dateTime, employeeId, amount, description);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"        return new TransactionCommand(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"    private boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":76}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":" * Parses user input and creates a ViewCommand object.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"    public ViewCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"            Id id \u003d ParserUtil.parseId(userInput);","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"            return new ViewCommand(id);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ondretann":23}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    Predicate\u003cTransaction\u003e PREDICATE_SHOW_ALL_TRANSACTIONS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"    Path getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"    void setPayBackFilePath(Path payBackFilePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"     * Replaces address book data with the data in {@code payBack}.","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"    void setPayBack(ReadOnlyPayBack payBack);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"    /** Returns the PayBack */","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"    ReadOnlyPayBack getPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a person with the same ID as {@code id} exists in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"    boolean hasPersonId(Id id);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"     * Returns the last id on the given year.","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"DhiraPT"},"content":"    int getLastIdOnYear(YearJoined yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a transaction with the same ID as {@code transaction} exists in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"DhiraPT"},"content":"    boolean hasTransaction(Transaction transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"DhiraPT"},"content":"     * Adds the given transaction.","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"DhiraPT"},"content":"     * {@code transaction} must not already exist in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"DhiraPT"},"content":"    void addTransaction(Transaction transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"ondretann"},"content":"     * Deletes the given transaction.","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"ondretann"},"content":"     * {@Code transaction} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"ondretann"},"content":"    void deleteTransaction(Transaction transaction);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"DhiraPT"},"content":"    /** Returns an unmodifiable view of the filtered transaction list */","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"DhiraPT"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"DhiraPT"},"content":"     * Updates the filter of the filtered transaction list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"DhiraPT"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"DhiraPT"},"content":"    void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"ondretann"},"content":"     * Sets the last mentioned person {@Code DeleteConfirmationCommand} is executed.","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"ondretann"},"content":"    void setLastMentionedPerson(Person person);","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"ondretann"},"content":"     * Returns the last mentioned person.","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"ondretann"},"content":"    Person getLastMentionedPerson();","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"PateShin":6,"DhiraPT":38,"-":81,"ondretann":15}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"    private final PayBack payBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"    private final FilteredList\u003cTransaction\u003e filteredTransactions;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"    private Person lastMentionedPerson;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"     * Initializes a ModelManager with the given PayBack and userPrefs.","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"    public ModelManager(ReadOnlyPayBack payBack, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        requireAllNonNull(payBack, userPrefs);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"        logger.fine(\"Initializing with PayBack: \" + payBack + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"        this.payBack \u003d new PayBack(payBack);","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.payBack.getPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"        filteredTransactions \u003d new FilteredList\u003c\u003e(this.payBack.getTransactionList());","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"        this(new PayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"PateShin"},"content":"    public Path getPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"        return userPrefs.getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"PateShin"},"content":"    public void setPayBackFilePath(Path payBackFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"PateShin"},"content":"        requireNonNull(payBackFilePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"        userPrefs.setPayBackFilePath(payBackFilePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PayBack \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"PateShin"},"content":"    public void setPayBack(ReadOnlyPayBack payBack) {","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"PateShin"},"content":"        this.payBack.resetData(payBack);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"PateShin"},"content":"    public ReadOnlyPayBack getPayBack() {","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"PateShin"},"content":"        return payBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"DhiraPT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"        return payBack.hasPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"DhiraPT"},"content":"    public boolean hasPersonId(Id id) {","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"DhiraPT"},"content":"        return payBack.hasPersonId(id);","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"        payBack.removePerson(target);","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"        payBack.addPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"PateShin"},"content":"        payBack.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"DhiraPT"},"content":"    public int getLastIdOnYear(YearJoined yearJoined) {","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"PateShin"},"content":"        return payBack.getLastIdOnYear(yearJoined);","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"PateShin"},"content":"     * {@code versionedPayBack}","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"DhiraPT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Transaction \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"DhiraPT"},"content":"    public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"DhiraPT"},"content":"        return payBack.hasTransaction(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"DhiraPT"},"content":"    public void addTransaction(Transaction transaction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"DhiraPT"},"content":"        payBack.addTransaction(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"ondretann"},"content":"    public void deleteTransaction(Transaction transaction) {","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"ondretann"},"content":"        payBack.removeTransaction(transaction);","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"DhiraPT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Transaction List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"DhiraPT"},"content":"     * Returns an unmodifiable view of the list of {@code Transaction} backed by the internal list of","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"DhiraPT"},"content":"     * {@code versionedPayBack}","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"DhiraPT"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"DhiraPT"},"content":"        return filteredTransactions;","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"DhiraPT"},"content":"    public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"DhiraPT"},"content":"        filteredTransactions.setPredicate(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"ondretann"},"content":"    public void setLastMentionedPerson(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"ondretann"},"content":"        this.lastMentionedPerson \u003d person;","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"ondretann"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"ondretann"},"content":"    public Person getLastMentionedPerson() {","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"ondretann"},"content":"        return lastMentionedPerson;","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"PateShin"},"content":"        return payBack.equals(otherModelManager.payBack)","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":209,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 filteredTransactions.equals(otherModelManager.filteredTransactions);","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PateShin":25,"DhiraPT":46,"-":127,"ondretann":15}},{"path":"src/main/java/seedu/address/model/PayBack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.UniqueTransactionList;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":" * Duplicates are not allowed (by .isSamePerson comparison) and (by .isSameTransaction comparison)","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"public class PayBack implements ReadOnlyPayBack {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    private final UniqueTransactionList transactions;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        transactions \u003d new UniqueTransactionList();","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"    public PayBack() {}","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"     * Creates an PayBack using the Persons in the {@code toBeCopied}","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"    public PayBack(ReadOnlyPayBack toBeCopied) {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"     * Replaces the contents of the transaction list with {@code transactions}.","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"     * {@code transactions} must not contain duplicate transactions.","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"    public void setTransactions(List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        this.transactions.setTransactions(transactions);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"PateShin"},"content":"     * Resets the existing data of this {@code PayBack} with {@code newData}.","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"    public void resetData(ReadOnlyPayBack newData) {","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"        setTransactions(newData.getTransactionList());","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a person with the same ID as {@code id} exists in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"    public boolean hasPersonId(Id id) {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"        return persons.containsId(id);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"     * Removes {@code key} from this {@code PayBack}.","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"DhiraPT"},"content":"    //// transaction-level operations","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a transaction with the same ID as {@code transaction} exists in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"DhiraPT"},"content":"    public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"DhiraPT"},"content":"        return transactions.contains(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"DhiraPT"},"content":"     * Adds a transaction to the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"DhiraPT"},"content":"     * The transaction must not already exist in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"DhiraPT"},"content":"    public void addTransaction(Transaction transaction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"DhiraPT"},"content":"        transactions.add(transaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"ondretann"},"content":"     * Removes the transaction from the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"ondretann"},"content":"    public void removeTransaction(Transaction transaction) {","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"ondretann"},"content":"        transactions.remove(transaction);","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"DhiraPT"},"content":"                .add(\"transactions\", transactions)","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"DhiraPT"},"content":"    public int getLastIdOnYear(YearJoined yearJoined) {","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"DhiraPT"},"content":"        return getPersonList().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"DhiraPT"},"content":"                .filter(person -\u003e person.getYearJoined().equals(yearJoined))","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"DhiraPT"},"content":"                .mapToInt(person -\u003e person.getId().value)","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"DhiraPT"},"content":"                .max()","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"linnn-7"},"content":"                .orElse(yearJoined.value % 100 * 10000);","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"DhiraPT"},"content":"    public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"DhiraPT"},"content":"        return transactions.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"PateShin"},"content":"        if (!(other instanceof PayBack)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"PateShin"},"content":"        PayBack otherPayBack \u003d (PayBack) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"DhiraPT"},"content":"        return persons.equals(otherPayBack.persons)","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 transactions.equals(otherPayBack.transactions);","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"linnn-7":1,"PateShin":9,"DhiraPT":54,"-":121,"ondretann":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyPayBack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"public interface ReadOnlyPayBack {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"     * Returns an unmodifiable view of the transaction list.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"     * This list will not contain any duplicate transactions.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    ObservableList\u003cTransaction\u003e getTransactionList();","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PateShin":1,"DhiraPT":7,"-":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    Path getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"PateShin":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    private Path payBackFilePath \u003d Paths.get(\"data\" , \"payback.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"        setPayBackFilePath(newUserPrefs.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"    public Path getPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        return payBackFilePath;","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"    public void setPayBackFilePath(Path payBackFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        requireNonNull(payBackFilePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        this.payBackFilePath \u003d payBackFilePath;","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"                \u0026\u0026 payBackFilePath.equals(otherUserPrefs.payBackFilePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"PateShin"},"content":"        return Objects.hash(guiSettings, payBackFilePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"        sb.append(\"\\nLocal data file location : \" + payBackFilePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PateShin":10,"-":78}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":" * Tests that a {@code Person}\u0027s email matches any of the keywords given.","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"                .anyMatch(keyword -\u003e person.getEmail().value.contains(keyword));","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":36}},{"path":"src/main/java/seedu/address/model/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":" * Represents a Person\u0027s ID in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"public class Id {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"            \"ID should be a 6-digit number between 100001 and 999999 inclusive.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public final int value;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"     * @param model The model to get the last ID from.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"     * @param yearJoined A valid year joined.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    public Id(Model model, YearJoined yearJoined) {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        int lastId \u003d model.getLastIdOnYear(yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"        int currentId \u003d lastId + 1;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        checkArgument(isValidId(currentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"        value \u003d currentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"     * @param id A valid ID.","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    public Id(int id) {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"        value \u003d id;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a given integer is a valid ID.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"    public static boolean isValidId(int test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"        return test \u003e 100000 \u0026\u0026 test \u003c 1000000;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"        return Integer.toString(value);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof Id)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"        Id otherId \u003d (Id) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"        return value \u003d\u003d otherId.value;","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"DhiraPT":69}},{"path":"src/main/java/seedu/address/model/person/IdEqualsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":" * Tests that a {@code Person}\u0027s ID matches the given ID.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"public class IdEqualsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"    private final String id;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    public IdEqualsPredicate(String id) {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        return person.getId().toString().equals(id);","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        if (!(other instanceof IdEqualsPredicate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        IdEqualsPredicate otherIdEqualsPredicate \u003d (IdEqualsPredicate) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        return id.equals(otherIdEqualsPredicate.id);","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":34}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    private final Id id;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    private final YearJoined yearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"    public Person(Model model, Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"                  YearJoined yearJoined, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        requireAllNonNull(model, name, phone, email, address, yearJoined, tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        this.id \u003d new Id(model, yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"        this.yearJoined \u003d yearJoined;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    public Person(Id id, Name name, Phone phone, Email email, Address address, YearJoined yearJoined, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        requireAllNonNull(id, name, phone, email, address, yearJoined, tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        this.yearJoined \u003d yearJoined;","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    public Id getId() {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        return id;","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"    public YearJoined getYearJoined() {","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"        return yearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"DhiraPT"},"content":"        return id.equals(otherPerson.id)","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 name.equals(otherPerson.name)","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 yearJoined.equals(otherPerson.yearJoined)","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"DhiraPT"},"content":"        return Objects.hash(name, phone, email, address, yearJoined, tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"linnn-7"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"DhiraPT"},"content":"                .add(\"year joined\", yearJoined)","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linnn-7":1,"DhiraPT":35,"-":113}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":" * Tests that a {@code Person}\u0027s phone number matches any of the keywords given.","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"                .anyMatch(keyword -\u003e person.getPhone().value.contains(keyword));","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        PhoneContainsKeywordsPredicate otherPhoneContainsKeywordsPredicate \u003d (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        return keywords.equals(otherPhoneContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":36}},{"path":"src/main/java/seedu/address/model/person/TagEqualsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":" * Tests that a {@code Person} has a tag that matches the given tag name.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"public class TagEqualsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"    private final String tagName;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    public TagEqualsPredicate(String tagName) {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"        this.tagName \u003d tagName.toLowerCase();","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        return person.getTags().stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"                .map(tag -\u003e tag.tagName.toLowerCase())","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"                .anyMatch(lowerCaseTagName -\u003e lowerCaseTagName.equals(tagName.toLowerCase()));","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        if (!(other instanceof TagEqualsPredicate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        TagEqualsPredicate otherTagEqualsPredicate \u003d (TagEqualsPredicate) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        return tagName.equals(otherTagEqualsPredicate.tagName);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":36}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if the list contains a person with the given ID.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    public boolean containsId(Id id) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"        return internalList.stream().anyMatch(person -\u003e person.getId().equals(id));","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DhiraPT":8,"-":150}},{"path":"src/main/java/seedu/address/model/person/YearJoined.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":" * Represents a Person\u0027s year joined in PayBack.","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidYearJoined(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"public class YearJoined {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"            \"Year joined should only contain numbers and it must be between 2010 to 2099.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public final int value;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code YearJoined}.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"     * @param yearJoined A valid year joined.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"    public YearJoined(String yearJoined) {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"        requireAllNonNull(yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"        checkArgument(isValidYearJoined(yearJoined), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        value \u003d Integer.parseInt(yearJoined);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a given string is a valid year joined.","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    public static boolean isValidYearJoined(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"            int year \u003d Integer.parseInt(test);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"            return year \u003e\u003d 2010 \u0026\u0026 year \u003c\u003d 2099;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"        return Integer.toString(value);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof YearJoined)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"        YearJoined otherName \u003d (YearJoined) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"        return value \u003d\u003d otherName.value;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"PateShin":1,"DhiraPT":60}},{"path":"src/main/java/seedu/address/model/person/YearJoinedEqualsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":" * Tests that a {@code Person}\u0027s year joined matches the given year.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"public class YearJoinedEqualsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"    private final String year;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    public YearJoinedEqualsPredicate(String year) {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"        this.year \u003d year;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        return person.getYearJoined().toString().equals(year);","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        if (!(other instanceof YearJoinedEqualsPredicate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        YearJoinedEqualsPredicate otherYearJoinedEqualsPredicate \u003d (YearJoinedEqualsPredicate) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        return year.equals(otherYearJoinedEqualsPredicate.year);","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":34}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"linnn-7"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+(?:\\\\s\\\\p{Alnum}+)*\";","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linnn-7":1,"-":61}},{"path":"src/main/java/seedu/address/model/transaction/Amount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":" * Represents a Transaction\u0027s amount in the transaction list.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAmount(String)}","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"public class Amount {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Amount should be a positive number\";","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"    public final double value;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"     * Constructs an {@code Amount}.","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"     * @param amount A valid amount.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    public Amount(String amount) {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(amount);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"        checkArgument(isValidAmount(amount), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"        value \u003d Math.round(Double.parseDouble(amount) * 100) / 100.0;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a given string is a valid amount.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    public static boolean isValidAmount(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"            double amount \u003d Double.parseDouble(test);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"            return amount \u003e 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"        return String.format(\"%.2f\", value);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof Amount)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        Amount otherAmount \u003d (Amount) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        return value \u003d\u003d otherAmount.value;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":58}},{"path":"src/main/java/seedu/address/model/transaction/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":" * Represents a Transaction\u0027s date and time in the transaction list.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"public class DateTime {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be in the format of dd/MM/yyyy HH:mm\";","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"     * @param dateTime A valid date and time.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        value \u003d LocalDateTime.parse(dateTime, DATETIME_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"     * @param dateTime A valid LocalDateTime object.","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"    public DateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        value \u003d dateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a given string is a valid datetime.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"            LocalDateTime.parse(test, DATETIME_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        return value.format(DATETIME_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof DateTime)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"        DateTime otherDateTime \u003d (DateTime) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"        return value.equals(otherDateTime.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":78}},{"path":"src/main/java/seedu/address/model/transaction/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":" * Represents a Transaction\u0027s description in the transaction list.","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"public class Description {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"    public final String value;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"     * @param description A valid description.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"    public Description(String description) {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"        value \u003d description;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"        return value;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof Description)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        Description otherDescription \u003d (Description) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"        return value.equals(otherDescription.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":47}},{"path":"src/main/java/seedu/address/model/transaction/Transaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":" * Represents a Transaction in the transaction list.","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"public class Transaction {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    private final TransactionId id;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"    private final Id employeeId;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    private final Amount amount;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    private final Description description;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"    public Transaction(DateTime dateTime, Id employeeId, Amount amount, Description description) {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        requireAllNonNull(employeeId, dateTime, amount, description);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"        this.id \u003d new TransactionId();","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"        this.employeeId \u003d employeeId;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    public Transaction(TransactionId id, DateTime dateTime, Id employeeId, Amount amount, Description description) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        requireAllNonNull(id, dateTime, employeeId, amount, description);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"        this.employeeId \u003d employeeId;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"    public TransactionId getId() {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"        return id;","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"        return dateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"    public Id getEmployeeId() {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        return employeeId;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"    public Amount getAmount() {","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"        return amount;","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"    public Description getDescription() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"        return description;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if both transactions have the same ID.","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"     * This defines a weaker notion of equality between two transactions.","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"    public boolean isSameTransaction(Transaction otherTransaction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"        if (otherTransaction \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"        return otherTransaction !\u003d null","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 otherTransaction.getId().equals(getId());","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if both transactions have the same fields.","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"     * This defines a stronger notion of equality between two transactions.","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof Transaction)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"DhiraPT"},"content":"        Transaction otherTransaction \u003d (Transaction) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"DhiraPT"},"content":"        return otherTransaction.getId().equals(getId())","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 otherTransaction.getDateTime().equals(getDateTime())","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 otherTransaction.getEmployeeId().equals(getEmployeeId())","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 otherTransaction.getAmount().equals(getAmount())","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"DhiraPT"},"content":"                \u0026\u0026 otherTransaction.getDescription().equals(getDescription());","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"DhiraPT"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"DhiraPT"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"DhiraPT"},"content":"        return Objects.hash(id, dateTime, employeeId, amount, description);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"DhiraPT"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"DhiraPT"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"DhiraPT"},"content":"                .add(\"dateTime\", dateTime)","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"DhiraPT"},"content":"                .add(\"employeeId\", employeeId)","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"DhiraPT"},"content":"                .add(\"amount\", amount)","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"DhiraPT"},"content":"                .add(\"description\", description)","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"DhiraPT"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":118}},{"path":"src/main/java/seedu/address/model/transaction/TransactionId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":" * Represents a Transaction\u0027s ID in the transaction list.","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"public class TransactionId {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"            \"ID should only contain numbers \"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"                    + \"and it must be the unix timestamp between 1/1/2010 to the current datetime.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"    private static final long MIN_ID \u003d LocalDateTime.of(2010, 1, 1, 0, 0).toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    public final long value;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    public TransactionId() {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"        value \u003d LocalDateTime.now().toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"     * @param id A valid ID.","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"    public TransactionId(long id) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        value \u003d id;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if a given long is a valid ID.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    public static boolean isValidId(long test) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        return test \u003e\u003d MIN_ID \u0026\u0026 test \u003c\u003d LocalDateTime.now().toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"        return Long.toString(value);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof TransactionId)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        TransactionId otherId \u003d (TransactionId) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"        return value \u003d\u003d otherId.value;","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":65}},{"path":"src/main/java/seedu/address/model/transaction/UniqueTransactionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.exceptions.DuplicateTransactionException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.transaction.exceptions.TransactionNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":" * A list of transactions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":" * A transaction is considered unique by comparing using {@code Transaction#isSameTransaction(Transaction)}.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":" * As such, adding and updating of transactions uses Transaction#isSameTransaction(Transaction) for equality so as to","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":" * ensure that the transaction being added or updated is unique in terms of identity in the UniqueTransactionList.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":" * However, the removal of a transaction uses Transaction#equals(Object) so as to ensure that the transaction with","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":" * exactly the same fields will be removed.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":" *","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":" *","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":" * @see Transaction#isSameTransaction(Transaction)","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"public class UniqueTransactionList implements Iterable\u003cTransaction\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"    private final ObservableList\u003cTransaction\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    private final ObservableList\u003cTransaction\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if the list contains an equivalent transaction as the given argument.","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    public boolean contains(Transaction toCheck) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTransaction);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"     * Adds a transaction to the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"     * The transaction must not already exist in the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    public void add(Transaction toAdd) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"            throw new DuplicateTransactionException();","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"     * Removes the transaction from the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"     * The transaction must exist in the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"    public void remove(Transaction toRemove) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"            throw new TransactionNotFoundException();","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"    public void setTransactions(UniqueTransactionList replacement) {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"     * Replaces the contents of this list with {@code transactions}.","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"     * {@code transactions} must not contain duplicate transactions.","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"    public void setTransactions(List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"        requireAllNonNull(transactions);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"        if (!transactionsAreUnique(transactions)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"            throw new DuplicateTransactionException();","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"        internalList.setAll(transactions);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"DhiraPT"},"content":"    public ObservableList\u003cTransaction\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"    public Iterator\u003cTransaction\u003e iterator() {","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"DhiraPT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"DhiraPT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"DhiraPT"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"DhiraPT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"DhiraPT"},"content":"        if (!(other instanceof UniqueTransactionList)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"DhiraPT"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"DhiraPT"},"content":"        UniqueTransactionList otherUniqueTransactionList \u003d (UniqueTransactionList) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"DhiraPT"},"content":"        return internalList.equals(otherUniqueTransactionList.internalList);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"DhiraPT"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"DhiraPT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"DhiraPT"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"DhiraPT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"DhiraPT"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"DhiraPT"},"content":"     * Returns true if {@code transactions} contains only unique transactions.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"DhiraPT"},"content":"    private boolean transactionsAreUnique(List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"DhiraPT"},"content":"        for (int i \u003d 0; i \u003c transactions.size() - 1; i++) {","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"DhiraPT"},"content":"            for (int j \u003d i + 1; j \u003c transactions.size(); j++) {","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"DhiraPT"},"content":"                if (transactions.get(i).isSameTransaction(transactions.get(j))) {","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"DhiraPT"},"content":"                    return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"DhiraPT"},"content":"                }","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"DhiraPT"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"DhiraPT"},"content":"        return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":119,"ondretann":12}},{"path":"src/main/java/seedu/address/model/transaction/exceptions/DuplicateTransactionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction.exceptions;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":" * Signals that the operation will result in duplicate Transactions (Transactions are considered duplicates","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":" * if they have the same ID).","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"public class DuplicateTransactionException extends RuntimeException {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"    public DuplicateTransactionException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"        super(\"Operation would result in duplicate transactions\");","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"DhiraPT":11}},{"path":"src/main/java/seedu/address/model/transaction/exceptions/TransactionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.model.transaction.exceptions;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":" * Signals that the operation is unable to find the specified transaction.","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"public class TransactionNotFoundException extends RuntimeException {","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ondretann":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":" * Contains utility methods for populating {@code PayBack} with sample data.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"            new Person(new Id(240001), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"                new YearJoined(\"2024\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"            new Person(new Id(240002), new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"                new YearJoined(\"2024\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"            new Person(new Id(240003), new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"                new YearJoined(\"2024\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"            new Person(new Id(240004), new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"                new YearJoined(\"2024\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"            new Person(new Id(240005), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"                new YearJoined(\"2024\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"            new Person(new Id(240006), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"                new YearJoined(\"2024\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"    public static ReadOnlyPayBack getSamplePayBack() {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        PayBack sampleAb \u003d new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"PateShin":11,"DhiraPT":14,"-":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    private final int id;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    private final int yearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"id\") int id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"            @JsonProperty(\"yearJoined\") int yearJoined, @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        this.yearJoined \u003d yearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"        yearJoined \u003d source.getYearJoined().value;","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"DhiraPT"},"content":"        if (!YearJoined.isValidYearJoined(String.valueOf(yearJoined))) {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"DhiraPT"},"content":"            throw new IllegalValueException(YearJoined.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"DhiraPT"},"content":"        final YearJoined modelYearJoined \u003d new YearJoined(String.valueOf(yearJoined));","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"DhiraPT"},"content":"        return new Person(modelId, modelName, modelPhone, modelEmail, modelAddress, modelYearJoined, modelTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DhiraPT":18,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTransaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.DateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Description;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.TransactionId;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":" * Jackson-friendly version of {@link Transaction}.","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"public class JsonAdaptedTransaction {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Transaction\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    private final long id;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    private final String dateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    private final int employeeId;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"    private final double amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    private final String description;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"     * Constructs a {@code JsonAdaptedTransaction} with the given transaction details.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"    public JsonAdaptedTransaction(@JsonProperty(\"id\") long id, @JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"            @JsonProperty(\"employeeId\") int employeeId, @JsonProperty(\"amount\") double amount,","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        this.employeeId \u003d employeeId;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"     * Converts a given {@code Transaction} into this class for Jackson use.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    public JsonAdaptedTransaction(Transaction source) {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"        employeeId \u003d source.getEmployeeId().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"        amount \u003d source.getAmount().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"     * Converts this Jackson-friendly adapted transaction object into the model\u0027s {@code Transaction} object.","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted transaction.","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    public Transaction toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"        final TransactionId modelId \u003d new TransactionId(id);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, DateTime.class.getSimpleName())","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"            );","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"        if (!DateTime.isValidDateTime(dateTime)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"        if (!Id.isValidId(employeeId)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"        final Id modelEmployeeId \u003d new Id(employeeId);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"        if (!Amount.isValidAmount(String.valueOf(amount))) {","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"            throw new IllegalValueException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"        final Amount modelAmount \u003d new Amount(String.format(\"%.2f\", amount));","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"DhiraPT"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName())","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"            );","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"        return new Transaction(modelId, modelDateTime, modelEmployeeId, modelAmount, modelDescription);","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":89}},{"path":"src/main/java/seedu/address/storage/JsonPayBackStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":" * A class to access PayBack data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"public class JsonPayBackStorage implements PayBackStorage {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPayBackStorage.class);","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"    public JsonPayBackStorage(Path filePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    public Path getPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    public Optional\u003cReadOnlyPayBack\u003e readPayBack() throws DataLoadingException {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"        return readPayBack(filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"     * Similar to {@link #readPayBack()}.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"    public Optional\u003cReadOnlyPayBack\u003e readPayBack(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        Optional\u003cJsonSerializablePayBack\u003e jsonPayBack \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"                filePath, JsonSerializablePayBack.class);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        if (!jsonPayBack.isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"            return Optional.of(jsonPayBack.get().toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"    public void savePayBack(ReadOnlyPayBack payBack) throws IOException {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"        savePayBack(payBack, filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"     * Similar to {@link #savePayBack(ReadOnlyPayBack)}.","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"    public void savePayBack(ReadOnlyPayBack payBack, Path filePath) throws IOException {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"        requireNonNull(payBack);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"PateShin"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePayBack(payBack), filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"PateShin":20,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePayBack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":" * An Immutable PayBack that is serializable to JSON format.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"@JsonRootName(value \u003d \"payback\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"class JsonSerializablePayBack {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d \"Transactions list contains duplicate transaction(s).\";","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    private final List\u003cJsonAdaptedTransaction\u003e transactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"     * Constructs a {@code JsonSerializablePayBack} with the given persons.","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    public JsonSerializablePayBack(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"            @JsonProperty(\"transactions\") List\u003cJsonAdaptedTransaction\u003e transactions) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        this.transactions.addAll(transactions);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"     * Converts a given {@code ReadOnlyPayBack} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePayBack}.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"    public JsonSerializablePayBack(ReadOnlyPayBack source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        transactions.addAll(source.getTransactionList().stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"                .map(JsonAdaptedTransaction::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"     * Converts this address book into the model\u0027s {@code PayBack} object.","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"    public PayBack toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        PayBack payBack \u003d new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"            if (payBack.hasPerson(person)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"            payBack.addPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"        for (JsonAdaptedTransaction jsonAdaptedTransaction : transactions) {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"            Transaction transaction \u003d jsonAdaptedTransaction.toModelType();","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"            if (payBack.hasTransaction(transaction)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"            payBack.addTransaction(transaction);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        return payBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"PateShin":15,"DhiraPT":15,"-":44}},{"path":"src/main/java/seedu/address/storage/PayBackStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":" * Represents a storage for {@link PayBack}.","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"public interface PayBackStorage {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"    Path getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"     * Returns PayBack data as a {@link ReadOnlyPayBack}.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    Optional\u003cReadOnlyPayBack\u003e readPayBack() throws DataLoadingException;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"     * @see #getPayBackFilePath()","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"    Optional\u003cReadOnlyPayBack\u003e readPayBack(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"     * Saves the given {@link ReadOnlyPayBack} to the storage.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"     * @param payBack cannot be null.","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    void savePayBack(ReadOnlyPayBack payBack) throws IOException;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"     * @see #savePayBack(ReadOnlyPayBack)","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"    void savePayBack(ReadOnlyPayBack payBack, Path filePath) throws IOException;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"PateShin":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"public interface Storage extends PayBackStorage, UserPrefsStorage {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"    Path getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    Optional\u003cReadOnlyPayBack\u003e readPayBack() throws DataLoadingException;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    void savePayBack(ReadOnlyPayBack payBack) throws IOException;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"PateShin":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":" * Manages storage of PayBack data in local storage.","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    private PayBackStorage payBackStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"     * Creates a {@code StorageManager} with the given {@code PayBackStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"    public StorageManager(PayBackStorage payBackStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        this.payBackStorage \u003d payBackStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PayBack methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"    public Path getPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"        return payBackStorage.getPayBackFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"    public Optional\u003cReadOnlyPayBack\u003e readPayBack() throws DataLoadingException {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        return readPayBack(payBackStorage.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"    public Optional\u003cReadOnlyPayBack\u003e readPayBack(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"        return payBackStorage.readPayBack(filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"    public void savePayBack(ReadOnlyPayBack payBack) throws IOException {","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"        savePayBack(payBack, payBackStorage.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"    public void savePayBack(ReadOnlyPayBack payBack, Path filePath) throws IOException {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"        payBackStorage.savePayBack(payBack, filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PateShin":17,"-":61}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import org.controlsfx.control.textfield.AutoCompletionBinding;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import org.controlsfx.control.textfield.TextFields;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import seedu.address.logic.commands.CommandData;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    public CommandBox(CommandExecutor commandExecutor, ResultDisplay resultDisplay) {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        this.resultDisplay \u003d resultDisplay;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        // Use CommandData to get command words for auto-completion","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"        AutoCompletionBinding\u003cString\u003e autoCompletionBinding \u003d TextFields.bindAutoCompletion(commandTextField,","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"                CommandData.getCommandWords());","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"        autoCompletionBinding.setOnAutoCompleted(event -\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"            String selectedCommand \u003d event.getCompletion();","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"            String followMessage \u003d CommandData.getFollowMessage(selectedCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"            if (!followMessage.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"                this.resultDisplay.setFeedbackToUser(followMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        });","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"PateShin":18,"-":81}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"    private TransactionDetailsPanel transactionDetailsPanel;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"    private StackPane transactionDetailsPanelPlaceholder;","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"ondretann"},"content":"        transactionDetailsPanel \u003d new TransactionDetailsPanel(logic.getEmptyTransactionList());","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"ondretann"},"content":"        transactionDetailsPanelPlaceholder.getChildren().add(transactionDetailsPanel.getRoot());;","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"PateShin"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"PateShin"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, resultDisplay);","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"PateShin":2,"-":194,"ondretann":9}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"linnn-7"},"content":"    private Label personId;","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"linnn-7"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"        String idLabel \u003d \"ID: \";","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"        String idText \u003d Integer.toString(person.getId().value);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        personId.setText(idLabel + idText);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"linnn-7":2,"PateShin":4,"-":58}},{"path":"src/main/java/seedu/address/ui/TransactionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"public class TransactionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"    private static final String FXML \u003d \"TransactionListCard.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"    public final Transaction transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"    private Label dateTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"    private Label description;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"    private Label transactionId;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"    private Label amount;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"    private Label employeeId;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"    public TransactionCard(Transaction transaction, int displayedIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        super(FXML);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"        this.transaction \u003d transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        String transactionLabel \u003d \"Transaction ID: \";","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        String transactionIdText \u003d Long.toString(transaction.getId().value);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"        transactionId.setText(transactionLabel + transactionIdText);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"        String amountLabel \u003d \"Amount: $\";","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        String amountText \u003d Double.toString(transaction.getAmount().value);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"        amount.setText(amountLabel + amountText);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        String employeeIdLabel \u003d \"Employee ID: \";","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"        String employeeIdText \u003d Integer.toString(transaction.getEmployeeId().value);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"        employeeId.setText(employeeIdLabel + employeeIdText);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        String descriptionLabel \u003d \"Description: \";","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        String descriptionText \u003d transaction.getDescription().value;","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"        description.setText(descriptionLabel + descriptionText);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        String dateLabel \u003d \"DateTime: \";","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"        String dateText \u003d transaction.getDateTime().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"        dateTime.setText(dateLabel + dateText);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"PateShin":23,"ondretann":41}},{"path":"src/main/java/seedu/address/ui/TransactionDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"public class TransactionDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"    private static final String FXML \u003d \"TransactionDetailsPanel.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TransactionDetailsPanel.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"    private ListView\u003cTransaction\u003e transactionDetailsView;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"    public TransactionDetailsPanel(ObservableList\u003cTransaction\u003e personList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"        super(FXML);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"        transactionDetailsView.setItems(personList);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"        transactionDetailsView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"    class PersonListViewCell extends ListCell\u003cTransaction\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"        protected void updateItem(Transaction transaction, boolean empty) {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"            super.updateItem(transaction, empty);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"            if (empty || transaction \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"                setText(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"                setGraphic(new TransactionCard(transaction, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ondretann":49}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Command\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"PateShin":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: whitesmoke;","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 17px;","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"    -fx-border-width: 7px;","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: #DEDEDE;","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 17px;","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"    -fx-border-width: 7px;","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: #A4D0D3;","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 17px;","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"PateShin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: #E3F1F0;","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 17px;","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"PateShin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"PateShin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":149,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: derive(whitesmoke, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: none;","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"PateShin"},"content":"    -fx-padding: 5px 0px 5px 0px;","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"PateShin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"PateShin"},"content":"    -fx-font-family: \"Calibri\";","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"PateShin"},"content":"    -fx-font-size: 13.5pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"PateShin"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"PateShin"},"content":"    -fx-border-width: 4px;","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: whitesmoke;","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"PateShin"},"content":".result-pane {","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: whitesmoke;","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: none;","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: derive(whitesmoke, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: derive(whitesmoke, 25%);","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: derive(whitesmoke, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: derive(whitesmoke, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":208,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: derive(whitesmoke, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"PateShin"},"content":"    -fx-padding: 1 5 1 5;","lastModifiedDate":"2024-04-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"PateShin"},"content":"    -fx-padding: 5 1 5 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"PateShin"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: transparent, whitesmoke, transparent, whitesmoke;","lastModifiedDate":"2024-04-02"},{"lineNumber":358,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 0px;","lastModifiedDate":"2024-04-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"PateShin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":368,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: #C9A7FD;","lastModifiedDate":"2024-04-02"},{"lineNumber":369,"author":{"gitId":"PateShin"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2024-04-02"},{"lineNumber":370,"author":{"gitId":"PateShin"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2024-04-02"},{"lineNumber":371,"author":{"gitId":"PateShin"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":372,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":373,"author":{"gitId":"PateShin"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2024-04-02"},{"lineNumber":374,"author":{"gitId":"PateShin"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2024-04-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":377,"author":{"gitId":"PateShin"},"content":"/*AutoCompleteTextBox CSS","lastModifiedDate":"2024-04-01"},{"lineNumber":378,"author":{"gitId":"PateShin"},"content":"  It is partial features from","lastModifiedDate":"2024-04-01"},{"lineNumber":379,"author":{"gitId":"PateShin"},"content":"  Extensions.css*/","lastModifiedDate":"2024-04-01"},{"lineNumber":380,"author":{"gitId":"PateShin"},"content":".auto-complete-popup .list-cell {","lastModifiedDate":"2024-04-01"},{"lineNumber":381,"author":{"gitId":"PateShin"},"content":"    -fx-font-size: 1.05em;","lastModifiedDate":"2024-04-01"},{"lineNumber":382,"author":{"gitId":"PateShin"},"content":"    -fx-label-padding: 3px 0 3px 5px;","lastModifiedDate":"2024-04-02"},{"lineNumber":383,"author":{"gitId":"PateShin"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-04-01"},{"lineNumber":384,"author":{"gitId":"PateShin"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-01"},{"lineNumber":385,"author":{"gitId":"PateShin"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: white;","lastModifiedDate":"2024-04-02"},{"lineNumber":387,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":388,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":389,"author":{"gitId":"PateShin"},"content":"#personId {","lastModifiedDate":"2024-04-02"},{"lineNumber":390,"author":{"gitId":"PateShin"},"content":"    -fx-padding: 1 0 4 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":391,"author":{"gitId":"PateShin"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2024-04-02"},{"lineNumber":392,"author":{"gitId":"PateShin"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2024-04-02"},{"lineNumber":393,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":394,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":395,"author":{"gitId":"PateShin"},"content":"#phone {","lastModifiedDate":"2024-04-02"},{"lineNumber":396,"author":{"gitId":"PateShin"},"content":"    -fx-padding: 3 0 0 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":397,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":398,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":399,"author":{"gitId":"PateShin"},"content":"#menuBar {","lastModifiedDate":"2024-04-02"},{"lineNumber":400,"author":{"gitId":"PateShin"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-04-02"},{"lineNumber":401,"author":{"gitId":"PateShin"},"content":"    -fx-border-color: #1d1d1d;","lastModifiedDate":"2024-04-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"PateShin":78,"-":324}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"         title\u003d\"PayBack\" minWidth\u003d\"450\" maxWidth\u003d\"700\" minHeight\u003d\"600\" maxHeight\u003d\"700\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"            \u003cInsets top\u003d\"20\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"        \u003cHBox styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"170\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"1\" bottom\u003d\"10\" left\u003d\"9\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"            \u003cVBox fx:id\u003d\"transactionList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"170\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"11\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"              \u003cStackPane fx:id\u003d\"transactionDetailsPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"          \u003c/children\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"PateShin":5,"-":56,"ondretann":11}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"linnn-7"},"content":"      \u003cLabel fx:id\u003d\"personId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$personId\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"linnn-7":1,"-":29}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"result-pane\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" promptText\u003d\"Output\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"PateShin":2,"-":7}},{"path":"src/main/resources/view/TransactionDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"    \u003cListView fx:id\u003d\"transactionDetailsView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ondretann":8}},{"path":"src/main/resources/view/TransactionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"                \u003cLabel fx:id\u003d\"transactionId\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$transactionId\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" text\u003d\"\\$date\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"            \u003cLabel fx:id\u003d\"employeeId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$employeeId\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"            \u003cLabel fx:id\u003d\"amount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$amount\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$description\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"PateShin":4,"ondretann":24}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"import seedu.address.storage.JsonPayBackStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        JsonPayBackStorage payBackStorage \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"                new JsonPayBackStorage(temporaryFolder.resolve(\"payback.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        StorageManager storage \u003d new StorageManager(payBackStorage, userPrefsStorage);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"linnn-7"},"content":"        String deleteCommand \u003d \"/delete 240009\";","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"PateShin"},"content":"    public void getPayBack_returnsModelPayBack() {","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"PateShin"},"content":"        ReadOnlyPayBack expectedPayBack \u003d model.getPayBack();","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"PateShin"},"content":"        ReadOnlyPayBack actualPayBack \u003d logic.getPayBack();","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"PateShin"},"content":"        assertEquals(expectedPayBack, actualPayBack);","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"    public void getPayBackFilePath_returnsModelFilePath() {","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"        Path expectedPath \u003d model.getPayBackFilePath();","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"        Path actualPath \u003d logic.getPayBackFilePath();","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"        assertEquals(expectedPath, actualPath);","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"linnn-7"},"content":"        Model expectedModel \u003d new ModelManager(model.getPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"PateShin"},"content":"        // Inject LogicManager with an PayBackStorage that throws the IOException e when saving","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"PateShin"},"content":"        JsonPayBackStorage payBackStorage \u003d new JsonPayBackStorage(prefPath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"PateShin"},"content":"            public void savePayBack(ReadOnlyPayBack payBack, Path filePath)","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"PateShin"},"content":"        StorageManager storage \u003d new StorageManager(payBackStorage, userPrefsStorage);","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"PateShin"},"content":"        // Triggers the savePayBack method by executing an add command","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"PateShin"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + \" :year 2024\";","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"linnn-7":2,"PateShin":27,"-":160}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalTransactions.TRANSACTION_1;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"public class MessagesTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public void format_typicalTransaction_returnsCorrectString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"        Transaction transaction \u003d TRANSACTION_1;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        String expected \u003d \"Transaction ID: \" + transaction.getId()","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"                + \"; DateTime: \" + transaction.getDateTime()","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"                + \"; Employee ID: \" + transaction.getEmployeeId()","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"                + \"; Amount: \" + transaction.getAmount()","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"                + \"; Description: \" + transaction.getDescription();","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        assertEquals(expected, Messages.format(transaction));","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"PateShin":23}},{"path":"src/test/java/seedu/address/logic/commands/AbortDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.AbortDeleteCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"public class AbortDeleteCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"    public void execute_abortDelete_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"        AbortDeleteCommand command \u003d new AbortDeleteCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"        Model modelStud \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"        assertCommandSuccess(command, modelStud, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ondretann":22}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(model.getPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        Person personInList \u003d model.getPayBack().getPersonList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"PateShin":4,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"        public Path getPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"        public void setPayBackFilePath(Path payBackFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"PateShin"},"content":"        public void setPayBack(ReadOnlyPayBack payBack) {","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"PateShin"},"content":"        public ReadOnlyPayBack getPayBack() {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"DhiraPT"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"DhiraPT"},"content":"        public boolean hasPersonId(Id id) {","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"DhiraPT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"DhiraPT"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"DhiraPT"},"content":"        public int getLastIdOnYear(YearJoined yearJoined) {","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"DhiraPT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"DhiraPT"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"DhiraPT"},"content":"        public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"DhiraPT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"DhiraPT"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"DhiraPT"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"DhiraPT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"ondretann"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"ondretann"},"content":"        public void deleteTransaction(Transaction transaction) {","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"ondretann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"DhiraPT"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":190,"author":{"gitId":"DhiraPT"},"content":"        public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":191,"author":{"gitId":"DhiraPT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":192,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":193,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":194,"author":{"gitId":"DhiraPT"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"DhiraPT"},"content":"        public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"DhiraPT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"ondretann"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"ondretann"},"content":"        public void setLastMentionedPerson(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"ondretann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"ondretann"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"ondretann"},"content":"        public Person getLastMentionedPerson() {","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"ondretann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"ondretann"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"PateShin"},"content":"        public ReadOnlyPayBack getPayBack() {","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"PateShin"},"content":"            return new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"PateShin":8,"DhiraPT":34,"-":196,"ondretann":14}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    public void execute_emptyPayBack_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"    public void execute_nonEmptyPayBack_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        Model model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        expectedModel.setPayBack(new PayBack());","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"PateShin":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandDataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"public class CommandDataTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    void testAllCommandsHaveFollowMessages() {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        for (String command : CommandData.getCommandWords()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"            assertFalse(CommandData.getFollowMessage(command).isEmpty(),","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"                    \"Follow message should not be empty for command: \" + command);","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    void testCommandFollowMessagesInitialization() {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        assertEquals(AddCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(AddCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        assertEquals(EditCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(EditCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"        assertEquals(DeleteCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        assertEquals(FindCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(FindCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        assertEquals(TagCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(TagCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        assertEquals(ExitCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(ExitCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        assertEquals(HelpCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(HelpCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        assertEquals(TransactionCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(TransactionCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        assertEquals(ListCommand.FOLLOW_MESSAGE, CommandData.getFollowMessage(ListCommand.COMMAND_WORD));","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"    void testGetFollowMessageWithNonexistentCommand() {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        // Test to ensure a non-existent command returns an empty string","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        String nonexistentCommand \u003d \"nonexistent\";","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"        assertTrue(CommandData.getFollowMessage(nonexistentCommand).isEmpty());","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"    void testGetCommandWords() {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        // Test to ensure getCommandWords returns all command words correctly","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"        String[] commandWords \u003d CommandData.getCommandWords();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        String[] expectedCommandWords \u003d {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"            AddCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"            EditCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"            DeleteCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"            FindCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"            HelpCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"            TagCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"            TransactionCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"            ListCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"            ExitCommand.COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        for (String expectedCommandWord : expectedCommandWords) {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"            assertTrue(java.util.Arrays.asList(commandWords).contains(expectedCommandWord));","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"PateShin":59}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR_JOINED;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"linnn-7"},"content":"    public static final String VALID_YEAR_JOINED_AMY \u003d \"2024\";","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"linnn-7"},"content":"    public static final String VALID_YEAR_JOINED_BOB \u003d \"2024\";","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"    public static final String YEARJOINED_DESC_AMY \u003d \" \" + PREFIX_YEAR_JOINED + \" \" + VALID_YEAR_JOINED_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"    public static final String YEARJOINED_DESC_BOB \u003d \" \" + PREFIX_YEAR_JOINED + \" \" + VALID_YEAR_JOINED_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \" 911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \" bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \" hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"linnn-7"},"content":"                .withTags(VALID_TAG_FRIEND).withId(240001).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"    public static final long VALID_TRANSACTIONID \u003d 1711815800;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"    public static final String VALID_DATETIME \u003d \"01/01/2024 10:00\";","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"    public static final int VALID_EMPLOYEEID \u003d 240001;","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"DhiraPT"},"content":"    public static final String VALID_AMOUNT \u003d \"10.00\";","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"    public static final String VALID_DESCRIPTION \u003d \"Salary\";","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"    public static final String DATETIME_DESC \u003d \" \" + PREFIX_DATETIME + \" \" + VALID_DATETIME;","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"    public static final String EMPLOYEEID_DESC \u003d \" \" + PREFIX_ID + \" \" + VALID_EMPLOYEEID;","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"    public static final String AMOUNT_DESC \u003d \" \" + PREFIX_AMOUNT + \" \" + VALID_AMOUNT;","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"    public static final String DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + \" \" + VALID_DESCRIPTION;","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"    public static final String INVALID_DATETIME_DESC \u003d \" \" + PREFIX_DATETIME + \" 01-01-2024 10:00\";","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"DhiraPT"},"content":"    public static final String INVALID_EMPLOYEEID_DESC \u003d \" \" + PREFIX_ID + \" 240001a\";","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"DhiraPT"},"content":"    public static final String INVALID_AMOUNT_DESC \u003d \" \" + PREFIX_AMOUNT + \" 10.00a\";","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"PateShin"},"content":"        PayBack expectedPayBack \u003d new PayBack(actualModel.getPayBack());","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":133,"author":{"gitId":"PateShin"},"content":"        assertEquals(expectedPayBack, actualModel.getPayBack());","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"linnn-7":4,"PateShin":3,"DhiraPT":31,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"    public void execute_validPerson_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"        Model model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"        model.setLastMentionedPerson(personToDelete);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"        // same types -\u003e return true","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"        assertTrue(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"-":47,"ondretann":10}},{"path":"src/test/java/seedu/address/logic/commands/DeleteConfirmationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.DeleteConfirmationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"public class DeleteConfirmationCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"    private DeleteConfirmationCommandParser parser \u003d new DeleteConfirmationCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"        assertParseSuccess(parser, \"240001\", new DeleteConfirmationCommand(new Id(240001)));","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":28,"ondretann":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteConfirmationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.DeleteConfirmationCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"public class DeleteConfirmationCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"    public void execute_validPerson_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"        Model modelStub \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"        Person personToDelete \u003d modelStub.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"        Id id \u003d personToDelete.getId();","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"        DeleteConfirmationCommand command \u003d new DeleteConfirmationCommand(id);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS, Messages.format(personToDelete));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"        assertCommandSuccess(command, modelStub, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"    public void execute_invalidPerson_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"        Model modelStub \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        DeleteConfirmationCommand command \u003d new DeleteConfirmationCommand(new Id(999999));","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"        assertCommandFailure(command, modelStub, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"        DeleteConfirmationCommand firstCommand \u003d new DeleteConfirmationCommand(new Id(240001));","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"        DeleteConfirmationCommand secondCommand \u003d new DeleteConfirmationCommand(new Id(240002));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"        // different values -\u003e return false","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"        Id targetId \u003d new Id(240001);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"ondretann"},"content":"        DeleteConfirmationCommand deleteConfirmationCommand \u003d new DeleteConfirmationCommand(targetId);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"ondretann"},"content":"        String expected \u003d DeleteConfirmationCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetId + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"ondretann"},"content":"        assertEquals(expected, deleteConfirmationCommand.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ondretann":73}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"linnn-7"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"linnn-7"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"    private Model model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"linnn-7"},"content":"        descriptor.setUpdateTagInfo(new Pair\u003c\u003e(-1, null));","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(new Id(PersonBuilder.DEFAULT_ID), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(new PayBack(model.getPayBack()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"linnn-7"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"linnn-7"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"linnn-7"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"linnn-7"},"content":"                .build();","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"linnn-7"},"content":"        descriptor.setUpdateTagInfo(new Pair\u003c\u003e(1, VALID_TAG_FRIEND));","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(editedPerson.getId(), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(new PayBack(model.getPayBack()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(editedPerson.getId(),","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"linnn-7"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withTags(\"friends\").build());","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(new PayBack(model.getPayBack()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"linnn-7"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withName(\"Benson Meier\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"linnn-7"},"content":"                model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getId(), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"        Person personInList \u003d model.getPayBack().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"                model.getPayBack().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getId(),","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(new Id(100001), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"linnn-7"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"PateShin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPayBack().getPersonList().size());","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(new Id(200000),","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"linnn-7"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"linnn-7"},"content":"        final EditCommand standardCommand \u003d new EditCommand(new Id(240001), DESC_AMY);","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"linnn-7"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(new Id(240001), copyDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"linnn-7"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"linnn-7"},"content":"                new EditCommand(","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"linnn-7"},"content":"                        new Id(240003), DESC_AMY)));","lastModifiedDate":"2024-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"linnn-7"},"content":"        assertFalse(standardCommand.equals(new EditCommand(","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"PateShin"},"content":"                model.getPayBack().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased()).getId(), DESC_BOB)));","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"linnn-7"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"PateShin"},"content":"                model.getPayBack().getPersonList()","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"linnn-7"},"content":"                        .get(INDEX_FIRST_PERSON.getZeroBased()).getId(), editPersonDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"linnn-7"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{id\u003d240001\" + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"linnn-7":32,"PateShin":12,"DhiraPT":1,"-":144}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"linnn-7"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", year joined\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"linnn-7"},"content":"                + editPersonDescriptor.getYearJoined().orElse(null) + \", address\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"linnn-7":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    private Model model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"PateShin"},"content":"    public void getPredicate_notNull() {","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"        // Create a sample predicate","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"        Predicate\u003cPerson\u003e samplePredicate \u003d person -\u003e person.getName().equals(\"John\");","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"        // Create a FindCommand instance with the sample predicate","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"        FindCommand findCommand \u003d new FindCommand(samplePredicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"        // Retrieve the predicate using getPredicate() method","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"        Predicate\u003cPerson\u003e retrievedPredicate \u003d findCommand.getPredicate();","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"        // Assert that the retrieved predicate is not null","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"        assertNotNull(retrievedPredicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"PateShin":21,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        expectedModel \u003d new ModelManager(model.getPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"PateShin":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"public class TagCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"    private Model model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"    public void execute_singleTagAdd_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tagStub \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"        tagStub.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"        Person expectedPerson \u003d new PersonBuilder().withTags(\"Finance\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"        TagCommand tagCommand \u003d new TagCommand(new Id(PersonBuilder.DEFAULT_ID), tagStub);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(new PayBack(model.getPayBack()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d TagCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"    public void execute_multipleTagAdd_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tagStub \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"        tagStub.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"        tagStub.add(new Tag(\"Management\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"        tagStub.add(new Tag(\"Friend\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"        Person expectedPerson \u003d new PersonBuilder().withTags(\"Finance\", \"Management\", \"Friend\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"        TagCommand tagCommand \u003d new TagCommand(new Id(PersonBuilder.DEFAULT_ID), tagStub);","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(new PayBack(model.getPayBack()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d TagCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"    public void execute_duplicateTags_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tagStub \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"        tagStub.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"        tagStub.add(new Tag(\"Management\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ondretann"},"content":"        Person expectedPerson \u003d new PersonBuilder().withTags(\"Finance\", \"Management\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ondretann"},"content":"        TagCommand tagCommand \u003d new TagCommand(new Id(PersonBuilder.DEFAULT_ID), tagStub);","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(new PayBack(model.getPayBack()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d TagCommand.MESSAGE_DUPLICATE_TAGS;","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ondretann"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e tagCommand.execute(expectedModel));","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ondretann"},"content":"    public void execute_invalidId_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"ondretann"},"content":"        int size \u003d expectedModel.getFilteredPersonList().size();","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ondretann"},"content":"        Id invalidId \u003d new Id(size + 240001);","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ondretann"},"content":"        TagCommand tagCommand \u003d new TagCommand(invalidId, new HashSet\u003cTag\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ondretann"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e tagCommand.execute(expectedModel));","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ondretann"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ondretann"},"content":"        tags.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ondretann"},"content":"        tags.add(new Tag(\"Management\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ondretann"},"content":"        TagCommand tagCommand \u003d new TagCommand(new Id(240001), tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tagsCopy \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ondretann"},"content":"        tagsCopy.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ondretann"},"content":"        tagsCopy.add(new Tag(\"Management\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ondretann"},"content":"        TagCommand tagCommandCopy \u003d new TagCommand(new Id(240001), tagsCopy);","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ondretann"},"content":"        // return true if same id and tags","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ondretann"},"content":"        Assertions.assertTrue(tagCommand.equals(tagCommandCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ondretann"},"content":"        // return true if same object","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ondretann"},"content":"        Assertions.assertTrue(tagCommand.equals(tagCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"ondretann"},"content":"        // return false if null","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"ondretann"},"content":"        Assertions.assertFalse(tagCommand.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ondretann"},"content":"        // return false if different command type","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"ondretann"},"content":"        Assertions.assertFalse(tagCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"ondretann"},"content":"        // return false if different id","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"ondretann"},"content":"        Assertions.assertFalse(tagCommand.equals(new TagCommand(new Id(240002), tags)));","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"ondretann"},"content":"        tagsCopy.add(new Tag(\"Family\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"ondretann"},"content":"        // return false if different tag names","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ondretann"},"content":"        Assertions.assertFalse(tagCommand.equals(tagCommandCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"ondretann"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"ondretann"},"content":"        tags.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"ondretann"},"content":"        TagCommand tagCommand \u003d new TagCommand(new Id(240001), tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"ondretann"},"content":"        String expected \u003d TagCommand.class.getCanonicalName() + \"{id\u003d240001\" + \", tags\u003d\"","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"ondretann"},"content":"                + tags + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"ondretann"},"content":"        Assertions.assertEquals(expected, tagCommand.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"PateShin":7,"ondretann":132}},{"path":"src/test/java/seedu/address/logic/commands/TransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYEEID;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalTransactions.TRANSACTION_4;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.TransactionBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"public class TransactionCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"    private final Model model \u003d new ModelManager(new PayBack(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    private TransactionCommand transactionCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        // Set up the model manager","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        model.addPerson(new PersonBuilder(AMY).withId(VALID_EMPLOYEEID).build());","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        // Set up the transaction command","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        transactionCommand \u003d new TransactionCommand(TRANSACTION_4);","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    public void execute_validTransaction_success() throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"        Model expectedModel \u003d new ModelManager(model.getPayBack(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        expectedModel.addTransaction(TRANSACTION_4);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        assertCommandSuccess(transactionCommand, model,","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"                String.format(TransactionCommand.MESSAGE_SUCCESS, Messages.format(TRANSACTION_4)), expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    public void execute_duplicateTransaction_throwsCommandException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"        // Add the transaction to the model first","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        model.addTransaction(TRANSACTION_4);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"        // Try to add the same transaction again","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"        assertCommandFailure(transactionCommand, model, TransactionCommand.MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        Transaction transaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"        TransactionCommand transactionCommand1 \u003d new TransactionCommand(transaction);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        TransactionCommand transactionCommand2 \u003d new TransactionCommand(transaction);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"        assertEquals(transactionCommand1, transactionCommand2);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"        assertNotEquals(1, transactionCommand1);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"        assertNotEquals(null, transactionCommand1);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"        assertNotEquals(transactionCommand1, new TransactionCommand(TRANSACTION_4));","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"        Transaction transaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"PateShin"},"content":"        TransactionCommand transactionCommand \u003d new TransactionCommand(transaction);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        String expected \u003d TransactionCommand.class.getCanonicalName() + \"{toAdd\u003d\" + transaction + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"        assertEquals(expected, transactionCommand.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"PateShin":69,"DhiraPT":5}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.commands.ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"public class ViewCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"    public void execute_validPerson_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"        Model modelStub \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"        Person personToView \u003d modelStub.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"        Id id \u003d personToView.getId();","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"        ViewCommand command \u003d new ViewCommand(id);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d String.format(MESSAGE_VIEW_PERSON_SUCCESS, Messages.format(personToView));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"        assertCommandSuccess(command, modelStub, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"    public void execute_invalidPerson_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        Model modelStub \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"        Id id \u003d new Id(999999);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"        ViewCommand command \u003d new ViewCommand(id);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_PERSON_DISPLAYED_ID;","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"        assertCommandFailure(command, modelStub, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"        ViewCommand firstCommand \u003d new ViewCommand(new Id(240001));","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"        ViewCommand secondCommand \u003d new ViewCommand(new Id(240002));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"        // different values -\u003e return false","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ondretann"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ondretann"},"content":"        Id targetId \u003d new Id(240001);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ondretann"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(targetId);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"        String expected \u003d ViewCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetId + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"        assertEquals(expected, viewCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ondretann":75}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.YEARJOINED_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    private AddCommandParser parser \u003d new AddCommandParser(new ModelManager());","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"                + ADDRESS_DESC_BOB + YEARJOINED_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"                + YEARJOINED_DESC_BOB + YEARJOINED_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"PateShin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"                        + YEARJOINED_DESC_BOB,","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"DhiraPT"},"content":"                + YEARJOINED_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-22"},{"lineNumber":155,"author":{"gitId":"PateShin"},"content":"                + YEARJOINED_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-22"},{"lineNumber":156,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"PateShin"},"content":"        // invalid tag","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-22"},{"lineNumber":159,"author":{"gitId":"PateShin"},"content":"                + YEARJOINED_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-22"},{"lineNumber":163,"author":{"gitId":"PateShin"},"content":"                + YEARJOINED_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":171,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":172,"author":{"gitId":"PateShin"},"content":"    public void parse_duplicateNamePrefix_throwsException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":173,"author":{"gitId":"PateShin"},"content":"        String input \u003d NAME_DESC_AMY + \" \" + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-22"},{"lineNumber":174,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-22"},{"lineNumber":175,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":176,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":177,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":178,"author":{"gitId":"PateShin"},"content":"    public void parse_duplicatePhonePrefix_throwsException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"PateShin"},"content":"        String input \u003d NAME_DESC_BOB + PHONE_DESC_AMY + \" \" + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-22"},{"lineNumber":181,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":183,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":184,"author":{"gitId":"PateShin"},"content":"    public void parse_duplicateEmailPrefix_throwsException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"PateShin"},"content":"        String input \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + \" \" + EMAIL_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-22"},{"lineNumber":186,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-22"},{"lineNumber":187,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":188,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":189,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":190,"author":{"gitId":"PateShin"},"content":"    public void parse_invalidName_throwsException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":191,"author":{"gitId":"PateShin"},"content":"        String input \u003d INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-22"},{"lineNumber":192,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-22"},{"lineNumber":193,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"PateShin":39,"DhiraPT":3,"-":152}},{"path":"src/test/java/seedu/address/logic/parser/ConfirmationStageParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.AbortDeleteCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"public class ConfirmationStageParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"    private ConfirmationStageParser parser \u003d new ConfirmationStageParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"    public void parseCommand_deleteCommand_success() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"        assertTrue(parser.parseCommand(\"y\") instanceof DeleteCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"        assertTrue(parser.parseCommand(\"Y\") instanceof DeleteCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"    public void parseCommand_abortDeleteCommand_success() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"        assertTrue(parser.parseCommand(\"n\") instanceof AbortDeleteCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"        assertTrue(parser.parseCommand(\"N\") instanceof AbortDeleteCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"    public void parseCommand_invalidUserInput_throwsParserException() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ondretann":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"linnn-7"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"linnn-7"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG + \" -1\";","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"linnn-7"},"content":"        assertParseFailure(parser, \"240001\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"linnn-7"},"content":"        assertParseFailure(parser, \"240001\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"linnn-7"},"content":"        assertParseFailure(parser, \"240001\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"linnn-7"},"content":"        assertParseFailure(parser, \"240001\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"linnn-7"},"content":"        assertParseFailure(parser, \"240001\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"linnn-7"},"content":"        assertParseFailure(parser, \"240001\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"linnn-7"},"content":"        assertParseFailure(parser, \"240001\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"linnn-7"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":100,"author":{"gitId":"linnn-7"},"content":"        String userInput \u003d \"240001\" + PHONE_DESC_BOB","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"linnn-7"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"linnn-7"},"content":"                .build();","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"linnn-7"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Id(240001), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"linnn-7"},"content":"        String userInput \u003d \"240002\" + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"linnn-7"},"content":"                .withEmail(VALID_EMAIL_AMY).withId(240002).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"linnn-7"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Id(240002), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"linnn-7"},"content":"        String userInput \u003d \"240003\" + NAME_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"linnn-7"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"linnn-7"},"content":"                .withId(240003).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"linnn-7"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Id(240003), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"linnn-7"},"content":"        userInput \u003d \"240004\" + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"linnn-7"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withId(240004).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"linnn-7"},"content":"        expectedCommand \u003d new EditCommand(new Id(240004), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"linnn-7"},"content":"        userInput \u003d \"240005\" + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"linnn-7"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withId(240005).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"linnn-7"},"content":"        expectedCommand \u003d new EditCommand(new Id(240005), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"linnn-7"},"content":"        userInput \u003d \"240006\" + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"linnn-7"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withId(240006).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"linnn-7"},"content":"        expectedCommand \u003d new EditCommand(new Id(240006), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"linnn-7"},"content":"        String userInput \u003d \"240001\" + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"linnn-7"},"content":"        userInput \u003d \"240001\" + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"linnn-7"},"content":"        userInput \u003d \"240001\" + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"linnn-7"},"content":"        userInput \u003d \"240001\" + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"linnn-7"},"content":"        String userInput \u003d \"240008\" + TAG_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"linnn-7"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withId(240008).withTags().build();","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"linnn-7"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Id(240008), descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"linnn-7":37,"-":156}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.IdEqualsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.TagEqualsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.YearJoinedEqualsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :name Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :name Alice      Bob  \", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"                new FindCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(\"67890\")));","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :phone 67890\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    public void parse_validEmailArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"                new FindCommand(new EmailContainsKeywordsPredicate(Arrays.asList(\"example@example.com\")));","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :email example@example.com\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"    public void parse_validIdArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"                new FindCommand(new IdEqualsPredicate(\"123\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :id 123\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"    public void parse_validYearJoinedArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"                new FindCommand(new YearJoinedEqualsPredicate(\"2019\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :year 2019\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"    public void parse_validTagArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"PateShin"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"                new FindCommand(new TagEqualsPredicate(\"intern\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :tag intern\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :name Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"        assertParseSuccess(parser, \"/find :name \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"PateShin"},"content":"    public void parse_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"        // invalid prefix","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, \"/find :unknown Patrick\",","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"PateShin"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"PateShin":63,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"linnn-7"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"linnn-7"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"linnn-7"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"linnn-7"},"content":"    public void parseUpdatedTags_validInput_returnsPair() throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"linnn-7"},"content":"        Optional\u003cString\u003e testString \u003d Optional.of(\"1 Boss\");","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"linnn-7"},"content":"        Pair\u003cInteger, String\u003e actualResult \u003d ParserUtil.parseUpdatedTags(testString);","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"linnn-7"},"content":"        assertEquals(1, actualResult.getKey());","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"linnn-7"},"content":"        assertEquals(\"Boss\", actualResult.getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"linnn-7"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"linnn-7"},"content":"    public void parseUpdatedTags_invalidIndex_throwsParseException() throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"linnn-7"},"content":"        Optional\u003cString\u003e testString \u003d Optional.of(\"-5 Boss\");","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"linnn-7"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUpdatedTags(testString));","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"linnn-7"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"linnn-7"},"content":"    public void parseUpdatedTags_noNewTagName_throwsParseException() throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"linnn-7"},"content":"        Optional\u003cString\u003e testString \u003d Optional.of(\"-5\");","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"linnn-7"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUpdatedTags(testString));","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"linnn-7"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"linnn-7"},"content":"    public void parseUpdatedTags_clearTags_returnsEmptyPair() throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"linnn-7"},"content":"        Optional\u003cString\u003e testString \u003d Optional.of(\"-1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"linnn-7"},"content":"        Pair\u003cInteger, String\u003e actualResult \u003d ParserUtil.parseUpdatedTags(testString);","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"linnn-7"},"content":"        assertEquals(-1, actualResult.getKey());","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"linnn-7"},"content":"        assertEquals(null, actualResult.getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"linnn-7":30,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/PayBackParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.DeleteConfirmationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"public class PayBackParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    private final PayBackParser parser \u003d new PayBackParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"    private Model model;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"    void initModel() {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        model \u003d new ModelManager(getTypicalPayBack(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"    public void parseCommand_deleteConfirmation() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"        DeleteConfirmationCommand command \u003d (DeleteConfirmationCommand) parser.parseCommand(","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"                model,","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"                DeleteCommand.COMMAND_WORD + \" 240001\");","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"        assertEquals(new DeleteConfirmationCommand(new Id(240001)), command);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"                model,","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"                EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"linnn-7"},"content":"                + \"240001\" + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"linnn-7"},"content":"        assertEquals(new EditCommand(person.getId(), descriptor), command);","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"PateShin"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"baz\");","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"                model,","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"PateShin"},"content":"                FindCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_NAME","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \" + CliSyntax.PREFIX_NAME)));","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"PateShin"},"content":"        // Creating the expected FindCommand with the corresponding predicate","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"PateShin"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(parser.parseCommand(model, ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"DhiraPT"},"content":"            -\u003e parser.parseCommand(model, \"\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"DhiraPT"},"content":"                MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(model, \"unknownCommand\")","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"DhiraPT"},"content":"        );","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"linnn-7":2,"PateShin":13,"DhiraPT":26,"-":70,"ondretann":5}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"    public void parse_singleTag_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"        String userInput \u003d \"240001 \" + PREFIX_TAG + \" Finance\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"        tags.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"        TagCommand expectedCommand \u003d new TagCommand(new Id(240001), tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"    public void parse_multipleTag_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"        String userInput \u003d \"240001 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"                + PREFIX_TAG + \" Finance \"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"                + PREFIX_TAG + \" Management \"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"                + PREFIX_TAG + \" Family\";","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ondretann"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ondretann"},"content":"        tags.add(new Tag(\"Finance\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ondretann"},"content":"        tags.add(new Tag(\"Management\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ondretann"},"content":"        tags.add(new Tag(\"Family\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ondretann"},"content":"        TagCommand expectedCommand \u003d new TagCommand(new Id(240001), tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ondretann"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ondretann"},"content":"    public void parse_emptyId_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ondretann"},"content":"        String userInput \u003d PREFIX_TAG + \" Finance\";","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ondretann"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ondretann"},"content":"    public void parse_invalidId_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ondretann"},"content":"        String userInput \u003d \"0 \" + PREFIX_TAG + \" Finance\";","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ondretann"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ondretann":67}},{"path":"src/test/java/seedu/address/logic/parser/TransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AMOUNT_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYEEID_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AMOUNT_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATETIME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMPLOYEEID_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYEEID;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.logic.commands.TransactionCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.DateTime;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"public class TransactionCommandParserTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    private TransactionCommandParser parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        // Set up the model manager","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"        Model modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        modelManager.addPerson(new PersonBuilder(AMY).withId(VALID_EMPLOYEEID).build());","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"        // Set up the parser","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"        parser \u003d new TransactionCommandParser(modelManager);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        // missing employeeId prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, AMOUNT_DESC + DESCRIPTION_DESC + DATETIME_DESC, expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"        // missing amount prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, EMPLOYEEID_DESC + DESCRIPTION_DESC + DATETIME_DESC, expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        // missing description prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, EMPLOYEEID_DESC + AMOUNT_DESC + DATETIME_DESC, expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        // invalid employeeId","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, INVALID_EMPLOYEEID_DESC + AMOUNT_DESC + DESCRIPTION_DESC + DATETIME_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"                Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"        // invalid amount","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, EMPLOYEEID_DESC + INVALID_AMOUNT_DESC + DESCRIPTION_DESC + DATETIME_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"                Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"        // invalid datetime","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, EMPLOYEEID_DESC + AMOUNT_DESC + DESCRIPTION_DESC + INVALID_DATETIME_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"                DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"    public void parse_duplicateEmployeeIdPrefix_throwsException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"        String input \u003d EMPLOYEEID_DESC + \" \" + EMPLOYEEID_DESC + AMOUNT_DESC + DESCRIPTION_DESC + DATETIME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, input, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ID));","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"    public void parse_duplicateAmountPrefix_throwsException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"        String input \u003d EMPLOYEEID_DESC + AMOUNT_DESC + \" \" + AMOUNT_DESC + DESCRIPTION_DESC + DATETIME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, input, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AMOUNT));","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"    public void parse_duplicateDescriptionPrefix_throwsException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"        String input \u003d EMPLOYEEID_DESC + AMOUNT_DESC + DESCRIPTION_DESC + \" \" + DESCRIPTION_DESC + DATETIME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, input, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"DhiraPT"},"content":"    public void parse_duplicateDateTimePrefix_throwsException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"DhiraPT"},"content":"        String input \u003d EMPLOYEEID_DESC + AMOUNT_DESC + DESCRIPTION_DESC + DATETIME_DESC + \" \" + DATETIME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"DhiraPT"},"content":"        assertParseFailure(parser, input, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATETIME));","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"    public void parse_invalidEmployeeId_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"        String input \u003d \" :id 0 :amount 10.00 :description Salary\";","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"    public void parse_invalidAmount_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"        String input \u003d \" :id 240001 :amount -10.00 :description Salary\";","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"    public void parse_invalidDateTimeFormat_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"        String input \u003d \" :id 240001 :amount 10.00 :description Salary :datetime 14-05-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"    public void parse_missingDescription_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"PateShin"},"content":"        String input \u003d \" :id 240001 :amount 10.00\";","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"                TransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"PateShin"},"content":"    public void parse_employeeIdNotFound_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"PateShin"},"content":"        String input \u003d \" :id 999999 :amount 10.00 :description Salary\";","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"PateShin"},"content":"        assertParseFailure(parser, input, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_ID);","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"PateShin":31,"DhiraPT":97}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ondretann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ondretann"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ondretann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ondretann"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ondretann"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ondretann"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ondretann"},"content":"    public void parse_validInput_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ondretann"},"content":"        String userInput \u003d \"240001\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ondretann"},"content":"        ViewCommand expectedCommand \u003d new ViewCommand(new Id(240001));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ondretann"},"content":"    public void parse_emptyInput_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ondretann"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ondretann"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ondretann"},"content":"    public void parse_invalidInput_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ondretann"},"content":"        String userInput \u003d \"test\";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ondretann"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ondretann"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ondretann"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ondretann":38}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.transaction.exceptions.TransactionNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.PayBackBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.TransactionBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.TypicalTransactions;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        assertEquals(new PayBack(), new PayBack(modelManager.getPayBack()));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        userPrefs.setPayBackFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        userPrefs.setPayBackFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"    public void setPayBackFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPayBackFilePath(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"    public void setPayBackFilePath_validPath_setsPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"        modelManager.setPayBackFilePath(path);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"        assertEquals(path, modelManager.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"PateShin"},"content":"    public void hasPerson_personNotInPayBack_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"    public void hasPerson_personInPayBack_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"PateShin"},"content":"    public void hasTransaction_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTransaction(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"    public void hasTransaction_transactionNotInPayBack_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"        assertFalse(modelManager.hasTransaction(TypicalTransactions.TRANSACTION_1));","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"    public void hasTransaction_transactionInPayBack_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"        modelManager.addTransaction(TypicalTransactions.TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"        assertTrue(modelManager.hasTransaction(TypicalTransactions.TRANSACTION_1));","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"    public void getFilteredTransactionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTransactionList().remove(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"    public void updateFilteredTransactionList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredTransactionList(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"PateShin"},"content":"    public void addTransaction_transactionNotAlreadyInPayBack_transactionAddedAndFilteredListUpdated() {","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"PateShin"},"content":"        // Add a transaction","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"PateShin"},"content":"        Transaction transactionToAdd \u003d new TransactionBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"PateShin"},"content":"        modelManager.addTransaction(transactionToAdd);","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"PateShin"},"content":"        // Verify that the transaction is added to the PayBack","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"PateShin"},"content":"        PayBack expectedPayBack \u003d new PayBack();","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"PateShin"},"content":"        expectedPayBack.addTransaction(transactionToAdd);","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"PateShin"},"content":"        assertEquals(expectedPayBack, modelManager.getPayBack());","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"PateShin"},"content":"        // Verify that the filtered transaction list is updated to show all transactions","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"PateShin"},"content":"        assertEquals(expectedPayBack.getTransactionList(), modelManager.getFilteredTransactionList());","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"ondretann"},"content":"    public void deleteTransaction_transactionInPayback_transactionDeleted() {","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"ondretann"},"content":"        Transaction transactionToRemove \u003d new TransactionBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"ondretann"},"content":"        modelManager.addTransaction(transactionToRemove);","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"ondretann"},"content":"        modelManager.deleteTransaction(transactionToRemove);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"ondretann"},"content":"        PayBack expectedPayBack \u003d new PayBack();","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"ondretann"},"content":"        assertEquals(expectedPayBack, modelManager.getPayBack());","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"ondretann"},"content":"    public void deleteTransaction_transactionNotInPayback_throwsTransactionNotFoundException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"ondretann"},"content":"        Transaction transactionToRemove \u003d new TransactionBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"ondretann"},"content":"        assertThrows(TransactionNotFoundException.class, () -\u003e modelManager.deleteTransaction(transactionToRemove));","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"PateShin"},"content":"        PayBack payBack \u003d new PayBackBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"PateShin"},"content":"        PayBack differentPayBack \u003d new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"PateShin"},"content":"        modelManager \u003d new ModelManager(payBack, userPrefs);","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"PateShin"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(payBack, userPrefs);","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"PateShin"},"content":"        // different payBack -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"PateShin"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPayBack, userPrefs)));","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":185,"author":{"gitId":"PateShin"},"content":"        assertFalse(modelManager.equals(new ModelManager(payBack, userPrefs)));","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"PateShin"},"content":"        differentUserPrefs.setPayBackFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"PateShin"},"content":"        assertFalse(modelManager.equals(new ModelManager(payBack, differentUserPrefs)));","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"PateShin":64,"-":112,"ondretann":19}},{"path":"src/test/java/seedu/address/model/PayBackTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"public class PayBackTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"    private final PayBack payBack \u003d new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        assertEquals(Collections.emptyList(), payBack.getPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e payBack.resetData(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"    public void resetData_withValidReadOnlyPayBack_replacesData() {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"        PayBack newData \u003d getTypicalPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        payBack.resetData(newData);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        assertEquals(newData, payBack);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        PayBackStub newData \u003d new PayBackStub(newPersons, payBack.getTransactionList());","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e payBack.resetData(newData));","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e payBack.hasPerson(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"    public void hasPerson_personNotInPayBack_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"        assertFalse(payBack.hasPerson(ALICE));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"    public void hasPerson_personInPayBack_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"PateShin"},"content":"        payBack.addPerson(ALICE);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        assertTrue(payBack.hasPerson(ALICE));","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"    public void hasPerson_personWithSameIdentityFieldsInPayBack_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"        payBack.addPerson(ALICE);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"PateShin"},"content":"        assertTrue(payBack.hasPerson(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e payBack.getPersonList().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"        String expected \u003d PayBack.class.getCanonicalName() + \"{persons\u003d\" + payBack.getPersonList()","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"                + \", transactions\u003d\" + payBack.getTransactionList() + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"PateShin"},"content":"        assertEquals(expected, payBack.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"     * A stub ReadOnlyPayBack whose persons list can violate interface constraints.","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"    private static class PayBackStub implements ReadOnlyPayBack {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"DhiraPT"},"content":"        private final ObservableList\u003cTransaction\u003e transactions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"DhiraPT"},"content":"        PayBackStub(Collection\u003cPerson\u003e persons, Collection\u003cTransaction\u003e transactions) {","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"DhiraPT"},"content":"            this.transactions.setAll(transactions);","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"DhiraPT"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"DhiraPT"},"content":"        public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"DhiraPT"},"content":"            return transactions;","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"PateShin":23,"DhiraPT":12,"-":82}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    public void setPayBackFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPayBackFilePath(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    public void hashCode_equalObjects_returnsSameHashCode() {","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        UserPrefs userPrefs1 \u003d new UserPrefs();","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        UserPrefs userPrefs2 \u003d new UserPrefs();","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        userPrefs2.setGuiSettings(userPrefs1.getGuiSettings());","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        userPrefs2.setPayBackFilePath(userPrefs1.getPayBackFilePath());","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        assertEquals(userPrefs1.hashCode(), userPrefs2.hashCode());","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"PateShin":11,"-":21}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        List\u003cString\u003e firstEmail \u003d Collections.singletonList(\"iris@gmail.com\");","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"        List\u003cString\u003e secondEmail \u003d Arrays.asList(\"iris@gmail.com\", \"pate@gmail.com\");","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstEmail);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondEmail);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d new EmailContainsKeywordsPredicate(firstEmail);","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        // One keyword","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.singletonList(\"ir\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"ir@gmail.com\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"iris@gmail.com\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"example@example.com\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        // Keywords match name, phone and address, but does not match email","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345678\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"                .withEmail(\"bob@gmail.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":63}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"linnn-7"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{id\u003d\" + ALICE.getId() + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"linnn-7"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"DhiraPT"},"content":"                + \", address\u003d\" + ALICE.getAddress() + \", year joined\u003d\" + ALICE.getYearJoined()","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"linnn-7"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"linnn-7":3,"DhiraPT":1,"-":97}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        List\u003cString\u003e firstPhone \u003d Collections.singletonList(\"12345678\");","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"        List\u003cString\u003e secondPhone \u003d Arrays.asList(\"12345678\", \"87654321\");","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPhone);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPhone);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d new PhoneContainsKeywordsPredicate(firstPhone);","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        // One keyword","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.singletonList(\"123\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"999\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        // Keywords match name, email and address, but does not match phone","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"bob@example.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"                .withEmail(\"bob@example.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":63}},{"path":"src/test/java/seedu/address/model/person/TagEqualsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"public class TagEqualsPredicateTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"        String firstTag \u003d \"intern\";","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        String secondTag \u003d \"general\";","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        TagEqualsPredicate firstPredicate \u003d new TagEqualsPredicate(firstTag);","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        TagEqualsPredicate secondPredicate \u003d new TagEqualsPredicate(secondTag);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        TagEqualsPredicate firstPredicateCopy \u003d new TagEqualsPredicate(firstTag);","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        // different year -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    public void test_tagEquals_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"        // Exact year match","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"        TagEqualsPredicate predicate \u003d new TagEqualsPredicate(\"intern\");","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"intern\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"    public void test_tagDoesNotEqual_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"        // Different year","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"        TagEqualsPredicate predicate \u003d new TagEqualsPredicate(\"intern\");","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"general\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":50}},{"path":"src/test/java/seedu/address/model/person/TransactionIdEqualsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"public class TransactionIdEqualsPredicateTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"        String firstId \u003d \"100001\";","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        String secondId \u003d \"100002\";","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        IdEqualsPredicate firstPredicate \u003d new IdEqualsPredicate(firstId);","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        IdEqualsPredicate secondPredicate \u003d new IdEqualsPredicate(secondId);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        IdEqualsPredicate firstPredicateCopy \u003d new IdEqualsPredicate(firstId);","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    public void test_idEquals_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"        // Correct ID within specified constraints and converting String to Integer","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"        String validIdString \u003d \"100001\";","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        int validIdInt \u003d Integer.parseInt(validIdString);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"        IdEqualsPredicate predicate \u003d new IdEqualsPredicate(validIdString);","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        assertTrue(predicate.test(new PersonBuilder().withId(validIdInt).build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"    public void test_idDoesNotEqual_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        String validIdString \u003d \"100001\";","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        // Different ID, still within the valid range","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        IdEqualsPredicate predicate \u003d new IdEqualsPredicate(validIdString);","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withId(100002).build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":53,"DhiraPT":1}},{"path":"src/test/java/seedu/address/model/person/YearJoinedEqualsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"public class YearJoinedEqualsPredicateTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"        String firstYear \u003d \"2010\";","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        String secondYear \u003d \"2015\";","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        YearJoinedEqualsPredicate firstPredicate \u003d new YearJoinedEqualsPredicate(firstYear);","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        YearJoinedEqualsPredicate secondPredicate \u003d new YearJoinedEqualsPredicate(secondYear);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        YearJoinedEqualsPredicate firstPredicateCopy \u003d new YearJoinedEqualsPredicate(firstYear);","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        // different year -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    public void test_yearJoinedEquals_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"        // Exact year match","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"        YearJoinedEqualsPredicate predicate \u003d new YearJoinedEqualsPredicate(\"2010\");","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        assertTrue(predicate.test(new PersonBuilder().withYearJoined(\"2010\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"    public void test_yearJoinedDoesNotEqual_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"        // Different year","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"        YearJoinedEqualsPredicate predicate \u003d new YearJoinedEqualsPredicate(\"2010\");","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        assertFalse(predicate.test(new PersonBuilder().withYearJoined(\"2015\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"PateShin":50}},{"path":"src/test/java/seedu/address/model/transaction/AmountTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"public class AmountTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Amount(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public void constructor_invalidAmount_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"        String invalidAmount \u003d \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(invalidAmount));","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    public void isValidAmount() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"        // null amount","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(NullPointerException.class, () -\u003e Amount.isValidAmount(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        // invalid amounts","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(Amount.isValidAmount(\"\")); // empty string","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(Amount.isValidAmount(\" \")); // spaces only","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(Amount.isValidAmount(\"abc\")); // non-numeric","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(Amount.isValidAmount(\"123.45.6\")); // more than 1 decimal point","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"        // valid amounts","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(Amount.isValidAmount(\"123\")); // integer","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(Amount.isValidAmount(\"123.4\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(Amount.isValidAmount(\"123.456\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"        Amount amount \u003d new Amount(\"123.45\");","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(amount.equals(new Amount(\"123.45\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(amount.equals(amount));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(amount.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(amount.equals(5.0f));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(amount.equals(new Amount(\"123.46\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":58}},{"path":"src/test/java/seedu/address/model/transaction/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"public class DateTimeTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime((String) null));","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"        String invalidDateTime \u003d \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(invalidDateTime));","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"        // null datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDateTime(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        // invalid datetimes","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(DateTime.isValidDateTime(\"\")); // empty string","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(DateTime.isValidDateTime(\" \")); // spaces only","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(DateTime.isValidDateTime(\"abc\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(DateTime.isValidDateTime(\"2020-02-30 12:00\")); // invalid date format// invalid time","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"        // valid datetimes","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(DateTime.isValidDateTime(\"29/02/2022 23:59\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(DateTime.isValidDateTime(\"01/01/2022 00:00\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"        DateTime dateTime \u003d new DateTime(\"01/01/2022 00:00\");","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(dateTime.equals(new DateTime(\"01/01/2022 00:00\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(dateTime.equals(dateTime));","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(dateTime.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(dateTime.equals(5.0f));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(dateTime.equals(new DateTime(\"01/01/2022 00:01\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":57}},{"path":"src/test/java/seedu/address/model/transaction/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"public class DescriptionTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"        Description description \u003d new Description(\"Valid Description\");","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(description.equals(new Description(\"Valid Description\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(description.equals(description));","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(description.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(description.equals(5.0f));","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(description.equals(new Description(\"Other Valid Description\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":35}},{"path":"src/test/java/seedu/address/model/transaction/TransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.TypicalTransactions.TRANSACTION_1;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.testutil.TransactionBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"public class TransactionTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"    public void isSameTransaction() {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(TRANSACTION_1.isSameTransaction(TRANSACTION_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(TRANSACTION_1.isSameTransaction(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"        Transaction transaction1Copy \u003d new TransactionBuilder(TRANSACTION_1).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(TRANSACTION_1.equals(transaction1Copy));","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(TRANSACTION_1.equals(TRANSACTION_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(TRANSACTION_1.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(TRANSACTION_1.equals(5));","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        // different transaction -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(TRANSACTION_1.equals(new TransactionBuilder().withAmount(\"100\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        String expected \u003d Transaction.class.getCanonicalName() + \"{id\u003d\" + TRANSACTION_1.getId()","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"                + \", dateTime\u003d\" + TRANSACTION_1.getDateTime() + \", employeeId\u003d\" + TRANSACTION_1.getEmployeeId()","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"                + \", amount\u003d\" + TRANSACTION_1.getAmount() + \", description\u003d\" + TRANSACTION_1.getDescription() + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(TRANSACTION_1.toString().equals(expected));","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":48}},{"path":"src/test/java/seedu/address/model/transaction/UniqueTransactionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.TypicalTransactions.TRANSACTION_1;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.exceptions.DuplicateTransactionException;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ondretann"},"content":"import seedu.address.model.transaction.exceptions.TransactionNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.testutil.TransactionBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"import seedu.address.testutil.TypicalTransactions;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"public class UniqueTransactionListTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    private final UniqueTransactionList uniqueTransactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"    public void contains_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTransactionList.contains(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"    public void contains_transactionNotInList_returnsFalse() {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"        assertFalse(uniqueTransactionList.contains(TRANSACTION_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"    public void contains_transactionInList_returnsTrue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        uniqueTransactionList.add(TRANSACTION_1);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(uniqueTransactionList.contains(TRANSACTION_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"    public void contains_transactionWithSameFieldsDifferentIdInList_returnsTrue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        uniqueTransactionList.add(TRANSACTION_1);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder(TRANSACTION_1).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        assertTrue(uniqueTransactionList.contains(editedTransaction));","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    public void add_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTransactionList.add(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"    public void add_duplicateTransaction_throwsDuplicateTransactionException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"        uniqueTransactionList.add(TRANSACTION_1);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(DuplicateTransactionException.class, () -\u003e uniqueTransactionList.add(TRANSACTION_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e uniqueTransactionList.asUnmodifiableObservableList()","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"                .remove(0));","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"        assertEquals(uniqueTransactionList.asUnmodifiableObservableList().toString(), uniqueTransactionList.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ondretann"},"content":"    public void remove_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ondretann"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTransactionList.remove(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ondretann"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ondretann"},"content":"        assertThrows(TransactionNotFoundException.class, () -\u003e uniqueTransactionList.remove(TRANSACTION_1));","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ondretann"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ondretann"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ondretann"},"content":"        uniqueTransactionList.add(TRANSACTION_1);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ondretann"},"content":"        uniqueTransactionList.remove(TRANSACTION_1);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ondretann"},"content":"        UniqueTransactionList expectedUniqueTransactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"ondretann"},"content":"        assertEquals(expectedUniqueTransactionList, uniqueTransactionList);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"ondretann"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"ondretann"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"    public void setTransactions_uniqueTransactionList_replacesOwnListWithProvidedUniqueTransactionList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"        UniqueTransactionList originalList \u003d new UniqueTransactionList();","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"PateShin"},"content":"        originalList.add(TypicalTransactions.TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"PateShin"},"content":"        UniqueTransactionList replacementList \u003d new UniqueTransactionList();","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"PateShin"},"content":"        replacementList.add(TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"PateShin"},"content":"        originalList.setTransactions(replacementList);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"        assertEquals(replacementList, originalList);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"    public void setTransactions_listWithDuplicateTransactions_throwsDuplicateTransactionException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"        List\u003cTransaction\u003e listWithDuplicateTransactions \u003d Arrays.asList(TRANSACTION_1, TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"        assertThrows(DuplicateTransactionException.class, () -\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"                uniqueTransactionList.setTransactions(listWithDuplicateTransactions));","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"    public void setTransactions_listWithUniqueTransactions_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"        List\u003cTransaction\u003e uniqueTransactions \u003d Arrays.asList(TypicalTransactions.TRANSACTION_1,","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"                TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.setTransactions(uniqueTransactions);","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"        assertEquals(uniqueTransactions, uniqueTransactionList.asUnmodifiableObservableList());","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"    public void iterator_returnsIteratorOfInternalList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"        // Add transactions to the list","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.add(TypicalTransactions.TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.add(TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"PateShin"},"content":"        // Get the iterator","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"        Iterator\u003cTransaction\u003e iterator \u003d uniqueTransactionList.iterator();","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"PateShin"},"content":"        // Verify that the iterator returns the transactions in the expected order","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"PateShin"},"content":"        assertTrue(iterator.hasNext());","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"PateShin"},"content":"        assertEquals(TRANSACTION_1, iterator.next());","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"PateShin"},"content":"        assertTrue(iterator.hasNext());","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"PateShin"},"content":"        assertEquals(TypicalTransactions.TRANSACTION_2, iterator.next());","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"PateShin"},"content":"        assertFalse(iterator.hasNext());","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"PateShin"},"content":"    public void equals_otherUniqueTransactionListWithSameTransactions_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"PateShin"},"content":"        UniqueTransactionList otherList \u003d new UniqueTransactionList();","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"PateShin"},"content":"        otherList.add(TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"PateShin"},"content":"        otherList.add(TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.add(TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.add(TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"PateShin"},"content":"        assertEquals(uniqueTransactionList, otherList);","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"PateShin"},"content":"    public void equals_otherUniqueTransactionListWithDifferentTransactions_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"PateShin"},"content":"        UniqueTransactionList otherList \u003d new UniqueTransactionList();","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"PateShin"},"content":"        otherList.add(TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.add(TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"PateShin"},"content":"        assertNotEquals(uniqueTransactionList, otherList);","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"PateShin"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"PateShin"},"content":"        assertNotEquals(null, uniqueTransactionList);","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"PateShin"},"content":"    public void equals_differentType_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"PateShin"},"content":"        assertNotEquals(\"string\", uniqueTransactionList);","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"PateShin"},"content":"    public void hashCode_uniqueTransactionListsWithSameTransactions_returnsSameHashCode() {","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"PateShin"},"content":"        UniqueTransactionList otherList \u003d new UniqueTransactionList();","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"PateShin"},"content":"        otherList.add(TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"PateShin"},"content":"        otherList.add(TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.add(TRANSACTION_1);","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"PateShin"},"content":"        uniqueTransactionList.add(TypicalTransactions.TRANSACTION_2);","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"PateShin"},"content":"        assertEquals(uniqueTransactionList.hashCode(), otherList.hashCode());","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"PateShin":92,"DhiraPT":62,"ondretann":19}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    private static final int INVALID_ID \u003d 123;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"    private static final int INVALID_YEAR_JOINED \u003d 123;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    private static final int VALID_ID \u003d BENSON.getId().value;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    private static final int VALID_YEAR_JOINED \u003d BENSON.getYearJoined().value;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_YEAR_JOINED,","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"                        VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"                VALID_YEAR_JOINED, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_YEAR_JOINED,","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"                        VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"                VALID_YEAR_JOINED, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_YEAR_JOINED,","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"                        VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"                VALID_YEAR_JOINED, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_YEAR_JOINED,","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"DhiraPT"},"content":"                        INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"DhiraPT"},"content":"                VALID_YEAR_JOINED, null, VALID_TAGS);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_YEAR_JOINED,","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"DhiraPT"},"content":"                        VALID_ADDRESS, invalidTags);","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DhiraPT":22,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.storage.JsonAdaptedTransaction.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.TypicalTransactions.TRANSACTION_1;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.DateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Description;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"public class JsonAdaptedTransactionTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    private static final long INVALID_ID \u003d 123;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"    private static final String INVALID_DATETIME \u003d \"01-01-2024 12:00\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"    private static final int INVALID_EMPLOYEEID \u003d 123;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    private static final double INVALID_AMOUNT \u003d -1.0;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    private static final long VALID_ID \u003d TRANSACTION_1.getId().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    private static final String VALID_DATETIME \u003d TRANSACTION_1.getDateTime().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"    private static final int VALID_EMPLOYEEID \u003d TRANSACTION_1.getEmployeeId().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    private static final double VALID_AMOUNT \u003d TRANSACTION_1.getAmount().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"    private static final String VALID_DESCRIPTION \u003d TRANSACTION_1.getDescription().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    public void toModelType_validTransactionDetails_returnsTransaction() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(TRANSACTION_1);","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"        assertEquals(TRANSACTION_1, transaction.toModelType());","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    public void toModelType_invalidDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedTransaction transaction \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedTransaction(VALID_ID, INVALID_DATETIME, VALID_EMPLOYEEID,","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"                        VALID_AMOUNT, VALID_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    public void toModelType_nullDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(VALID_ID, null, VALID_EMPLOYEEID,","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"                VALID_AMOUNT, VALID_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateTime.class.getSimpleName());","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"    public void toModelType_invalidEmployeeId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedTransaction transaction \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedTransaction(VALID_ID, VALID_DATETIME, INVALID_EMPLOYEEID,","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"                        VALID_AMOUNT, VALID_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"    public void toModelType_invalidAmount_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedTransaction transaction \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"                new JsonAdaptedTransaction(VALID_ID, VALID_DATETIME, VALID_EMPLOYEEID,","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"                        INVALID_AMOUNT, VALID_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"        String expectedMessage \u003d Amount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(VALID_ID, VALID_DATETIME, VALID_EMPLOYEEID,","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"                VALID_AMOUNT, null);","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":76}},{"path":"src/test/java/seedu/address/storage/JsonPayBackStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.testutil.TypicalTransactions.TRANSACTION_4;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"public class JsonPayBackStorageTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPayBackStorageTest\");","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"    @TempDir","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    public Path testFolder;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    public void readPayBack_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPayBack(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"    private java.util.Optional\u003cReadOnlyPayBack\u003e readPayBack(String filePath) throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        return new JsonPayBackStorage(Paths.get(filePath)).readPayBack(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"                : null;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"        assertFalse(readPayBack(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPayBack(\"notJsonFormatPayBack.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"    public void readPayBack_invalidPersonPayBack_throwDataLoadingException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPayBack(\"invalidPersonPayBack.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"    public void readPayBack_invalidAndValidPersonPayBack_throwDataLoadingException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPayBack(\"invalidAndValidPersonPayBack.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"    public void readPayBack_invalidTransactionPayBack_throwDataLoadingException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPayBack(\"invalidTransactionPayBack.json\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"PateShin"},"content":"    public void readAndSavePayBack_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPayBack.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"        PayBack original \u003d getTypicalPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"        JsonPayBackStorage jsonPayBackStorage \u003d new JsonPayBackStorage(filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"        jsonPayBackStorage.savePayBack(original, filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"PateShin"},"content":"        ReadOnlyPayBack readBack \u003d jsonPayBackStorage.readPayBack(filePath).get();","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"PateShin"},"content":"        assertEquals(original, new PayBack(readBack));","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"PateShin"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"PateShin"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"PateShin"},"content":"        jsonPayBackStorage.savePayBack(original, filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"        readBack \u003d jsonPayBackStorage.readPayBack(filePath).get();","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"PateShin"},"content":"        assertEquals(original, new PayBack(readBack));","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"        original.addTransaction(TRANSACTION_4);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"        jsonPayBackStorage.savePayBack(original, filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"        readBack \u003d jsonPayBackStorage.readPayBack(filePath).get();","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"        assertEquals(original, new PayBack(readBack));","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"PateShin"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"PateShin"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"        jsonPayBackStorage.savePayBack(original); // file path not specified","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"PateShin"},"content":"        readBack \u003d jsonPayBackStorage.readPayBack().get(); // file path not specified","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"        assertEquals(original, new PayBack(readBack));","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"    public void savePayBack_nullPayBack_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePayBack(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"     * Saves {@code PayBack} at the specified {@code filePath}.","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"PateShin"},"content":"    private void savePayBack(ReadOnlyPayBack payBack, String filePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"            new JsonPayBackStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"                    .savePayBack(payBack, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"PateShin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"PateShin"},"content":"    public void savePayBack_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePayBack(new PayBack(), null));","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"PateShin":110,"DhiraPT":12}},{"path":"src/test/java/seedu/address/storage/JsonSerializablePayBackTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"public class JsonSerializablePayBackTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePayBackTest\");","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsPayBack.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonPayBack.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonPayBack.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    private static final Path INVALID_TRANSACTION_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTransactionPayBack.json\");","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        JsonSerializablePayBack dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"                JsonSerializablePayBack.class).get();","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        PayBack payBackFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        PayBack typicalPersonsPayBack \u003d TypicalPersons.getTypicalPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"        assertEquals(payBackFromFile, typicalPersonsPayBack);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"        JsonSerializablePayBack dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"                JsonSerializablePayBack.class).get();","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"        JsonSerializablePayBack dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"                JsonSerializablePayBack.class).get();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePayBack.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    public void toModelType_invalidTransactionFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"        JsonSerializablePayBack dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TRANSACTION_FILE,","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"                JsonSerializablePayBack.class).get();","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"PateShin":16,"DhiraPT":8,"-":31}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"        userPrefs.setPayBackFilePath(Paths.get(\"payback.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"PateShin":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.ReadOnlyPayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        JsonPayBackStorage payBackStorage \u003d new JsonPayBackStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        storageManager \u003d new StorageManager(payBackStorage, userPrefsStorage);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"    public void payBackReadSave() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"         * {@link JsonPayBackStorage} class.","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPayBackStorageTest} class.","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"        PayBack original \u003d getTypicalPayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        storageManager.savePayBack(original);","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"        ReadOnlyPayBack retrieved \u003d storageManager.readPayBack().get();","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        assertEquals(original, new PayBack(retrieved));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"    public void getPayBackFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"        assertNotNull(storageManager.getPayBackFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PateShin":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"linnn-7"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"linnn-7"},"content":"        descriptor.setId(person.getId());","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"linnn-7"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"linnn-7"},"content":"     * Sets the {@code id} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"linnn-7"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"linnn-7"},"content":"    public EditPersonDescriptorBuilder withId(int id) {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"linnn-7"},"content":"        descriptor.setId(new Id(id));","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"linnn-7"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"linnn-7"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"linnn-7"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"linnn-7":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/PayBackBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":" * A utility class to help with building PayBack objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":" *     {@code PayBack ab \u003d new PayBackBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"public class PayBackBuilder {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    private PayBack payBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    public PayBackBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        payBack \u003d new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"    public PayBackBuilder(PayBack payBack) {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        this.payBack \u003d payBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"     * Adds a new {@code Person} to the {@code PayBack} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    public PayBackBuilder withPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        payBack.addPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"     * Adds a new {@code Transaction} to the {@code PayBack} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    public PayBackBuilder withTransaction(Transaction transaction) {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"        payBack.addTransaction(transaction);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"    public PayBack build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        return payBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"PateShin":34,"DhiraPT":9}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.YearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    public static final int DEFAULT_ID \u003d 240001;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    public static final String DEFAULT_YEAR_JOINED \u003d \"2024\";","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"    private Id id;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"    private YearJoined yearJoined;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"        yearJoined \u003d new YearJoined(DEFAULT_YEAR_JOINED);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"        yearJoined \u003d personToCopy.getYearJoined();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"     * Sets the {@code YearJoined} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"    public PersonBuilder withYearJoined(String year) {","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"        this.yearJoined \u003d new YearJoined(year);","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"     * Sets the {@code Id} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"    public PersonBuilder withId(Integer id) {","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"DhiraPT"},"content":"        return new Person(id, name, phone, email, address, yearJoined, tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"linnn-7"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"linnn-7"},"content":"     * Return id of the employee.","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"linnn-7"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"linnn-7"},"content":"     * @return integer representation of id.","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"linnn-7"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"linnn-7"},"content":"    public int getIdValue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"linnn-7"},"content":"        return this.id.value;","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"linnn-7":7,"PateShin":16,"DhiraPT":11,"-":97}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"linnn-7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR_JOINED;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"linnn-7"},"content":"        sb.append(PREFIX_YEAR_JOINED + Integer.toString(person.getYearJoined().value) + \" \");","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"linnn-7"},"content":"        descriptor.getYearJoined().ifPresent(yearJoined -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"linnn-7"},"content":"                sb.append(PREFIX_YEAR_JOINED).append(yearJoined.value).append(\" \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"linnn-7"},"content":"                sb.append(PREFIX_TAG + \" -1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"linnn-7":5,"-":59}},{"path":"src/test/java/seedu/address/testutil/TransactionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.DateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Description;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.TransactionId;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":" * A utility class to help with building Transaction objects.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"public class TransactionBuilder {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"    public static final long DEFAULT_ID \u003d 1711815646;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":"    public static final String DEFAULT_DATETIME \u003d \"30/03/2024 16:20\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":"    public static final int DEFAULT_EMPLOYEEID \u003d 240001;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"    public static final String DEFAULT_AMOUNT \u003d \"5000\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Salary\";","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"    private TransactionId id;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"    private DateTime dateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    private Id employeeId;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"    private Amount amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"    private Description description;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"     * Creates a {@code TransactionBuilder} with the default details.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    public TransactionBuilder() {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"        id \u003d new TransactionId();","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"        dateTime \u003d new DateTime(DEFAULT_DATETIME);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"        employeeId \u003d new Id(DEFAULT_EMPLOYEEID);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"        amount \u003d new Amount(DEFAULT_AMOUNT);","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"     * Initializes the TransactionBuilder with the data of {@code transactionToCopy}.","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"    public TransactionBuilder(Transaction transactionToCopy) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"        id \u003d transactionToCopy.getId();","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        dateTime \u003d transactionToCopy.getDateTime();","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"        employeeId \u003d transactionToCopy.getEmployeeId();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"        amount \u003d transactionToCopy.getAmount();","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"        description \u003d transactionToCopy.getDescription();","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"DhiraPT"},"content":"     * Sets the id of the {@code Transaction} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"DhiraPT"},"content":"    public TransactionBuilder withId(long id) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"DhiraPT"},"content":"        this.id \u003d new TransactionId(id);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"DhiraPT"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"DhiraPT"},"content":"     * Sets the dateTime of the {@code Transaction} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"DhiraPT"},"content":"    public TransactionBuilder withDateTime(String dateTime) {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"DhiraPT"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"DhiraPT"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"DhiraPT"},"content":"     * Sets the employeeId of the {@code Transaction} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"DhiraPT"},"content":"    public TransactionBuilder withEmployeeId(int employeeId) {","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"DhiraPT"},"content":"        this.employeeId \u003d new Id(employeeId);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"DhiraPT"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"DhiraPT"},"content":"     * Sets the amount of the {@code Transaction} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"DhiraPT"},"content":"    public TransactionBuilder withAmount(String amount) {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"DhiraPT"},"content":"        this.amount \u003d new Amount(amount);","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"DhiraPT"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"DhiraPT"},"content":"     * Sets the description of the {@code Transaction} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"DhiraPT"},"content":"    public TransactionBuilder withDescription(String description) {","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"DhiraPT"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"DhiraPT"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"DhiraPT"},"content":"    public Transaction build() {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"DhiraPT"},"content":"        return new Transaction(id, dateTime, employeeId, amount, description);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":92}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"     * Returns an {@code PayBack} with all the typical persons.","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"    public static PayBack getTypicalPayBack() {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"PateShin"},"content":"        PayBack ab \u003d new PayBack();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"PateShin":4,"-":72}},{"path":"src/test/java/seedu/address/testutil/TypicalTransactions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DhiraPT"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AMOUNT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"DhiraPT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYEEID;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"DhiraPT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"DhiraPT"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"DhiraPT"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.PayBack;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"DhiraPT"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"DhiraPT"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"DhiraPT"},"content":" * A utility class containing a list of {@code Transaction} objects to be used in tests.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"DhiraPT"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"DhiraPT"},"content":"public class TypicalTransactions {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"DhiraPT"},"content":"    public static final Transaction TRANSACTION_1 \u003d new TransactionBuilder().withId(1711815800)","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"DhiraPT"},"content":"            .withDateTime(\"01/01/2024 12:00\").withEmployeeId(240001)","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"DhiraPT"},"content":"            .withAmount(\"10.00\").withDescription(\"Lunch\").build();","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"DhiraPT"},"content":"    public static final Transaction TRANSACTION_2 \u003d new TransactionBuilder().withId(1711825434)","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"DhiraPT"},"content":"            .withDateTime(\"01/01/2024 13:00\").withEmployeeId(240002)","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"DhiraPT"},"content":"            .withAmount(\"20\").withDescription(\"Claims\").build();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"DhiraPT"},"content":"    public static final Transaction TRANSACTION_3 \u003d new TransactionBuilder().withId(1711826000).withEmployeeId(240003)","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"DhiraPT"},"content":"            .withAmount(\"30.0\").withDescription(\"Transport\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"DhiraPT"},"content":"    // Manually added - Transaction\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"DhiraPT"},"content":"    public static final Transaction TRANSACTION_4 \u003d new TransactionBuilder().withDateTime(VALID_DATETIME)","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"DhiraPT"},"content":"            .withEmployeeId(VALID_EMPLOYEEID).withAmount(VALID_AMOUNT).withDescription(VALID_DESCRIPTION).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"DhiraPT"},"content":"    private TypicalTransactions() {} // prevents instantiation","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"DhiraPT"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"DhiraPT"},"content":"     * Returns an {@code PayBack} with all the typical transactions.","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"DhiraPT"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"DhiraPT"},"content":"    public static PayBack getTypicalPayBack() {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"DhiraPT"},"content":"        PayBack pb \u003d new PayBack();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"DhiraPT"},"content":"        for (Transaction transaction : getTypicalTransactions()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"DhiraPT"},"content":"            pb.addTransaction(transaction);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"DhiraPT"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"DhiraPT"},"content":"        return pb;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"DhiraPT"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"DhiraPT"},"content":"    public static List\u003cTransaction\u003e getTypicalTransactions() {","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"DhiraPT"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TRANSACTION_1, TRANSACTION_2, TRANSACTION_3));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"DhiraPT"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"DhiraPT"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"DhiraPT":49}}]
