[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W11-3/tp/graph/badge.svg?token\u003dF7G5FM6BNJ)](https://codecov.io/gh/AY2324S2-CS2103T-W11-3/tp)","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":"* This is an application for **NUS School of Computing (SoC) students to find contacts within SoC** and **book consultation slots with Professors and Teaching Assistants**.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cyqjoseph"},"content":"  * retrieves all contact details of a user within NUS SoC","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"cyqjoseph"},"content":"  * create and delete user contact details","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":"  * retrieves all consultation timings of a user","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"  * create and delete consultation timings","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"* The project is an ongoing software project for a desktop application (called _Dook_) used for managing contact details.","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"  * It is built on the AddressBook-Level3 project.","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"* It is named `Dook` because it is a moniker from the individual project (iP) that all CS2103T students do.","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"* For the detailed documentation of this project, see the **[User Guide](https://github.com/AY2324S2-CS2103T-W11-3/tp/blob/master/docs/UserGuide.md)**, or the **[Developer Guide](https://github.com/AY2324S2-CS2103T-W11-3/tp/blob/master/docs/DeveloperGuide.md)** if you are interested in contributing to Dook.","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"cyqjoseph":11,"-":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"### Joseph Chan ","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"\u003cimg src\u003d\"images/cyqjoseph.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"[[github](https://github.com/cyqjoseph)]","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":"* Role: Developer ","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cyqjoseph"},"content":"### Wang Minhong","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cyqjoseph"},"content":"\u003cimg src\u003d\"images/chrysanthemumt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cyqjoseph"},"content":"[[github](http://github.com/chrysanthemumt)]","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"cyqjoseph"},"content":"* Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"### Jerremy Ng","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"\u003cimg src\u003d\"images/jerremyng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"[[github](http://github.com/jerremyng)]","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"* Responsibilities: Code","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"### Ujjwal Gaurav","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"\u003cimg src\u003d\"images/gauravuj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"[[github](http://github.com/gauravuj)]","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"* Role: UI/UX, Frontend Developer, Backend (Backup)","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"* Responsibilities: Maintaing the aesthetic of the product, ","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"  improving functionality of the UI elements, making sure the ","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"  backend respond efficiently with the frontend elements","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"zhenghuil"},"content":"### Low Zheng Hui","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"zhenghuil"},"content":"\u003cimg src\u003d\"images/zhenghuil.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"zhenghuil"},"content":"[[github](https://github.com/zhenghuil)]","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jerremyng":4,"gauravuj":7,"cyqjoseph":8,"-":32,"zhenghuil":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"jerremyng"},"content":"* currently in NUS school of computing","lastModifiedDate":"2024-03-06"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"jerremyng"},"content":"* needs to book many consultations and meetings with professors/students","lastModifiedDate":"2024-03-06"},{"lineNumber":268,"author":{"gitId":"jerremyng"},"content":"* has a busy schedule which constantly changes","lastModifiedDate":"2024-03-06"},{"lineNumber":269,"author":{"gitId":"jerremyng"},"content":"* frequently needs a quick overview of their schedule","lastModifiedDate":"2024-03-06"},{"lineNumber":270,"author":{"gitId":"jerremyng"},"content":"* prefer desktop apps","lastModifiedDate":"2024-03-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":272,"author":{"gitId":"jerremyng"},"content":"* is comfortable using CLI apps","lastModifiedDate":"2024-03-06"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"jerremyng"},"content":"**Value proposition**: Help students manage booking consultations/meeting with professors/students.","lastModifiedDate":"2024-03-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                      | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"ChrysanthemumT"},"content":"| -------- | ------------------------------ |-----------------------------------| ---------------------------------------------------------------------- |","lastModifiedDate":"2024-03-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| `* * *`  | new user                       | see usage instructions            | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"ChrysanthemumT"},"content":"| `* * *`  | user                           | add a contact                     |                                                                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":285,"author":{"gitId":"ChrysanthemumT"},"content":"| `* * *`  | user                           | delete a contact                  | remove entries that I no longer need                                   |","lastModifiedDate":"2024-03-05"},{"lineNumber":286,"author":{"gitId":"ChrysanthemumT"},"content":"| `* * *`  | user                           | update a contact                  |                                                                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":287,"author":{"gitId":"cyqjoseph"},"content":"| `* * *`  | user                           | view professors calendar          | see the available timings                                              |","lastModifiedDate":"2024-03-07"},{"lineNumber":288,"author":{"gitId":"cyqjoseph"},"content":"| `* * *`  | user                           | view professors\u0027s office hours    | know when to contact them                                              |","lastModifiedDate":"2024-03-07"},{"lineNumber":289,"author":{"gitId":"cyqjoseph"},"content":"| `* * *`  | user                           | view professors\u0027s office location | know where to find them                                                | ","lastModifiedDate":"2024-03-07"},{"lineNumber":290,"author":{"gitId":"cyqjoseph"},"content":"| `* * *`  | user                           | find a prof by name               | locate details of persons without having to go through the entire list |","lastModifiedDate":"2024-03-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| `* *`    | user                           | hide private contact details      | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"ChrysanthemumT"},"content":"| `*`      | user                           | update my calendar                | change my schedule                                                     |","lastModifiedDate":"2024-03-05"},{"lineNumber":293,"author":{"gitId":"ChrysanthemumT"},"content":"| `*`      | user                           | create event/consultations        | it can be recorded                                                     |","lastModifiedDate":"2024-03-05"},{"lineNumber":294,"author":{"gitId":"ChrysanthemumT"},"content":"| `*`      | user                           | delete event                      |                                                                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":295,"author":{"gitId":"ChrysanthemumT"},"content":"| `*`      | user                           | update event                      |                                                                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":296,"author":{"gitId":"ChrysanthemumT"},"content":"| `*`      | user                           | view the current week\u0027s consults  | change my schedule                                                     |","lastModifiedDate":"2024-03-05"},{"lineNumber":297,"author":{"gitId":"ChrysanthemumT"},"content":"| `*`      | user                           | view a TA\u0027s calendar              | book a consult                                                         |","lastModifiedDate":"2024-03-05"},{"lineNumber":298,"author":{"gitId":"ChrysanthemumT"},"content":"| `*`      | user                           | generate email to contact         | easily send out communications                                         |","lastModifiedDate":"2024-03-05"},{"lineNumber":299,"author":{"gitId":"cyqjoseph"},"content":"| `*`      | user                           | delete all contacts               |                                                                        | ","lastModifiedDate":"2024-03-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"cyqjoseph"},"content":"(For all use cases below, the **System** is `Dook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-07"},{"lineNumber":305,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":306,"author":{"gitId":"cyqjoseph"},"content":"**Use case: Add a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":307,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":308,"author":{"gitId":"cyqjoseph"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":309,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":310,"author":{"gitId":"cyqjoseph"},"content":"1. User requests to add a contact","lastModifiedDate":"2024-03-07"},{"lineNumber":311,"author":{"gitId":"cyqjoseph"},"content":"2. Dook adds the contact","lastModifiedDate":"2024-03-07"},{"lineNumber":312,"author":{"gitId":"cyqjoseph"},"content":"3. Dook displays the details of the contact added","lastModifiedDate":"2024-03-07"},{"lineNumber":313,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":314,"author":{"gitId":"cyqjoseph"},"content":"   Use case ends","lastModifiedDate":"2024-03-07"},{"lineNumber":315,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":316,"author":{"gitId":"cyqjoseph"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":317,"author":{"gitId":"cyqjoseph"},"content":"* **2a. The contact details are invalid**","lastModifiedDate":"2024-03-07"},{"lineNumber":318,"author":{"gitId":"cyqjoseph"},"content":"    * **2a1. Dook shows an error message**","lastModifiedDate":"2024-03-07"},{"lineNumber":319,"author":{"gitId":"cyqjoseph"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":320,"author":{"gitId":"cyqjoseph"},"content":"    Use Case ends","lastModifiedDate":"2024-03-07"},{"lineNumber":321,"author":{"gitId":"cyqjoseph"},"content":"* **3a. Duplicate contact added**","lastModifiedDate":"2024-03-07"},{"lineNumber":322,"author":{"gitId":"cyqjoseph"},"content":"    * **3a1. Dook shows an error message**","lastModifiedDate":"2024-03-07"},{"lineNumber":323,"author":{"gitId":"cyqjoseph"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":324,"author":{"gitId":"cyqjoseph"},"content":"    Use case ends","lastModifiedDate":"2024-03-07"},{"lineNumber":325,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":326,"author":{"gitId":"cyqjoseph"},"content":"**Use Case: Delete a Contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":327,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":328,"author":{"gitId":"cyqjoseph"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":329,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":330,"author":{"gitId":"cyqjoseph"},"content":"1. User requests to delete a contact by name or index.","lastModifiedDate":"2024-03-07"},{"lineNumber":331,"author":{"gitId":"cyqjoseph"},"content":"2. Dook confirms the deletion request (if applicable).","lastModifiedDate":"2024-03-07"},{"lineNumber":332,"author":{"gitId":"cyqjoseph"},"content":"3. Dook deletes the contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":333,"author":{"gitId":"cyqjoseph"},"content":"4. Dook confirms the contact has been deleted.","lastModifiedDate":"2024-03-07"},{"lineNumber":334,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":335,"author":{"gitId":"cyqjoseph"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":336,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":337,"author":{"gitId":"cyqjoseph"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":338,"author":{"gitId":"cyqjoseph"},"content":"* **2a. User requests to delete all contacts.**","lastModifiedDate":"2024-03-07"},{"lineNumber":339,"author":{"gitId":"cyqjoseph"},"content":"    - **2a1. Dook asks for confirmation.**","lastModifiedDate":"2024-03-07"},{"lineNumber":340,"author":{"gitId":"cyqjoseph"},"content":"    - **2a2. If confirmed, Dook deletes all contacts and confirms deletion.**","lastModifiedDate":"2024-03-07"},{"lineNumber":341,"author":{"gitId":"cyqjoseph"},"content":"    - **2a3. If not confirmed, Dook cancels the deletion process.**","lastModifiedDate":"2024-03-07"},{"lineNumber":342,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":343,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":344,"author":{"gitId":"cyqjoseph"},"content":"* **3a. The specified contact does not exist.**","lastModifiedDate":"2024-03-07"},{"lineNumber":345,"author":{"gitId":"cyqjoseph"},"content":"    - **3a1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":346,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":347,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":348,"author":{"gitId":"cyqjoseph"},"content":"* **3b. The contact index is out of range.**","lastModifiedDate":"2024-03-07"},{"lineNumber":349,"author":{"gitId":"cyqjoseph"},"content":"    - **3b1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":350,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":351,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":352,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":353,"author":{"gitId":"cyqjoseph"},"content":"**Use Case: View All Contacts**","lastModifiedDate":"2024-03-07"},{"lineNumber":354,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":355,"author":{"gitId":"cyqjoseph"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":356,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":357,"author":{"gitId":"cyqjoseph"},"content":"1. User requests to view all contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":358,"author":{"gitId":"cyqjoseph"},"content":"2. Dook retrieves and displays all contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":359,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":360,"author":{"gitId":"cyqjoseph"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":361,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":362,"author":{"gitId":"cyqjoseph"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":363,"author":{"gitId":"cyqjoseph"},"content":"* **2a. There are no contacts to display.**","lastModifiedDate":"2024-03-07"},{"lineNumber":364,"author":{"gitId":"cyqjoseph"},"content":"    - **2a1. Dook shows a message indicating there are no contacts.**","lastModifiedDate":"2024-03-07"},{"lineNumber":365,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":366,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":367,"author":{"gitId":"cyqjoseph"},"content":"* **2b. An unexpected error occurs while fetching contacts.**","lastModifiedDate":"2024-03-07"},{"lineNumber":368,"author":{"gitId":"cyqjoseph"},"content":"    - **2b1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":369,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":370,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":371,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":372,"author":{"gitId":"cyqjoseph"},"content":"**Use Case: Find Contacts**","lastModifiedDate":"2024-03-07"},{"lineNumber":373,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":374,"author":{"gitId":"cyqjoseph"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":375,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":376,"author":{"gitId":"cyqjoseph"},"content":"1. User requests to find contacts by name or contact type.","lastModifiedDate":"2024-03-07"},{"lineNumber":377,"author":{"gitId":"cyqjoseph"},"content":"2. Dook searches and displays matching contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":378,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":379,"author":{"gitId":"cyqjoseph"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":381,"author":{"gitId":"cyqjoseph"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":382,"author":{"gitId":"cyqjoseph"},"content":"* **2a. No contacts match the search criteria.**","lastModifiedDate":"2024-03-07"},{"lineNumber":383,"author":{"gitId":"cyqjoseph"},"content":"    - **2a1. Dook shows a message indicating no matches found.**","lastModifiedDate":"2024-03-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":386,"author":{"gitId":"cyqjoseph"},"content":"* **2b. An error occurs during the search.**","lastModifiedDate":"2024-03-07"},{"lineNumber":387,"author":{"gitId":"cyqjoseph"},"content":"    - **2b1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":388,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":389,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":390,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":391,"author":{"gitId":"cyqjoseph"},"content":"### Booking System Use Cases","lastModifiedDate":"2024-03-07"},{"lineNumber":392,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":393,"author":{"gitId":"cyqjoseph"},"content":"**Use case: Book a Consultation Slot**","lastModifiedDate":"2024-03-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"cyqjoseph"},"content":"1. User inputs `/book` command with necessary details.","lastModifiedDate":"2024-03-07"},{"lineNumber":398,"author":{"gitId":"cyqjoseph"},"content":"2. Dook schedules the booking.","lastModifiedDate":"2024-03-07"},{"lineNumber":399,"author":{"gitId":"cyqjoseph"},"content":"3. Dook confirms the booking details to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"cyqjoseph"},"content":"* **2a. The booking details are invalid.**","lastModifiedDate":"2024-03-07"},{"lineNumber":405,"author":{"gitId":"cyqjoseph"},"content":"    * **2a1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":406,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":407,"author":{"gitId":"cyqjoseph"},"content":"      Use Case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":408,"author":{"gitId":"cyqjoseph"},"content":"* **2b. The requested time slot overlaps with an existing booking.**","lastModifiedDate":"2024-03-07"},{"lineNumber":409,"author":{"gitId":"cyqjoseph"},"content":"    * **2b1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":410,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":411,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":412,"author":{"gitId":"cyqjoseph"},"content":"* **2c. The specified user does not match any contacts.**","lastModifiedDate":"2024-03-07"},{"lineNumber":413,"author":{"gitId":"cyqjoseph"},"content":"    * **2c1. Dook prompts the user to select a valid contact.**","lastModifiedDate":"2024-03-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"cyqjoseph"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":416,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":417,"author":{"gitId":"cyqjoseph"},"content":"**Use Case: View All Bookings**","lastModifiedDate":"2024-03-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":421,"author":{"gitId":"cyqjoseph"},"content":"1. User requests to view all bookings.","lastModifiedDate":"2024-03-07"},{"lineNumber":422,"author":{"gitId":"cyqjoseph"},"content":"2. Dook retrieves and displays all bookings.","lastModifiedDate":"2024-03-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":427,"author":{"gitId":"cyqjoseph"},"content":"* **2a. Unable to retrieve bookings.**","lastModifiedDate":"2024-03-07"},{"lineNumber":428,"author":{"gitId":"cyqjoseph"},"content":"    * **2a1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":432,"author":{"gitId":"cyqjoseph"},"content":"**Use Case: Cancel Bookings**","lastModifiedDate":"2024-03-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":434,"author":{"gitId":"cyqjoseph"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"cyqjoseph"},"content":"1. User requests to cancel a booking or all bookings.","lastModifiedDate":"2024-03-07"},{"lineNumber":437,"author":{"gitId":"cyqjoseph"},"content":"2. Dook asks for confirmation (if applicable).","lastModifiedDate":"2024-03-07"},{"lineNumber":438,"author":{"gitId":"cyqjoseph"},"content":"3. User confirms cancellation.","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"cyqjoseph"},"content":"4. Dook cancels the booking(s) and confirms to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":440,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":441,"author":{"gitId":"cyqjoseph"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":442,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":443,"author":{"gitId":"cyqjoseph"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":444,"author":{"gitId":"cyqjoseph"},"content":"* **2a. User decides not to cancel after all.**","lastModifiedDate":"2024-03-07"},{"lineNumber":445,"author":{"gitId":"cyqjoseph"},"content":"    * **2a1. Dook cancels the cancellation process.**","lastModifiedDate":"2024-03-07"},{"lineNumber":446,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":447,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":448,"author":{"gitId":"cyqjoseph"},"content":"* **3a. The specified booking does not exist.**","lastModifiedDate":"2024-03-07"},{"lineNumber":449,"author":{"gitId":"cyqjoseph"},"content":"    * **3a1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":451,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":452,"author":{"gitId":"cyqjoseph"},"content":"* **4a. Error in deleting bookings.**","lastModifiedDate":"2024-03-07"},{"lineNumber":453,"author":{"gitId":"cyqjoseph"},"content":"    * **4a1. Dook shows an error message.**","lastModifiedDate":"2024-03-07"},{"lineNumber":454,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":455,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":457,"author":{"gitId":"cyqjoseph"},"content":"**Use Case: Find Free Time**","lastModifiedDate":"2024-03-07"},{"lineNumber":458,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":459,"author":{"gitId":"cyqjoseph"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":460,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":461,"author":{"gitId":"cyqjoseph"},"content":"1. User requests to find free time for a contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":462,"author":{"gitId":"cyqjoseph"},"content":"2. Dook retrieves and displays available time slots.","lastModifiedDate":"2024-03-07"},{"lineNumber":463,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":464,"author":{"gitId":"cyqjoseph"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":465,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":466,"author":{"gitId":"cyqjoseph"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":467,"author":{"gitId":"cyqjoseph"},"content":"* **2a. No free time slots are available.**","lastModifiedDate":"2024-03-07"},{"lineNumber":468,"author":{"gitId":"cyqjoseph"},"content":"    * **2a1. Dook shows a message indicating no available time slots.**","lastModifiedDate":"2024-03-07"},{"lineNumber":469,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":470,"author":{"gitId":"cyqjoseph"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":471,"author":{"gitId":"cyqjoseph"},"content":"* **2b. The specified contact does not exist.**","lastModifiedDate":"2024-03-07"},{"lineNumber":472,"author":{"gitId":"cyqjoseph"},"content":"    * **2b1. Dook prompts the user to select a valid contact.**","lastModifiedDate":"2024-03-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"cyqjoseph"},"content":"4. The system architecture should be designed to efficiently handle growth in data volume, capable of supporting at least 10 times the initial data volume without a complete overhaul.","lastModifiedDate":"2024-03-07"},{"lineNumber":485,"author":{"gitId":"cyqjoseph"},"content":"5. The system should include automated backup capabilities to prevent data loss and provide options for data recovery in case of system failure.","lastModifiedDate":"2024-03-07"},{"lineNumber":486,"author":{"gitId":"cyqjoseph"},"content":"6. Application should be able to use online and offline. ","lastModifiedDate":"2024-03-07"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"cyqjoseph"},"content":"* **Professor**: Lecturer / Researcher in the National University of Singapore ","lastModifiedDate":"2024-03-07"},{"lineNumber":493,"author":{"gitId":"cyqjoseph"},"content":"* **SoC**: School of Computing in NUS","lastModifiedDate":"2024-03-07"},{"lineNumber":494,"author":{"gitId":"cyqjoseph"},"content":"* **Tutor**: Professor or Teaching Assistant in NUS SoC","lastModifiedDate":"2024-03-07"},{"lineNumber":495,"author":{"gitId":"cyqjoseph"},"content":"* **Consultation slot**: Time interval dedicated to a meeting","lastModifiedDate":"2024-03-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jerremyng":7,"ChrysanthemumT":11,"cyqjoseph":160,"-":370}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jerremyng"},"content":"    content: \"dook\";","lastModifiedDate":"2024-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jerremyng":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"cyqjoseph"},"content":"title: Dook","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":"**Dook** is an application for **NUS School of Computing (SoC) students to find contacts within SoC** and **book consultation slots with Professors and Teaching Assistants**.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"* If you are interested in using Dook, head over to the [_Quick Start_ section of the **User Guide**](https://github.com/AY2324S2-CS2103T-W11-3/tp/blob/master/docs/UserGuide.md).","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"* If you are interested about developing Dook, the [**Developer Guide**](https://github.com/AY2324S2-CS2103T-W11-3/tp/blob/master/docs/DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cyqjoseph":4,"-":14}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"     * Formats the {@code booking} for display to the user.","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"cyqjoseph"},"content":"    public static String formatBooking(Booking booking) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"        // TODO","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"        return \"NOT_IMPLEMENTED_YET\";","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jerremyng":8,"cyqjoseph":1,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyqjoseph"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"cyqjoseph"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":" * Adds a booking to the booking system.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"public class AddBookingCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":"    public static final String COMMAND_WORD \u003d \"addBooking\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"cyqjoseph"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a booking to the booking system. \"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"cyqjoseph"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"cyqjoseph"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"cyqjoseph"},"content":"            + PREFIX_START_TIME + \"START \"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"cyqjoseph"},"content":"            + PREFIX_END_TIME + \"END\\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"cyqjoseph"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"cyqjoseph"},"content":"            + PREFIX_NAME + \"John\u0027s Birthday Party \"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"cyqjoseph"},"content":"            + PREFIX_START_TIME + \"2023-12-31T19:00 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"cyqjoseph"},"content":"            + PREFIX_END_TIME + \"2023-12-31T23:00\";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"cyqjoseph"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New booking added: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"cyqjoseph"},"content":"    public static final String MESSAGE_DUPLICATE_BOOKING \u003d \"This booking conflicts with an existing booking in the system\";","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"cyqjoseph"},"content":"    private final Booking toAdd;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"cyqjoseph"},"content":"     * Creates an AddBookingCommand to add the specified {@code Booking}","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"cyqjoseph"},"content":"    public AddBookingCommand(Booking booking) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"cyqjoseph"},"content":"        requireNonNull(booking);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"cyqjoseph"},"content":"        toAdd \u003d booking;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"cyqjoseph"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"cyqjoseph"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"cyqjoseph"},"content":"        // This is a placeholder for conflict checking logic. You\u0027ll need to implement","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"cyqjoseph"},"content":"        // model.hasBookingConflict(toAdd) or similar method based on your model\u0027s capabilities.","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"cyqjoseph"},"content":"        if (model.hasBooking(toAdd)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"cyqjoseph"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BOOKING);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"cyqjoseph"},"content":"        model.addBooking(toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"cyqjoseph"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"cyqjoseph"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"cyqjoseph"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"cyqjoseph"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"cyqjoseph"},"content":"        if (!(other instanceof AddBookingCommand)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"cyqjoseph"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"cyqjoseph"},"content":"        AddBookingCommand otherAddBookingCommand \u003d (AddBookingCommand) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"cyqjoseph"},"content":"        return toAdd.equals(otherAddBookingCommand.toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"cyqjoseph"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"cyqjoseph"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"cyqjoseph"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"cyqjoseph"},"content":"                .toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"cyqjoseph"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"cyqjoseph":76}},{"path":"src/main/java/seedu/address/logic/commands/BookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"public class BookCommand extends Command {","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public static final String COMMAND_WORD \u003d \"book\";","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Booking created!\";","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    public static final String MESSAGE_USAGE \u003d BookCommand.COMMAND_WORD + \": Creates a booking with a person. \"","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"            + PREFIX_START_TIME + \"START TIME \"","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"            + PREFIX_END_TIME + \"END TIME\";","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    private final Booking toAdd;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"     * Creates a BookCommand to add {@code booking}","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     * @param booking","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"    public BookCommand(Booking booking) {","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        requireNonNull(booking);","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        this.toAdd \u003d booking;","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"        model.addBooking(toAdd);","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"jerremyng":45}},{"path":"src/main/java/seedu/address/logic/parser/AddBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyqjoseph"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"cyqjoseph"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.logic.commands.AddBookingCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.BookingName;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.StartTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.EndTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":" * Parses input arguments and creates a new AddBookingCommand object","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"cyqjoseph"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"cyqjoseph"},"content":"public class AddBookingCommandParser implements Parser\u003cAddBookingCommand\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"cyqjoseph"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBookingCommand","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"cyqjoseph"},"content":"     * and returns an AddBookingCommand object for execution.","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"cyqjoseph"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"cyqjoseph"},"content":"    public AddBookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"cyqjoseph"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"cyqjoseph"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"cyqjoseph"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_START_TIME, PREFIX_END_TIME)","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"cyqjoseph"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"cyqjoseph"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"cyqjoseph"},"content":"        BookingName name \u003d ParserUtil.parseBookingName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"cyqjoseph"},"content":"        StartTime start \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"cyqjoseph"},"content":"        EndTime end \u003d ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"cyqjoseph"},"content":"        Booking booking \u003d new Booking(name, start, end);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"cyqjoseph"},"content":"        return new AddBookingCommand(booking);","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"cyqjoseph"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"cyqjoseph"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"cyqjoseph"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"cyqjoseph"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"cyqjoseph"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"cyqjoseph":51}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"    public static final Prefix PREFIX_BOOKING_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"e/\");","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jerremyng":2,"cyqjoseph":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"cyqjoseph"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"cyqjoseph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.EndTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.StartTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.model.booking.BookingName;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"cyqjoseph"},"content":"     * Parses a {@code String name} into a {@code Name} for a booking.","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"cyqjoseph"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"cyqjoseph"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"cyqjoseph"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"cyqjoseph"},"content":"    public static BookingName parseBookingName(String name) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"cyqjoseph"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"cyqjoseph"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"cyqjoseph"},"content":"        if (!BookingName.isValidName(trimmedName)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"cyqjoseph"},"content":"            throw new ParseException(BookingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"cyqjoseph"},"content":"        return new BookingName(trimmedName);","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"cyqjoseph"},"content":"     * Parses a {@code String start} into a {@code StartTime}.","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"cyqjoseph"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"cyqjoseph"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"cyqjoseph"},"content":"     * @throws ParseException if the given {@code start} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"cyqjoseph"},"content":"    public static StartTime parseStartTime(String start) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"cyqjoseph"},"content":"        requireNonNull(start);","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"cyqjoseph"},"content":"        String trimmedStart \u003d start.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"cyqjoseph"},"content":"        if (!StartTime.isValidStartTime(trimmedStart)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"cyqjoseph"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"cyqjoseph"},"content":"        return new StartTime(trimmedStart);","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"cyqjoseph"},"content":"     * Parses a {@code String end} into an {@code EndTime}.","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"cyqjoseph"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"cyqjoseph"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"cyqjoseph"},"content":"     * @throws ParseException if the given {@code end} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"cyqjoseph"},"content":"    public static EndTime parseEndTime(String end) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"cyqjoseph"},"content":"        requireNonNull(end);","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"cyqjoseph"},"content":"        String trimmedEnd \u003d end.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"cyqjoseph"},"content":"        if (!EndTime.isValidEndTime(trimmedEnd)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"cyqjoseph"},"content":"            throw new ParseException(EndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"cyqjoseph"},"content":"        return new EndTime(trimmedEnd);","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cyqjoseph":50,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"     * Adds the given booking","lastModifiedDate":"2024-03-10"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"    void addBooking(Booking booking);","lastModifiedDate":"2024-03-10"},{"lineNumber":93,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"cyqjoseph"},"content":"     * Returns true if the given booking conflicts with existing bookings in the system.","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"cyqjoseph"},"content":"    boolean hasBooking(Booking booking);","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jerremyng":6,"cyqjoseph":5,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"jerremyng"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Bookings \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-10"},{"lineNumber":150,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":151,"author":{"gitId":"jerremyng"},"content":"    public void addBooking(Booking booking) {","lastModifiedDate":"2024-03-10"},{"lineNumber":152,"author":{"gitId":"jerremyng"},"content":"        // TODO","lastModifiedDate":"2024-03-10"},{"lineNumber":153,"author":{"gitId":"cyqjoseph"},"content":"        // Add the booking to data structure","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":155,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"cyqjoseph"},"content":"    public boolean hasBooking(Booking booking) {","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"cyqjoseph"},"content":"        requireNonNull(booking);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"cyqjoseph"},"content":"        return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"cyqjoseph"},"content":"        // This is a simplistic way to check for conflicts. You\u0027ll need to replace it with","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"cyqjoseph"},"content":"        // your actual booking list and conflict logic, which may involve checking overlaps.","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"cyqjoseph"},"content":"        // Below is some placeholder code for when we modify model","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"cyqjoseph"},"content":"//        return addressBook.getBookingList().stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"cyqjoseph"},"content":"//                .anyMatch(existingBooking -\u003e existingBooking.isConflict(booking));","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jerremyng":6,"cyqjoseph":13,"-":148}},{"path":"src/main/java/seedu/address/model/booking/Booking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":" * Represents a booking","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"cyqjoseph"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"cyqjoseph"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public class Booking {","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":"    private BookingName name;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"    private StartTime start;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"    private EndTime end;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":"    public Booking(BookingName name, StartTime start, EndTime end) {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"cyqjoseph"},"content":"    public BookingName getName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"cyqjoseph"},"content":"        return name;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"cyqjoseph"},"content":"    public StartTime getStart() {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"cyqjoseph"},"content":"        return start;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"cyqjoseph"},"content":"    public EndTime getEnd() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"cyqjoseph"},"content":"        return end;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"cyqjoseph"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"cyqjoseph"},"content":"        if (this \u003d\u003d other) return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"cyqjoseph"},"content":"        if (!(other instanceof Booking)) return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"cyqjoseph"},"content":"        Booking otherBooking \u003d (Booking) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"cyqjoseph"},"content":"        return Objects.equals(name, otherBooking.name) \u0026\u0026","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"cyqjoseph"},"content":"                Objects.equals(start, otherBooking.start) \u0026\u0026","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"cyqjoseph"},"content":"                Objects.equals(end, otherBooking.end);","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"cyqjoseph"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"cyqjoseph"},"content":"        return Objects.hash(name, start, end);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"cyqjoseph"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"cyqjoseph"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"cyqjoseph"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"cyqjoseph"},"content":"                .add(\"start\", start)","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"cyqjoseph"},"content":"                .add(\"end\", end)","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"cyqjoseph"},"content":"                .toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"jerremyng":7,"cyqjoseph":49}},{"path":"src/main/java/seedu/address/model/booking/BookingName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyqjoseph"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"cyqjoseph"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"cyqjoseph"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":" * Represents a Booking\u0027s name in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"cyqjoseph"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"cyqjoseph"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"cyqjoseph"},"content":"public class BookingName {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"            \"Booking names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"     * The first character of the booking name must not be a whitespace,","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"cyqjoseph"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"cyqjoseph"},"content":"    public final String fullName;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"cyqjoseph"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"cyqjoseph"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"cyqjoseph"},"content":"     * @param name A valid name.","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"cyqjoseph"},"content":"    public BookingName(String name) {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"cyqjoseph"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"cyqjoseph"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"cyqjoseph"},"content":"        this.fullName \u003d name;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"cyqjoseph"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"cyqjoseph"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"cyqjoseph"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"cyqjoseph"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"cyqjoseph"},"content":"        return fullName;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"cyqjoseph"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"cyqjoseph"},"content":"        if (this \u003d\u003d other) return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"cyqjoseph"},"content":"        if (!(other instanceof BookingName)) return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"cyqjoseph"},"content":"        BookingName otherName \u003d (BookingName) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"cyqjoseph"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"cyqjoseph"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"cyqjoseph"},"content":"        return fullName.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"cyqjoseph"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"cyqjoseph":58}},{"path":"src/main/java/seedu/address/model/booking/EndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyqjoseph"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"cyqjoseph"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"cyqjoseph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"cyqjoseph"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"cyqjoseph"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"cyqjoseph"},"content":" * Represents a Booking\u0027s end time in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"cyqjoseph"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEndTime(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"public class EndTime {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"End times must be in the format of YYYY-MM-DDTHH:MM (ISO_LOCAL_DATE_TIME).\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"    public final LocalDateTime endTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"cyqjoseph"},"content":"     * Constructs a {@code EndTime}.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"cyqjoseph"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"cyqjoseph"},"content":"     * @param endTime A valid end time.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"cyqjoseph"},"content":"    public EndTime(String endTime) {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"cyqjoseph"},"content":"        checkArgument(isValidEndTime(endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"cyqjoseph"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, formatter);","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"cyqjoseph"},"content":"     * Returns true if a given string is a valid end time.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"cyqjoseph"},"content":"    public static boolean isValidEndTime(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"cyqjoseph"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"cyqjoseph"},"content":"            LocalDateTime.parse(test, formatter);","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"cyqjoseph"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"cyqjoseph"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"cyqjoseph"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"cyqjoseph"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"cyqjoseph"},"content":"        return endTime.format(formatter);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"cyqjoseph"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"cyqjoseph"},"content":"        if (this \u003d\u003d other) return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"cyqjoseph"},"content":"        if (!(other instanceof EndTime)) return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"cyqjoseph"},"content":"        EndTime that \u003d (EndTime) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"cyqjoseph"},"content":"        return endTime.equals(that.endTime);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"cyqjoseph"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"cyqjoseph"},"content":"        return endTime.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"cyqjoseph"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"cyqjoseph":58}},{"path":"src/main/java/seedu/address/model/booking/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyqjoseph"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"cyqjoseph"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"cyqjoseph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"cyqjoseph"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"cyqjoseph"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"cyqjoseph"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"cyqjoseph"},"content":" * Represents a Booking\u0027s start time in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"cyqjoseph"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStartTime(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"cyqjoseph"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"cyqjoseph"},"content":"public class StartTime {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"cyqjoseph"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Start times must be in the format of YYYY-MM-DDTHH:MM (ISO_LOCAL_DATE_TIME).\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"cyqjoseph"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"cyqjoseph"},"content":"    public final LocalDateTime startTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"cyqjoseph"},"content":"     * Constructs a {@code StartTime}.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"cyqjoseph"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"cyqjoseph"},"content":"     * @param startTime A valid start time.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"cyqjoseph"},"content":"    public StartTime(String startTime) {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"cyqjoseph"},"content":"        checkArgument(isValidStartTime(startTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"cyqjoseph"},"content":"        this.startTime \u003d LocalDateTime.parse(startTime, formatter);","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"cyqjoseph"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"cyqjoseph"},"content":"     * Returns true if a given string is a valid start time.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"cyqjoseph"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"cyqjoseph"},"content":"    public static boolean isValidStartTime(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"cyqjoseph"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"cyqjoseph"},"content":"            LocalDateTime.parse(test, formatter);","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"cyqjoseph"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"cyqjoseph"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"cyqjoseph"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"cyqjoseph"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"cyqjoseph"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"cyqjoseph"},"content":"        return startTime.format(formatter);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"cyqjoseph"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"cyqjoseph"},"content":"        if (this \u003d\u003d other) return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"cyqjoseph"},"content":"        if (!(other instanceof StartTime)) return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"cyqjoseph"},"content":"        StartTime that \u003d (StartTime) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"cyqjoseph"},"content":"        return startTime.equals(that.startTime);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"cyqjoseph"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"cyqjoseph"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"cyqjoseph"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"cyqjoseph"},"content":"        return startTime.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"cyqjoseph"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"cyqjoseph"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"cyqjoseph":58}},{"path":"src/main/java/seedu/address/model/booking/UniqueBookingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":" * Represents a list of unique bookings.","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"public class UniqueBookingList implements Iterable\u003cBooking\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"    private final ObservableList\u003cBooking\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    private final ObservableList\u003cBooking\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks if the list contains a given booking.","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param toCheck The booking to check for.","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return true if the list contains the booking, false otherwise.","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"    public boolean contains(Booking toCheck) {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"     * Adds a booking to the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param toAdd The booking to add.","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws DuplicatePersonException if the booking already exists in the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"    public void add(Booking toAdd) {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"     * Removes a booking from the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param toRemove The booking to remove.","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws PersonNotFoundException if the booking does not exist in the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"    public void remove(Booking toRemove) {","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns an unmodifiable view of the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return An unmodifiable ObservableList of bookings.","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"    public ObservableList\u003cBooking\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns an iterator over the elements in this list.","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return An iterator.","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"    public Iterator\u003cBooking\u003e iterator() {","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns the hash code value for this list.","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The hash code value for this list.","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns a string representation of the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string representation of the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"ChrysanthemumT"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"ChrysanthemumT"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"ChrysanthemumT":97}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":162,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":163,"author":{"gitId":"jerremyng"},"content":"        public void addBooking(Booking booking) {","lastModifiedDate":"2024-03-10"},{"lineNumber":164,"author":{"gitId":"jerremyng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-10"},{"lineNumber":165,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jerremyng":6,"-":204}}]
