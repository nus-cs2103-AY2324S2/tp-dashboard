[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103-F09-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103-F09-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"jmsandiegoo"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-4/tp/graph/badge.svg?token\u003dZCUENL7XA6)](https://codecov.io/gh/AY2324S2-CS2103-F09-4/tp)","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"**HealthSync** helps optimize clinical efficiency with a keyboard-driven system for doctors to manage patient records, notes, medical certificates, and medication dispensing, all in one streamlined interface, enhancing care quality and focus in a busy clinical setting. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"* If you are interested in using HealthSync, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"* If you are interested about developing HealthSync, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"**Acknowledgements**","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"joenus":10,"jmsandiegoo":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"    testImplementation \"org.mockito:mockito-core:3.+\"","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"    testImplementation \"org.mockito:mockito-junit-jupiter:5.+\"","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"raysonchia"},"content":"    archiveFileName \u003d \u0027healthsync.jar\u0027","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"joenus":2,"raysonchia":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"### Rayson Chia","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"\u003cimg src\u003d\"images/raysonchia.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"[[github](http://github.com/raysonchia)]","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"[[portfolio](team/raysonchia.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"- Role: Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"- Responsibilities: Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"### Rick Koh","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"\u003cimg src\u003d\"images/rickkoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"[[github](http://github.com/rickkoh)]","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"[[portfolio](team/rickkoh.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"- Role: QA, Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"- Responsibilities: Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"### Aum Sebin","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"\u003cimg src\u003d\"images/sebin0817.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"[[github](http://github.com/sebin0817)]","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"[[portfolio](team/sebin.md)]","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"- Role: Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"- Responsibilities: Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"### Jm San Diego ⚡️","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"\u003cimg src\u003d\"images/jmsandiegoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"[[github](http://github.com/jmsandiegoo)]","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"- Role: Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"- Responsibilities: Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"### Joe Kawai","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"\u003cimg src\u003d\"images/joenus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"[[github](https://github.com/joenus)]","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"[[portfolio](team/joe.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"rickkoh"},"content":"- Role: Team Lead, Developer","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"- Responsibilities: Developer","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"joenus":4,"jmsandiegoo":3,"raysonchia":4,"sebin0817":4,"-":31,"rickkoh":14}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"joenus"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"joenus"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"joenus"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `HealthSyncParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"joenus"},"content":"* When called upon to parse a user command, the `HealthSyncParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `HealthSyncParser` returns back as a `Command` object.","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"joenus"},"content":"**API** : [`Model.java`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"joenus"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `HealthSync`, which `Person` references. This allows `HealthSync` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"joenus"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/HealthSync-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"joenus"},"content":"* inherits from both `HealthSyncStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"joenus"},"content":"Classes used by multiple components are in the `seedu.HealthSync.commons` package.","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"joenus"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedHealthSync`. It extends `HealthSync` with an undo/redo history, stored internally as an `HealthSyncStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"joenus"},"content":"* `VersionedHealthSync#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"joenus"},"content":"* `VersionedHealthSync#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"joenus"},"content":"* `VersionedHealthSync#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2024-02-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"joenus"},"content":"These operations are exposed in the `Model` interface as `Model#commitHealthSync()`, `Model#undoHealthSync()` and `Model#redoHealthSync()` respectively.","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"joenus"},"content":"Step 1. The user launches the application for the first time. The `VersionedHealthSync` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-02-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"joenus"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitHealthSync()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `HealthSyncStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"joenus"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitHealthSync()`, causing another modified address book state to be saved into the `HealthSyncStateList`.","lastModifiedDate":"2024-02-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"joenus"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitHealthSync()`, so the address book state will not be saved into the `HealthSyncStateList`.","lastModifiedDate":"2024-02-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"joenus"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoHealthSync()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"joenus"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial HealthSync state, then there are no previous HealthSync states to restore. The `undo` command uses `Model#canUndoHealthSync()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-02-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"joenus"},"content":"The `redo` command does the opposite — it calls `Model#redoHealthSync()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-02-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"joenus"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `HealthSyncStateList.size() - 1`, pointing to the latest address book state, then there are no undone HealthSync states to restore. The `redo` command uses `Model#canRedoHealthSync()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-02-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"joenus"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitHealthSync()`, `Model#undoHealthSync()` or `Model#redoHealthSync()`. Thus, the `HealthSyncStateList` remains unchanged.","lastModifiedDate":"2024-02-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"joenus"},"content":"Step 6. The user executes `clear`, which calls `Model#commitHealthSync()`. Since the `currentStatePointer` is not pointing at the end of the `HealthSyncStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-02-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"jmsandiegoo"},"content":"* Dr. Emily Chen is a General Practitioner","lastModifiedDate":"2024-03-01"},{"lineNumber":266,"author":{"gitId":"jmsandiegoo"},"content":"* She aims to enhance clinical efficiency and maintain high-quality care","lastModifiedDate":"2024-03-01"},{"lineNumber":267,"author":{"gitId":"jmsandiegoo"},"content":"* Challenges include time constraints and documentation overload","lastModifiedDate":"2024-03-01"},{"lineNumber":268,"author":{"gitId":"jmsandiegoo"},"content":"* She needs seamless workflow management and a keyboard-driven system","lastModifiedDate":"2024-03-01"},{"lineNumber":269,"author":{"gitId":"jmsandiegoo"},"content":"* Her personality is dedicated and empathetic, with a focus on patient care","lastModifiedDate":"2024-03-01"},{"lineNumber":270,"author":{"gitId":"jmsandiegoo"},"content":"* Can type fast hence loves to play type racer during her free time","lastModifiedDate":"2024-03-01"},{"lineNumber":271,"author":{"gitId":"jmsandiegoo"},"content":"* Prefers to type over mouse interactions","lastModifiedDate":"2024-03-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"jmsandiegoo"},"content":"**Value proposition**: manage patient medical records faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-01"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                  | So that I can…​                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"sebin0817"},"content":"| -------- | ------------------------------------------ |-----------------------------------------------|---------------------------------------------------------|","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"jmsandiegoo"},"content":"| `* * *`  | user                                       | view all my patient\u0027s medical records         | have a clear overview of all my records                 |","lastModifiedDate":"2024-03-01"},{"lineNumber":283,"author":{"gitId":"jmsandiegoo"},"content":"| `* * *`  | user                                       | add a patient\u0027s medical record                | record new patients I work with                         |","lastModifiedDate":"2024-03-01"},{"lineNumber":284,"author":{"gitId":"raysonchia"},"content":"| `* * *`  | user                                       | edit a patient\u0027s medical record               | amend necessary details of a medical record when needed |","lastModifiedDate":"2024-03-01"},{"lineNumber":285,"author":{"gitId":"raysonchia"},"content":"| `* * *`  | user                                       | delete a patient\u0027s medical record             | remove patient\u0027s medical record that I no longer need   |","lastModifiedDate":"2024-03-01"},{"lineNumber":286,"author":{"gitId":"raysonchia"},"content":"| `* * *`  | user                                       | find a patient\u0027s medical record               | find existing patient records based on keyword(s)|","lastModifiedDate":"2024-03-15"},{"lineNumber":287,"author":{"gitId":"sebin0817"},"content":"| `* * *`  | user                                       | list all patients\u0027 appointment notes          | view all existing appointment notes                     |","lastModifiedDate":"2024-03-01"},{"lineNumber":288,"author":{"gitId":"sebin0817"},"content":"| `* * *`  | user                                       | list a particular patients\u0027 appointment notes | view a particular patient\u0027s existing appointment notes  |","lastModifiedDate":"2024-03-16"},{"lineNumber":289,"author":{"gitId":"joenus"},"content":"| `* * *`  | user                                       | add a patient\u0027s appointment note              | record keep the details of each appointment             |","lastModifiedDate":"2024-02-28"},{"lineNumber":290,"author":{"gitId":"sebin0817"},"content":"| `* * *`  | user                                       | edit a patient\u0027s appointment note             | update the details of an appointment                    |","lastModifiedDate":"2024-03-01"},{"lineNumber":291,"author":{"gitId":"joenus"},"content":"| `* * *`  | user                                       | delete a patient\u0027s appointment note           | remove entries that I no longer need                    |","lastModifiedDate":"2024-02-28"},{"lineNumber":292,"author":{"gitId":"rickkoh"},"content":"| `* * *`  | user                                       | access a help page for quick reference        | have a better idea where to get started                 |","lastModifiedDate":"2024-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"joenus"},"content":"(For all use cases below, the **System** is the `HealthSync` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-02-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"sebin0817"},"content":"#### Use case: List all patients\u0027 appointment notes","lastModifiedDate":"2024-03-01"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":304,"author":{"gitId":"sebin0817"},"content":"1.  User requests to list patients","lastModifiedDate":"2024-03-01"},{"lineNumber":305,"author":{"gitId":"sebin0817"},"content":"2.  HealthSync shows a list of patients","lastModifiedDate":"2024-03-01"},{"lineNumber":306,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":307,"author":{"gitId":"sebin0817"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":308,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":309,"author":{"gitId":"sebin0817"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":310,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":311,"author":{"gitId":"sebin0817"},"content":"* 2a. The list of patients is empty.","lastModifiedDate":"2024-03-01"},{"lineNumber":312,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":313,"author":{"gitId":"sebin0817"},"content":"  Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":314,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":315,"author":{"gitId":"sebin0817"},"content":"#### Use case: List a particular patients\u0027 appointment notes","lastModifiedDate":"2024-03-16"},{"lineNumber":316,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":317,"author":{"gitId":"sebin0817"},"content":"**MSS**","lastModifiedDate":"2024-03-16"},{"lineNumber":318,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":319,"author":{"gitId":"sebin0817"},"content":"1.  User requests to view a particular patients\u0027 appointment notes","lastModifiedDate":"2024-03-16"},{"lineNumber":320,"author":{"gitId":"sebin0817"},"content":"2.  HealthSync shows a list of patients","lastModifiedDate":"2024-03-16"},{"lineNumber":321,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":322,"author":{"gitId":"sebin0817"},"content":"    Use case ends.","lastModifiedDate":"2024-03-16"},{"lineNumber":323,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":324,"author":{"gitId":"sebin0817"},"content":"**Extensions**","lastModifiedDate":"2024-03-16"},{"lineNumber":325,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":326,"author":{"gitId":"sebin0817"},"content":"* 1a. The given patient index is invalid. ","lastModifiedDate":"2024-03-16"},{"lineNumber":327,"author":{"gitId":"sebin0817"},"content":"  * 1a1. HealthSync shows an error message. ","lastModifiedDate":"2024-03-16"},{"lineNumber":328,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":329,"author":{"gitId":"sebin0817"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-03-16"},{"lineNumber":330,"author":{"gitId":"sebin0817"},"content":"* 2a. The list of patients is empty.","lastModifiedDate":"2024-03-16"},{"lineNumber":331,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":332,"author":{"gitId":"sebin0817"},"content":"  Use case ends.","lastModifiedDate":"2024-03-16"},{"lineNumber":333,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":334,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":335,"author":{"gitId":"joenus"},"content":"#### Use case: Add a patient\u0027s appointment note","lastModifiedDate":"2024-02-28"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"joenus"},"content":"1.  User requests to list patients","lastModifiedDate":"2024-02-28"},{"lineNumber":340,"author":{"gitId":"joenus"},"content":"2.  HealthSync shows a list of patients","lastModifiedDate":"2024-02-28"},{"lineNumber":341,"author":{"gitId":"joenus"},"content":"3.  User requests to add an appointment note for a given patient","lastModifiedDate":"2024-02-28"},{"lineNumber":342,"author":{"gitId":"joenus"},"content":"4.  HealthSync adds the appointment note","lastModifiedDate":"2024-02-28"},{"lineNumber":343,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":344,"author":{"gitId":"joenus"},"content":"    Use case ends.","lastModifiedDate":"2024-02-28"},{"lineNumber":345,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":346,"author":{"gitId":"joenus"},"content":"**Extensions**","lastModifiedDate":"2024-02-28"},{"lineNumber":347,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":348,"author":{"gitId":"joenus"},"content":"* 2a. The list of patients is empty.","lastModifiedDate":"2024-02-28"},{"lineNumber":349,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":350,"author":{"gitId":"joenus"},"content":"  Use case ends.","lastModifiedDate":"2024-02-28"},{"lineNumber":351,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":352,"author":{"gitId":"joenus"},"content":"* 3a. The given patient index is invalid.","lastModifiedDate":"2024-02-28"},{"lineNumber":353,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":354,"author":{"gitId":"joenus"},"content":"    * 3a1. HealthSync shows an error message.","lastModifiedDate":"2024-02-28"},{"lineNumber":355,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":356,"author":{"gitId":"joenus"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-28"},{"lineNumber":357,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":358,"author":{"gitId":"sebin0817"},"content":"#### Use case: Edit a patient\u0027s appointment note","lastModifiedDate":"2024-03-01"},{"lineNumber":359,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":360,"author":{"gitId":"sebin0817"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":361,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":362,"author":{"gitId":"sebin0817"},"content":"1.  User requests to list patients","lastModifiedDate":"2024-03-01"},{"lineNumber":363,"author":{"gitId":"sebin0817"},"content":"2.  HealthSync shows a list of patients","lastModifiedDate":"2024-03-01"},{"lineNumber":364,"author":{"gitId":"sebin0817"},"content":"3.  User requests to edit an appointment note for a given patient","lastModifiedDate":"2024-03-01"},{"lineNumber":365,"author":{"gitId":"sebin0817"},"content":"4.  HealthSync edits the appointment note","lastModifiedDate":"2024-03-01"},{"lineNumber":366,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":367,"author":{"gitId":"sebin0817"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":368,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":369,"author":{"gitId":"sebin0817"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":370,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":371,"author":{"gitId":"sebin0817"},"content":"* 2a. The list of patients is empty.","lastModifiedDate":"2024-03-01"},{"lineNumber":372,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":373,"author":{"gitId":"sebin0817"},"content":"  Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":374,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":375,"author":{"gitId":"sebin0817"},"content":"* 3a. The given patient index is invalid.","lastModifiedDate":"2024-03-01"},{"lineNumber":376,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":377,"author":{"gitId":"sebin0817"},"content":"    * 3a1. HealthSync shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":378,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":379,"author":{"gitId":"sebin0817"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":380,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":381,"author":{"gitId":"sebin0817"},"content":"* 3b. The given appointment note index is invalid.","lastModifiedDate":"2024-03-01"},{"lineNumber":382,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":383,"author":{"gitId":"sebin0817"},"content":"    * 3b1. HealthSync shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":384,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":385,"author":{"gitId":"sebin0817"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":386,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":387,"author":{"gitId":"joenus"},"content":"#### Use case: Delete a patient\u0027s appointment note","lastModifiedDate":"2024-02-28"},{"lineNumber":388,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":389,"author":{"gitId":"joenus"},"content":"**MSS**","lastModifiedDate":"2024-02-28"},{"lineNumber":390,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":391,"author":{"gitId":"joenus"},"content":"1.  User requests to list patients","lastModifiedDate":"2024-02-28"},{"lineNumber":392,"author":{"gitId":"joenus"},"content":"2.  HealthSync shows a list of patients","lastModifiedDate":"2024-02-28"},{"lineNumber":393,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"joenus"},"content":"4.  HealthSync deletes the person","lastModifiedDate":"2024-02-28"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"joenus"},"content":"* 3a. The given patient index is invalid.","lastModifiedDate":"2024-02-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"joenus"},"content":"    * 3a1. HealthSync shows an error message.","lastModifiedDate":"2024-02-28"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"joenus"},"content":"* 3b. The given appointment note index is invalid.","lastModifiedDate":"2024-02-28"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":412,"author":{"gitId":"joenus"},"content":"    * 3b1. HealthSync shows an error message.","lastModifiedDate":"2024-02-28"},{"lineNumber":413,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":414,"author":{"gitId":"joenus"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"joenus"},"content":"2. Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-02-28"},{"lineNumber":420,"author":{"gitId":"joenus"},"content":"3. Should be able to hold up to 200 appointment note per patient without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-02-28"},{"lineNumber":421,"author":{"gitId":"joenus"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-02-28"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":426,"author":{"gitId":"raysonchia"},"content":"* **Patient\u0027s medical record**: Essential information about a patient, including name, NRIC, phone number and other relevant details","lastModifiedDate":"2024-03-01"},{"lineNumber":427,"author":{"gitId":"raysonchia"},"content":"* **Patient\u0027s appointment note**: Information on a scheduled patient appointment, including date, time and assessment","lastModifiedDate":"2024-03-01"},{"lineNumber":428,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"joenus":67,"jmsandiegoo":10,"raysonchia":5,"sebin0817":64,"-":334,"rickkoh":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"**HealthSync** helps optimize clinical efficiency with a keyboard-driven system for doctors to manage patient records, notes, medical certificates, and medication dispensing, all in one streamlined interface, enhancing care quality and focus in a busy clinical setting. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"# Table of Contents","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":"- [Features](#features)","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"  - [Help](#viewing-help--help)","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"  - [Add patient medical record](#adding-a-patient-medical-record-add)","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"  - [Listing all patient medical records](#listing-all-patient-medical-records--list)","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"  - [Editing a patient medical record](#editing-a-patient-medical-record--edit)","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"  - [Deleting a patient medical record](#deleting-a-patient-medical-record--delete)","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"  - [Listing all appointment notes](#listing-all-appointment-notes-list-an)","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"  - [Locating patient(s) medical record](#locating-a-patient-medical-record--find)","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"  - [Adding an appointment note](#adding-an-appointment-note-add-an)","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"  - [Editing an appointment note](#editing-an-appointment-note-edit-an)","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"  - [Deleting an appointment note](#deleting-an-appointment-note--delete-an)","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"  - [Clearing all entries](#clearing-all-entries--clear)","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"  - [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"raysonchia"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"raysonchia"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"raysonchia"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"raysonchia"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"raysonchia"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"1. Download the latest `healthsync.jar` from [here](https://github.com/AY2324S2-CS2103-F09-4/tp/releases).","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HealthSync.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar healthsync.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"rickkoh"},"content":"Displays a comprehensive list of available commands within the application, assisting users in navigating and utilizing Healthsync effectively for managing patient medical and appointment records.","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"rickkoh"},"content":"Format: `help`","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"rickkoh"},"content":"- This command does not require any parameters.","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"rickkoh"},"content":"- Upon execution, it presents a list of commands along with their formats, example usages, and descriptions.","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"rickkoh"},"content":"Example:","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"rickkoh"},"content":"- Entering `help` in Healthsync will produce a list of commands as shown above, guiding users through the process of managing patient records and appointments within the system.","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jmsandiegoo"},"content":"### Adding a patient medical record: `add`","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"Adds a patient medical record to the system.","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"jmsandiegoo"},"content":"Format: `add ic/NRIC n/NAME [g/GENDER] b/BIRTHDATE p/PHONE_NUMBER e/EMAIL [d/DRUG_ALLERGY] [i/ILLNESS_CATEGORY]...`","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"* `NRIC` must be an alphanumeric and it must follow Singapore\u0027s NRIC format","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"* `NAME` can contain an alphanumeric, spaces, special characters.","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"jmsandiegoo"},"content":"* `GENDER` M, F or exclude from the command for \u0027Prefer not to say\u0027 option.","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"* `PHONE_NUMBER` should be in valid Singapore phone number format. ","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"Must start with 6, 8, or 9 and be followed by seven additional digits, ","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"with no spaces or other characters.","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"jmsandiegoo"},"content":"* `BIRTHDATE` must be in the form of DD-MM-YYYY and must not be in the future.","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"* `EMAIL` should be of the format \u0027local-part@domain\u0027.","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"jmsandiegoo"},"content":"* `DRUG_ALLERGY` can contain alphanumerics, spaces and special characters.","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"* `ILLNESS_CATEGORY` could be of the following options - Infectious Disease, Chronic Conditions, Autoimmune Disorders, ","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"Genetic Disorders, Mental Health Disorders, Neurological Disorders, Metabolic Disorder, Nutritional Deficiencies, ","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"Environmental Illnesses, Degenerative Diseases or Others.","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"jmsandiegoo"},"content":"* `add ic/S9974944F n/John Doe p/91234567 g/M b/11-11-1990 d/Paracetamol Allergy i/Infectious Disease` Adds a new ","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"jmsandiegoo"},"content":"patient record with nric of `S9974944F` name of `John Doe`, phone no. of `+65 91234567`, gender of `Male`, ","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"birthdate of `11-11-1990`, allergy of `Paracetamol Allergy`, and an illness of `Infectious Disease`.","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"### Listing all patient medical records : `list`","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"Displays the list of patients in the application. Each row of patients displays a basic details of the patients ","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"(e.g. name, gender, age, illness, phone number)","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"Format: `list`","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"jmsandiegoo"},"content":"### Editing a patient medical record : `edit`","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"Edits a particular patient medical record. Users can select which particular detail to be updated.","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"jmsandiegoo"},"content":"Format: `edit PATIENT_","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"INDEX [n/NAME] [p/PHONE_NUMBER] [g/GENDER] [b/BIRTHDATE] [d/DRUG_ALLERGIES] [i/ILLNESS_CATEGORY]...`","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"jmsandiegoo"},"content":"Edit should have atleast one parameter / detail to update. Also nric is not allowed be edited remake the record ","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"jmsandiegoo"},"content":"if new nric is needed.","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"jmsandiegoo"},"content":"* Edits the medical record at the specified `PATIENT_INDEX`. The index refers to the index number shown in the ","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"jmsandiegoo"},"content":"displayed patient medical record list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"jmsandiegoo"},"content":"* `NAME` can contain an alphanumeric, spaces, special characters.","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"jmsandiegoo"},"content":"* `PHONE_NUMBER` should be in valid Singapore phone number format.","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"jmsandiegoo"},"content":"  Must start with 6, 8, or 9 and be followed by seven additional digits,","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"jmsandiegoo"},"content":"  with no spaces or other characters.","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"jmsandiegoo"},"content":"* `GENDER` M, F or exclude from the command for \u0027Prefer not to say\u0027 option. `\\g` with empty argument to remove any gender","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"jmsandiegoo"},"content":"specification and make it \u0027Prefer not to say\u0027.","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"jmsandiegoo"},"content":"* `BIRTHDATE` must be in the form of DD-MM-YYYY and must not be in the future.","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"jmsandiegoo"},"content":"* `DRUG_ALLERGY` can contain alphanumerics, spaces and special characters. `\\d` with empty argument to remove any allergy","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"jmsandiegoo"},"content":"previously written.","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"jmsandiegoo"},"content":"* `ILLNESS_CATEGORY` could be of the following options - Infectious Disease, Chronic Conditions, Autoimmune Disorders,","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"jmsandiegoo"},"content":"  Genetic Disorders, Mental Health Disorders, Neurological Disorders, Metabolic Disorder, Nutritional Deficiencies,","lastModifiedDate":"2024-03-01"},{"lineNumber":152,"author":{"gitId":"jmsandiegoo"},"content":"  Environmental Illnesses, Degenerative Diseases or Others. a single `\\i` with empty argument would remove ","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"jmsandiegoo"},"content":"all illness category associated with the medical record.","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"jmsandiegoo"},"content":"*  `edit 1 n/Cindy Tan p/94505333 g/F b/11-11-1991 d/Antibiotic Allergy i/Genetic Disorders` Edit the whole patient ","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"jmsandiegoo"},"content":"medical record that has the `PATIENT_INDEX` of 1.","lastModifiedDate":"2024-03-01"},{"lineNumber":157,"author":{"gitId":"jmsandiegoo"},"content":"*  `edit 1 g/M b/11-07-1999` Edits patient medical record that has the `PATIENT_INDEX` of 1 to have a gender of ","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"jmsandiegoo"},"content":"`M` and birthdate of `11-07-1999`.","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (### Locating persons by name: `find`)","lastModifiedDate":"2024-03-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # ()","lastModifiedDate":"2024-03-01"},{"lineNumber":163,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (Finds persons whose names contain any of the given keywords.)","lastModifiedDate":"2024-03-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (Format: `find KEYWORD [MORE_KEYWORDS]`)","lastModifiedDate":"2024-03-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # ()","lastModifiedDate":"2024-03-01"},{"lineNumber":168,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (* The search is case-insensitive. e.g `hans` will match `Hans`)","lastModifiedDate":"2024-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`)","lastModifiedDate":"2024-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (* Only the name is searched.)","lastModifiedDate":"2024-03-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (* Only full words will be matched e.g. `Han` will not match `Hans`)","lastModifiedDate":"2024-03-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (* Persons matching at least one keyword will be returned \u0026#40;i.e. `OR` search\u0026#41;.)","lastModifiedDate":"2024-03-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`)","lastModifiedDate":"2024-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # ()","lastModifiedDate":"2024-03-01"},{"lineNumber":181,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (Examples:)","lastModifiedDate":"2024-03-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (* `find John` returns `john` and `John Doe`)","lastModifiedDate":"2024-03-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e)","lastModifiedDate":"2024-03-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"jmsandiegoo"},"content":"[//]: # (  ![result for \u0027find alex david\u0027]\u0026#40;images/findAlexDavidResult.png\u0026#41;)","lastModifiedDate":"2024-03-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"raysonchia"},"content":"### Deleting a patient medical record : `delete`","lastModifiedDate":"2024-03-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"raysonchia"},"content":"Deletes a particular patient\u0027s medical records.","lastModifiedDate":"2024-03-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"raysonchia"},"content":"Format: `delete PATIENT_INDEX`","lastModifiedDate":"2024-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"raysonchia"},"content":"* Deletes the patient medical record at the specified `INDEX`.","lastModifiedDate":"2024-03-01"},{"lineNumber":196,"author":{"gitId":"raysonchia"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-03-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"raysonchia"},"content":"### Locating a patient medical record : `find`","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":201,"author":{"gitId":"raysonchia"},"content":"Finds patient whose details contain any of the given keywords.","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"raysonchia"},"content":"Format: `find [ic/NRIC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [g/GENDER] [b/BIRTHDATE] [i/ILLNESS_CATEGORY] ","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"raysonchia"},"content":"[d/DRUG_ALLERGIES]`","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"raysonchia"},"content":"* Users can search by NRIC, name, phone number, email, gender, birthdate, illness category, and drug allergy.","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"raysonchia"},"content":"* Only full words will be matched e.g. `Han` will not match to `Hans`","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"raysonchia"},"content":"* Patients matching at least one keyword for a specific parameter will be returned (i.e. `OR` search). e.g. `n/Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"raysonchia"},"content":"* Multiple search parameters can be combined to narrow down search results (i.e. `AND` search). e.g. `n/Taylor g/m` will return male patients named Taylor","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"raysonchia"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"raysonchia"},"content":"* `find d/paracetamol i/infectious disease` returns all patients with paracetamol allergy and infectious disease","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"sebin0817"},"content":"### Listing all appointment notes: `list-an`","lastModifiedDate":"2024-02-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":219,"author":{"gitId":"sebin0817"},"content":"Shows a list of all appointment notes.","lastModifiedDate":"2024-02-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":221,"author":{"gitId":"sebin0817"},"content":"Format: `list-an`","lastModifiedDate":"2024-02-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"sebin0817"},"content":"### Listing a particular patients\u0027 appointment notes: `list-an`","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"sebin0817"},"content":"Shows a list a particular patients\u0027 appointment notes.","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":227,"author":{"gitId":"sebin0817"},"content":"Format: `list-an PATIENT_INDEX`","lastModifiedDate":"2024-03-16"},{"lineNumber":228,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"sebin0817"},"content":"* Lists all appointment notes at the specified `INDEX` for given patient from `PATIENT_INDEX`.","lastModifiedDate":"2024-03-16"},{"lineNumber":230,"author":{"gitId":"sebin0817"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-03-16"},{"lineNumber":231,"author":{"gitId":"sebin0817"},"content":"* The patient index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-03-16"},{"lineNumber":232,"author":{"gitId":"sebin0817"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2024-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"sebin0817"},"content":"* `list-an 1`","lastModifiedDate":"2024-03-16"},{"lineNumber":236,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":237,"author":{"gitId":"joenus"},"content":"### Adding an appointment note: `add-an`","lastModifiedDate":"2024-02-28"},{"lineNumber":238,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":239,"author":{"gitId":"joenus"},"content":"Adds an appointment note to a patient. Please note that the time parameter is in 24-hour format.","lastModifiedDate":"2024-02-28"},{"lineNumber":240,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":241,"author":{"gitId":"joenus"},"content":"Format: `add-an PATIENT_INDEX d/DD-MM-YYYY t/HHMM n/NOTE`","lastModifiedDate":"2024-02-28"},{"lineNumber":242,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":243,"author":{"gitId":"joenus"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-02-28"},{"lineNumber":244,"author":{"gitId":"joenus"},"content":"A person can have any number of appointment record (including 0)","lastModifiedDate":"2024-02-28"},{"lineNumber":245,"author":{"gitId":"sebin0817"},"content":"\u003c/div\u003e``","lastModifiedDate":"2024-02-29"},{"lineNumber":246,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":247,"author":{"gitId":"sebin0817"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":248,"author":{"gitId":"sebin0817"},"content":"* `add-an 1 d/19-02-2024 t/1130 n/General Flu`","lastModifiedDate":"2024-02-29"},{"lineNumber":249,"author":{"gitId":"sebin0817"},"content":"* `add-an 1 d/30-12-2023 t/2100 n/Headache`","lastModifiedDate":"2024-02-29"},{"lineNumber":250,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":251,"author":{"gitId":"sebin0817"},"content":"### Editing an appointment note: `edit-an`","lastModifiedDate":"2024-02-29"},{"lineNumber":252,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":253,"author":{"gitId":"sebin0817"},"content":"Edits an appointment note to a patient. Please note that the time parameter is in 24-hour format.","lastModifiedDate":"2024-02-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":255,"author":{"gitId":"sebin0817"},"content":"Format: `edit-an PATIENT_INDEX INDEX d/DD-MM-YYYY t/HHMM n/NOTE`","lastModifiedDate":"2024-02-29"},{"lineNumber":256,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":257,"author":{"gitId":"sebin0817"},"content":"* Edits the appointment record at the specified `INDEX` for given patient from `PATIENT_INDEX`.","lastModifiedDate":"2024-02-29"},{"lineNumber":258,"author":{"gitId":"sebin0817"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-02-29"},{"lineNumber":259,"author":{"gitId":"sebin0817"},"content":"* The patient index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-02-29"},{"lineNumber":260,"author":{"gitId":"sebin0817"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2024-02-29"},{"lineNumber":261,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":262,"author":{"gitId":"joenus"},"content":"Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":263,"author":{"gitId":"sebin0817"},"content":"* `edit-an 1 1 d/19-02-2024 t/1230 n/General Flu`","lastModifiedDate":"2024-02-29"},{"lineNumber":264,"author":{"gitId":"sebin0817"},"content":"* `edit-an 1 2 d/30-12-2023 t/2100 n/Stomach Virus`","lastModifiedDate":"2024-02-29"},{"lineNumber":265,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":266,"author":{"gitId":"joenus"},"content":"### Deleting an appointment note : `delete-an`","lastModifiedDate":"2024-02-28"},{"lineNumber":267,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":268,"author":{"gitId":"joenus"},"content":"Deletes the specified appointment note from a patient.","lastModifiedDate":"2024-02-28"},{"lineNumber":269,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":270,"author":{"gitId":"joenus"},"content":"Format: `delete-an PATIENT_INDEX INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":271,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":272,"author":{"gitId":"joenus"},"content":"* Deletes the appointment record at the specified `INDEX` for given patient from `PATIENT_INDEX`.","lastModifiedDate":"2024-02-28"},{"lineNumber":273,"author":{"gitId":"joenus"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-02-28"},{"lineNumber":274,"author":{"gitId":"joenus"},"content":"* The patient index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-02-28"},{"lineNumber":275,"author":{"gitId":"joenus"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2024-02-28"},{"lineNumber":276,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":277,"author":{"gitId":"joenus"},"content":"Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":278,"author":{"gitId":"sebin0817"},"content":"* `list-an` followed by `delete-an 1 2` deletes the 2nd appointment note from the 1st patient.","lastModifiedDate":"2024-02-29"},{"lineNumber":279,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":280,"author":{"gitId":"sebin0817"},"content":"``","lastModifiedDate":"2024-02-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"joenus"},"content":"HealthSync data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":299,"author":{"gitId":"joenus"},"content":"HealthSync data are saved automatically as a JSON file `[JAR file location]/data/HealthSync.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-02-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":302,"author":{"gitId":"joenus"},"content":"If your changes to the data file makes its format invalid, HealthSync will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":303,"author":{"gitId":"joenus"},"content":"Furthermore, certain edits can cause the HealthSync to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"joenus"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous HealthSync home folder.","lastModifiedDate":"2024-02-28"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"jmsandiegoo"},"content":"**Add Patient Medical Record** | `add ic/NRIC n/NAME p/PHONE_NUMBER [g/GENDER] b/BIRTHDATE i/ILLNESS_CATEGORY [d/DRUG_ALLERGIES]` \u003cbr\u003e e.g. `add ic/S9974944F n/John Doe p/91234567 g/Male b/11-11-1990 i/Infectious Disease d/Paracetamol Allergy`","lastModifiedDate":"2024-03-01"},{"lineNumber":330,"author":{"gitId":"jmsandiegoo"},"content":"**List All Patient Medical Records** | `list`","lastModifiedDate":"2024-03-01"},{"lineNumber":331,"author":{"gitId":"jmsandiegoo"},"content":"**Edit Patient Medical Record** | `edit PATIENT_INDEX [ic/NRIC] [n/NAME] [p/PHONE_NUMBER] [g/GENDER] [b/BIRTHDATE] [i/ILLNESS_CATEGORY] [d/DRUG_ALLERGIES]` \u003cbr\u003e e.g. `edit 1 g/Male b/11-07-1999`","lastModifiedDate":"2024-03-01"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"sebin0817"},"content":"**List All Appointment Notes** | `list-an`","lastModifiedDate":"2024-03-16"},{"lineNumber":336,"author":{"gitId":"sebin0817"},"content":"**List A Patient\u0027s Appointment Notes** | `list-an PATIENT_INDEX` \u003cbr\u003e e.g., `list-an 1`","lastModifiedDate":"2024-03-16"},{"lineNumber":337,"author":{"gitId":"sebin0817"},"content":"**Add Appointment Note** | `add-an PATIENT_INDEX d/DD-MM-YYYY t/HHMM n/NOTE`\u003cbr\u003e e.g., `add-an 1 d/30-12-2023 t/2100 n/Headache`","lastModifiedDate":"2024-02-29"},{"lineNumber":338,"author":{"gitId":"sebin0817"},"content":"**Edit Appointment Note** | `edit-an PATIENT_INDEX INDEX d/DD-MM-YYYY t/HHMM n/NOTE`\u003cbr\u003e e.g., `edit-an 1 1 d/19-02-2024 t/1230 n/General Flu`","lastModifiedDate":"2024-02-29"},{"lineNumber":339,"author":{"gitId":"sebin0817"},"content":"**Delete Appointment Note** | `delete-an PATIENT_INDEX INDEX`\u003cbr\u003e e.g., `delete-an 1 2`","lastModifiedDate":"2024-02-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"jmsandiegoo"},"content":"**Clear** | `clear`","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"joenus":33,"jmsandiegoo":72,"raysonchia":34,"sebin0817":41,"-":156,"rickkoh":6}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"Class Nric","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"Class Gender","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"Class BirthDate","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"Class Email","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"Class DrugAllergy","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"Class Illness","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"Class Note","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"Class Description","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"Person *--\u003e Nric","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"Person *--\u003e Gender","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"Person *--\u003e BirthDate","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"Person *--\u003e DrugAllergy","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"Person *--\u003e \"*\" Illness","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"Person *--\u003e \"*\" Note","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"Note *--\u003e Description","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"Nric -[hidden]right-\u003e Name","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"joenus":1,"jmsandiegoo":13,"sebin0817":3,"-":47}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"Class JsonAdaptedNote","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedNote","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"joenus":2,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"Class NoteListPanel","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"Class NoteCard","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"MainWindow *-down-\u003e \"1\" NoteListPanel","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"NoteListPanel -down-\u003e \"*\" NoteCard","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"NoteListPanel --|\u003e UiPart","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sebin0817":5,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"title: 💊 HealthSync","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103-F09-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103-F09-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-4/tp/graph/badge.svg?token\u003dZCUENL7XA6)](https://codecov.io/gh/AY2324S2-CS2103-F09-4/tp)","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"**HealthSync** helps optimize clinical efficiency with a keyboard-driven system for doctors to manage patient records, notes, medical certificates, and medication dispensing, all in one streamlined interface, enhancing care quality and focus in a busy clinical setting. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"* If you are interested in using HealthSync, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"* If you are interested about developing HealthSync, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"joenus":6,"-":13}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"joenus"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"joenus"},"content":"        return Objects.hash(zeroBasedIndex);","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"joenus":7,"-":69}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"    ObservableList\u003cNote\u003e getFilteredNoteList();","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sebin0817":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"sebin0817"},"content":"    public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"sebin0817"},"content":"        return model.getFilteredNoteList();","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sebin0817":6,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The index provided is invalid\";","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"                .append(\"; Illnesses: \");","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"        person.getIllnesses().forEach(builder::append);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"        builder.append(\"; Notes: \");","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        person.getNotes().forEach(builder::append);","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"     * Formats the {@code note} for display to the user.","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"    public static String format(Note note) {","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"        builder.append(\" Date: \")","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"                .append(note.getDateTime())","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"                .append(note.getDescription());","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joenus":4,"jmsandiegoo":2,"sebin0817":12,"-":46}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":" * Adds a patient to the patient book.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the patient book. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_BIRTHDATE + \"BIRTHDATE \"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"            + \"[\" + PREFIX_DRUG_ALLERGY + \"DRUG_ALLERGY] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_ILLNESS + \"ILLNESS...\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_NRIC + \"S9974567D \"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_BIRTHDATE + \"10-07-1999 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_DRUG_ALLERGY + \"Penicillin and Cephalosporins \"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_ILLNESS + \"Infectious Disease \"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"            + PREFIX_ILLNESS + \"Genetic Disorders \";","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists in the patient book\";","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jmsandiegoo":20,"-":73,"rickkoh":10}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"    public static final String COMMAND_WORD \u003d \"add-an\";","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment note to the specified person. \"","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"        + \"Parameters: \"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"        + PREFIX_DATE + \"DATE\u003cDD-MM-YYYY\u003e \"","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"        + PREFIX_TIME + \"TIME\u003cHHMM\u003e \"","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"        + PREFIX_NOTE + \"NOTE \"","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"        + PREFIX_DATE + \"19-02-2024 \"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"        + PREFIX_TIME + \"1430 \"","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"        + PREFIX_NOTE + \"General Flu \";","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment note added: %1$s\";","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"    private final Index personIndex;","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"    private final Note note;","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"     * Creates an AddNoteCommand to add a {@code Note} to a given {@code Person}","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"    public AddNoteCommand(Index personIndex, Note note) {","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"        requireAllNonNull(personIndex, note);","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"        List\u003cPerson\u003e persons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"        if (personIndex.getZeroBased() \u003e\u003d persons.size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"        Person person \u003d persons.get(personIndex.getZeroBased());","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"        Person.Builder builder \u003d new Person.Builder(person);","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"        builder.getNotes().add(note);","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"        model.setPerson(person, builder.build());","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"        // TODO: Show notes for a given person.","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"        model.addNote(note);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(note)));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"joenus"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"joenus"},"content":"            return true;","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"joenus"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"joenus"},"content":"            return false;","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"joenus"},"content":"        AddNoteCommand that \u003d (AddNoteCommand) o;","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"joenus"},"content":"        return Objects.equals(personIndex, that.personIndex) \u0026\u0026 Objects.equals(note, that.note);","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"joenus"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"joenus"},"content":"        return Objects.hash(personIndex, note);","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"joenus"},"content":"    public String toString() {","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"joenus"},"content":"            .add(\"personIndex\", personIndex)","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"joenus"},"content":"            .add(\"note\", note)","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"joenus"},"content":"            .toString();","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"joenus":95,"sebin0817":3,"rickkoh":11}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Clears the patient book.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient book has been cleared!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears the patient book.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"raysonchia":3,"-":22,"rickkoh":11}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rickkoh"},"content":" * Represents a command with hidden internal logic and the ability to be","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rickkoh"},"content":" * executed.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"     * Returns the command word of the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"     * @return Command word of the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"    public abstract String getCommandWord();","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"     * Returns the usage message of the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"     * @return Usage message of the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"    public abstract String getMessageUsage();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"rickkoh":16}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"raysonchia"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joenus":1,"raysonchia":2,"-":66,"rickkoh":10}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"        + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"        + \"[\" + PREFIX_ILLNESS + \"ILLNESS]...\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"joenus"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"        Person.Builder personBuilder \u003d new Person.Builder(personToEdit);","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"        if (editPersonDescriptor.getName().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"            personBuilder.setName(editPersonDescriptor.getName().get());","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"        if (editPersonDescriptor.getGender().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"            personBuilder.setGender(editPersonDescriptor.getGender().get());","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"jmsandiegoo"},"content":"        if (editPersonDescriptor.getBirthDate().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"            personBuilder.setBirthDate(editPersonDescriptor.getBirthDate().get());","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"        if (editPersonDescriptor.getPhone().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"            personBuilder.setPhone(editPersonDescriptor.getPhone().get());","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"        if (editPersonDescriptor.getEmail().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"            personBuilder.setEmail(editPersonDescriptor.getEmail().get());","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"jmsandiegoo"},"content":"        if (editPersonDescriptor.getDrugAllergy().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"jmsandiegoo"},"content":"            personBuilder.setDrugAllergy(editPersonDescriptor.getDrugAllergy().get());","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"        if (editPersonDescriptor.getIllnesses().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"jmsandiegoo"},"content":"            personBuilder.setIllnesses(editPersonDescriptor.getIllnesses().get());","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"jmsandiegoo"},"content":"        return personBuilder.build();","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"rickkoh"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"rickkoh"},"content":"     * replace the","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"jmsandiegoo"},"content":"        private Gender gender;","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"jmsandiegoo"},"content":"        private BirthDate birthDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"jmsandiegoo"},"content":"        private DrugAllergy drugAllergy;","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"jmsandiegoo"},"content":"        private Set\u003cIllness\u003e illnesses;","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"joenus"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"jmsandiegoo"},"content":"         * A defensive copy of {@code illnesses} is used internally.","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":184,"author":{"gitId":"jmsandiegoo"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"jmsandiegoo"},"content":"            setBirthDate(toCopy.birthDate);","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":188,"author":{"gitId":"jmsandiegoo"},"content":"            setDrugAllergy(toCopy.drugAllergy);","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"jmsandiegoo"},"content":"            setIllnesses(toCopy.illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"jmsandiegoo"},"content":"            return CollectionUtil.isAnyNonNull(name, gender, birthDate, phone, email, drugAllergy, illnesses);","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"jmsandiegoo"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"jmsandiegoo"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"jmsandiegoo"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"jmsandiegoo"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"jmsandiegoo"},"content":"        public void setBirthDate(BirthDate birthDate) {","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"jmsandiegoo"},"content":"            this.birthDate \u003d birthDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"jmsandiegoo"},"content":"        public Optional\u003cBirthDate\u003e getBirthDate() {","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"jmsandiegoo"},"content":"            return Optional.ofNullable(birthDate);","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"jmsandiegoo"},"content":"        public void setDrugAllergy(DrugAllergy drugAllergy) {","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"jmsandiegoo"},"content":"            this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"jmsandiegoo"},"content":"        public Optional\u003cDrugAllergy\u003e getDrugAllergy() {","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"jmsandiegoo"},"content":"            return Optional.ofNullable(drugAllergy);","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"jmsandiegoo"},"content":"         * Sets {@code illnesses} to this object\u0027s {@code illnesses}.","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"jmsandiegoo"},"content":"         * A defensive copy of {@code illnesses} is used internally.","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"jmsandiegoo"},"content":"        public void setIllnesses(Set\u003cIllness\u003e illnesses) {","lastModifiedDate":"2024-03-14"},{"lineNumber":252,"author":{"gitId":"jmsandiegoo"},"content":"            this.illnesses \u003d (illnesses !\u003d null) ? new HashSet\u003c\u003e(illnesses) : null;","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"jmsandiegoo"},"content":"         * Returns an unmodifiable illness set, which throws","lastModifiedDate":"2024-03-20"},{"lineNumber":257,"author":{"gitId":"rickkoh"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"jmsandiegoo"},"content":"        public Optional\u003cSet\u003cIllness\u003e\u003e getIllnesses() {","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"jmsandiegoo"},"content":"            return (illnesses !\u003d null) ? Optional.of(Collections.unmodifiableSet(illnesses)) : Optional.empty();","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":278,"author":{"gitId":"jmsandiegoo"},"content":"                    \u0026\u0026 Objects.equals(gender, otherEditPersonDescriptor.gender)","lastModifiedDate":"2024-03-20"},{"lineNumber":279,"author":{"gitId":"jmsandiegoo"},"content":"                    \u0026\u0026 Objects.equals(birthDate, otherEditPersonDescriptor.birthDate)","lastModifiedDate":"2024-03-20"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"jmsandiegoo"},"content":"                    \u0026\u0026 Objects.equals(drugAllergy, otherEditPersonDescriptor.drugAllergy)","lastModifiedDate":"2024-03-20"},{"lineNumber":283,"author":{"gitId":"jmsandiegoo"},"content":"                    \u0026\u0026 Objects.equals(illnesses, otherEditPersonDescriptor.illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"jmsandiegoo"},"content":"                    .add(\"gender\", gender)","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"jmsandiegoo"},"content":"                    .add(\"birthDate\", birthDate)","lastModifiedDate":"2024-03-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":294,"author":{"gitId":"jmsandiegoo"},"content":"                    .add(\"drugAllergy\", drugAllergy)","lastModifiedDate":"2024-03-20"},{"lineNumber":295,"author":{"gitId":"jmsandiegoo"},"content":"                    .add(\"illnesses\", illnesses)","lastModifiedDate":"2024-03-20"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"joenus":3,"jmsandiegoo":76,"-":207,"rickkoh":13}},{"path":"src/main/java/seedu/address/logic/commands/EditNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":" * Edits an appointment in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"public class EditNoteCommand extends Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"    public static final String COMMAND_WORD \u003d \"edit-an\";","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment note identified \"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"            + \"by the patient index number used in the displayed patient list. \"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"            + \"Parameters: PATIENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"            + \"NOTE_INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"            + \"[\" + PREFIX_DATE + \"DATE\u003cDD-MM-YYYY\u003e] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"            + \"[\" + PREFIX_TIME + \"TIME\u003cHHMM\u003e] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 1 \"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"            + PREFIX_DATE + \"19-02-2024 \"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"            + PREFIX_TIME + \"1430 \"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"            + PREFIX_NOTE + \"General Flu \";","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"    public static final String MESSAGE_EDIT_NOTE_SUCCESS \u003d \"Edited Note: %1$s\";","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"    public static final String MESSAGE_NOTE_NOT_EDITED \u003d \"No fields edited. Please try again.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"    private final Index patientIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"    private final Index noteIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"    private final EditNoteDescriptor editNoteDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"     * @param patientIndex         of the patient with the appointment note to edit","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"     * @param noteIndex            of the note in the filtered note list to edit","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"     * @param editNoteDescriptor   details to edit the note with","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"    public EditNoteCommand(Index patientIndex, Index noteIndex, EditNoteDescriptor editNoteDescriptor) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(patientIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(noteIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(editNoteDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"        this.patientIndex \u003d patientIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"        this.noteIndex \u003d noteIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"        this.editNoteDescriptor \u003d editNoteDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"sebin0817"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"sebin0817"},"content":"        List\u003cPerson\u003e lastShownPatientList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"sebin0817"},"content":"        if (patientIndex.getZeroBased() \u003e\u003d lastShownPatientList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"sebin0817"},"content":"        if (noteIndex.getZeroBased() \u003e\u003d lastShownPatientList.get(patientIndex.getZeroBased()).getNotes().size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"sebin0817"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"        Person personToEdit \u003d lastShownPatientList.get(patientIndex.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"        Note noteToEdit \u003d personToEdit.getNotes().get(noteIndex.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"        Note editedNote \u003d createEditedNote(noteToEdit, editNoteDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"sebin0817"},"content":"        ObservableList\u003cNote\u003e updatedNotes \u003d FXCollections.observableArrayList(personToEdit.getNotes());","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"sebin0817"},"content":"        updatedNotes.set(noteIndex.getZeroBased(), editedNote);","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"sebin0817"},"content":"        Person updatedPerson \u003d new Person.Builder(personToEdit).setNotes(updatedNotes).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"sebin0817"},"content":"        model.setPerson(personToEdit, updatedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"sebin0817"},"content":"        model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"sebin0817"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_NOTE_SUCCESS, Messages.format(editedNote)));","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"sebin0817"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"sebin0817"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"     * Creates and returns a {@code Note} with the details of {@code noteToEdit}","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"     * edited with {@code editNoteDescriptor}.","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"    private static Note createEditedNote(Note noteToEdit, EditNoteDescriptor editNoteDescriptor) {","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"        assert noteToEdit !\u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"        LocalDate updatedDate \u003d editNoteDescriptor.getDate().orElse(noteToEdit.getDateTime().toLocalDate());","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"        LocalTime updatedTime \u003d editNoteDescriptor.getTime().orElse(noteToEdit.getDateTime().toLocalTime());","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"        Description updatedDescription \u003d editNoteDescriptor.getDescription().orElse(noteToEdit.getDescription());","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"sebin0817"},"content":"        LocalDateTime updatedDateTime \u003d updatedDate.atTime(updatedTime);","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"sebin0817"},"content":"        return new Note(updatedDateTime, updatedDescription);","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"sebin0817"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"sebin0817"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"sebin0817"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"sebin0817"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"sebin0817"},"content":"        if (!(other instanceof EditNoteCommand)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"sebin0817"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand otherEditNoteCommand \u003d (EditNoteCommand) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"sebin0817"},"content":"        return patientIndex.equals(otherEditNoteCommand.patientIndex)","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"sebin0817"},"content":"                \u0026\u0026 noteIndex.equals(otherEditNoteCommand.noteIndex)","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"sebin0817"},"content":"                \u0026\u0026 editNoteDescriptor.equals(otherEditNoteCommand.editNoteDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"sebin0817"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"sebin0817"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"sebin0817"},"content":"                .add(\"patientIndex\", patientIndex)","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"sebin0817"},"content":"                .add(\"noteIndex\", noteIndex)","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"sebin0817"},"content":"                .add(\"editNoteDescriptor\", editNoteDescriptor)","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"sebin0817"},"content":"                .toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"sebin0817"},"content":"     * Stores the details to edit the note with. Each non-empty field value will","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"sebin0817"},"content":"     * replace the","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"sebin0817"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"sebin0817"},"content":"    public static class EditNoteDescriptor {","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"sebin0817"},"content":"        private LocalDate date;","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"sebin0817"},"content":"        private LocalTime time;","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"sebin0817"},"content":"        private Description description;","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"sebin0817"},"content":"        public EditNoteDescriptor() {","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"sebin0817"},"content":"        /**","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"sebin0817"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"sebin0817"},"content":"         */","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"sebin0817"},"content":"        public EditNoteDescriptor(EditNoteDescriptor toCopy) {","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"sebin0817"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"sebin0817"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"sebin0817"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"sebin0817"},"content":"        /**","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"sebin0817"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"sebin0817"},"content":"         */","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"sebin0817"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"sebin0817"},"content":"            return CollectionUtil.isAnyNonNull(date, time, description);","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"sebin0817"},"content":"        public void setDate(LocalDate date) {","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"sebin0817"},"content":"            this.date \u003d date;","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"sebin0817"},"content":"        public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"sebin0817"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"sebin0817"},"content":"        public void setTime(LocalTime time) {","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"sebin0817"},"content":"            this.time \u003d time;","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"sebin0817"},"content":"        public Optional\u003cLocalTime\u003e getTime() {","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"sebin0817"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"sebin0817"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"sebin0817"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"sebin0817"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"sebin0817"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":200,"author":{"gitId":"sebin0817"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"sebin0817"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"sebin0817"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":203,"author":{"gitId":"sebin0817"},"content":"                return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"sebin0817"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"sebin0817"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"sebin0817"},"content":"            if (!(other instanceof EditNoteDescriptor)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"sebin0817"},"content":"                return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"sebin0817"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"sebin0817"},"content":"            EditNoteDescriptor otherEditNoteDescriptor \u003d (EditNoteDescriptor) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"sebin0817"},"content":"            return Objects.equals(date, otherEditNoteDescriptor.date)","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"sebin0817"},"content":"                    \u0026\u0026 Objects.equals(time, otherEditNoteDescriptor.time)","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"sebin0817"},"content":"                    \u0026\u0026 Objects.equals(description, otherEditNoteDescriptor.description);","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"sebin0817"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"sebin0817"},"content":"        public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"sebin0817"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"sebin0817"},"content":"                    .add(\"date\", date)","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"sebin0817"},"content":"                    .add(\"time\", time)","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"sebin0817"},"content":"                    .add(\"description\", description)","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"sebin0817"},"content":"                    .toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"sebin0817":226}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Patient Book as requested ...\";","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"raysonchia":1,"-":19,"rickkoh":12}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":" * Finds and lists all persons in address book whose name contains any of the","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":" * argument keywords.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"raysonchia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"raysonchia"},"content":"            + \": Finds all patients whose medical records contain any of \"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":32,"author":{"gitId":"raysonchia"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_BIRTHDATE + \"BIRTHDATE] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_DRUG_ALLERGY + \"DRUG ALLERGY] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"raysonchia"},"content":"            + \"[\" + PREFIX_ILLNESS + \"ILLNESS]...\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"raysonchia"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"raysonchia"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"raysonchia"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"raysonchia"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"raysonchia"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"raysonchia":28,"-":51,"rickkoh":12}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"            + \"Parameters: COMMAND_WORD (optional - to show usage instructions for a specific command)\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" add\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"    private static final Map\u003cString, String\u003e commandUsageMap \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"    // Static block to initialize commandUsageMap with command words and their usage","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"    // messages.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"    // IMPORTANT: When adding a new command, you must add an entry to this map with","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"    // the command\u0027s COMMAND_WORD as the key and the command\u0027s MESSAGE_USAGE as the","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"    // value to ensure it appears in the help listing.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"    static {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(AddCommand.COMMAND_WORD, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(FindCommand.COMMAND_WORD, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(EditCommand.COMMAND_WORD, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(DeleteCommand.COMMAND_WORD, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(ClearCommand.COMMAND_WORD, ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(ListCommand.COMMAND_WORD, ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(COMMAND_WORD, MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"        commandUsageMap.put(ExitCommand.COMMAND_WORD, ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"    private final String command;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"     * Returns a CommandResult with the usage instructions for the command, or all","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"     * commands if no command is specified.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"        if (commandUsageMap.containsKey(command)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"            return new CommandResult(commandUsageMap.get(command));","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"            StringBuilder allCommandsUsage \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"            for (Map.Entry\u003cString, String\u003e entry : commandUsageMap.entrySet()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"                allCommandsUsage.append(entry.getValue()).append(\"\\n\\n\");","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"            return new CommandResult(allCommandsUsage.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"rickkoh":50}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all patient in the patient book.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"raysonchia":1,"-":24,"rickkoh":11}},{"path":"src/main/java/seedu/address/logic/commands/ListNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":" * Lists all notes in the address book to the user.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"public class ListNoteCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"    public static final String COMMAND_WORD \u003d \"list-an\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all notes\";","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"    public static final String MESSAGE_LIST_NOTE_SUCCESS \u003d \"Patient %1$s appointments listed!\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all appointment notes of the patient identified \"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"    private final Optional\u003cIndex\u003e patientIndex;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"     * @param patientIndex of the patient in the filtered patient list","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"    public ListNoteCommand(Index patientIndex) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(patientIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"        this.patientIndex \u003d Optional.of(patientIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"     * Creates an ListNoteCommand to list all appointment notes","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"    public ListNoteCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"        this.patientIndex \u003d Optional.empty();","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"        if (patientIndex.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"            requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"            model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"        Index index \u003d patientIndex.get();","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"        Person selectedPerson \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"        ObservableList\u003cNote\u003e notes \u003d selectedPerson.getNotes();","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"sebin0817"},"content":"        Predicate\u003cNote\u003e showSelectedPersonNotesPredicate \u003d note -\u003e notes.contains(note);","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"sebin0817"},"content":"        model.updateFilteredNoteList(showSelectedPersonNotesPredicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"sebin0817"},"content":"        return new CommandResult(String.format(MESSAGE_LIST_NOTE_SUCCESS, selectedPerson.getName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"sebin0817"},"content":"    public String getCommandWord() {","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"sebin0817"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"sebin0817":86}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_NRIC,","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_BIRTHDATE,","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_ILLNESS);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC,","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"                PREFIX_NAME, PREFIX_BIRTHDATE, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC,","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"                PREFIX_NAME, PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_DRUG_ALLERGY);","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"        Gender gender \u003d ParserUtil.parseGender(","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"                argMultimap.getValue(PREFIX_GENDER).orElseGet(() -\u003e null));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"        BirthDate birthDate \u003d ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_BIRTHDATE).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"        DrugAllergy drugAllergy \u003d ParserUtil.parseDrugAllergy(","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"                argMultimap.getValue(PREFIX_DRUG_ALLERGY).orElseGet(() -\u003e \"No allergy\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"        Set\u003cIllness\u003e illnessList \u003d ParserUtil.parseIllnesses(argMultimap.getAllValues(PREFIX_ILLNESS));","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"        Person person \u003d new Person(nric, name, gender, birthDate,","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"                phone, email, drugAllergy, illnessList, FXCollections.observableArrayList());","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"joenus":1,"jmsandiegoo":32,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_DATE;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_NOTE;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_TIME;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"     * Parses the given {@code String} of arguments in the context of the AddNoteCommand","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"     * and returns an AddNoteCommand object for execution.","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIME, PREFIX_NOTE);","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_TIME, PREFIX_NOTE)","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"            || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"        Index personIndex;","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"            personIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE, PREFIX_TIME, PREFIX_NOTE);","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"        LocalDateTime dateTime \u003d ParserUtil.parseLocalDateTime(argMultimap.getValue(PREFIX_DATE).get(),","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"            argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"        Note note \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"        return new AddNoteCommand(personIndex, note);","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"joenus":61}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.ListNoteCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"        case EditNoteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"            return new EditNoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"sebin0817"},"content":"        case ListNoteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"sebin0817"},"content":"            return new ListNoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"            return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"rickkoh"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sebin0817":11,"-":85,"rickkoh":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"ic/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Prefix PREFIX_BIRTHDATE \u003d new Prefix(\"b/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Prefix PREFIX_ILLNESS \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Prefix PREFIX_DRUG_ALLERGY \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jmsandiegoo":5,"sebin0817":3,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_BIRTHDATE,","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_ILLNESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GENDER,","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"                PREFIX_BIRTHDATE, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_DRUG_ALLERGY);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"            editPersonDescriptor.setName(","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"                    ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"            editPersonDescriptor.setGender(","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"                    parseGenderForEdit(","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"                            argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"            editPersonDescriptor.setBirthDate(","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"jmsandiegoo"},"content":"                    ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_BIRTHDATE).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"            editPersonDescriptor.setPhone(","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"jmsandiegoo"},"content":"                    ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"            editPersonDescriptor.setEmail(","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"jmsandiegoo"},"content":"                    ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"jmsandiegoo"},"content":"        if (argMultimap.getValue(PREFIX_DRUG_ALLERGY).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"jmsandiegoo"},"content":"            editPersonDescriptor.setDrugAllergy(","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"jmsandiegoo"},"content":"                    parseDrugAllergyForEdit(argMultimap.getValue(PREFIX_DRUG_ALLERGY).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"        parseIllnessesForEdit(","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"                argMultimap.getAllValues(PREFIX_ILLNESS)).ifPresent(editPersonDescriptor::setIllnesses);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"jmsandiegoo"},"content":"    private Gender parseGenderForEdit(String gender) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"        String genderStr \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"        if (!gender.trim().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"jmsandiegoo"},"content":"            genderStr \u003d gender;","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"        return ParserUtil.parseGender(genderStr);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"    private DrugAllergy parseDrugAllergyForEdit(String drugAllergy) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"        String drugAllergyStr \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"        if (!drugAllergy.trim().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"jmsandiegoo"},"content":"            drugAllergyStr \u003d drugAllergy;","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"        return ParserUtil.parseDrugAllergy(drugAllergyStr);","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses {@code Collection\u003cString\u003e illnesses} into a {@code Set\u003cIllness\u003e} if {@code illnesses} is non-empty.","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"     * If {@code illnesses} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"     * {@code Set\u003cIllness\u003e} containing zero illnesses.","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"    private Optional\u003cSet\u003cIllness\u003e\u003e parseIllnessesForEdit(Collection\u003cString\u003e illnesses) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"        assert illnesses !\u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"        if (illnesses.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"jmsandiegoo"},"content":"        Collection\u003cString\u003e illnessSet \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"                illnesses.size() \u003d\u003d 1 \u0026\u0026 illnesses.contains(\"\") ? Collections.emptySet() : illnesses;","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"        return Optional.of(ParserUtil.parseIllnesses(illnessSet));","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jmsandiegoo":67,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/EditNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":" * Parses input arguments and creates a new EditNoteCommand object","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"public class EditNoteCommandParser implements Parser\u003cEditNoteCommand\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"     * Parses the given {@code String} of arguments in the context of the EditNoteCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"     * and returns an EditNoteCommand object for execution.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"    public EditNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIME, PREFIX_NOTE);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"        Index patientIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"        Index noteIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"            Index[] indices \u003d ParserUtil.parseIndices(argMultimap.getPreamble());","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"            patientIndex \u003d indices[0];","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"            noteIndex \u003d indices[1];","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE, PREFIX_TIME, PREFIX_NOTE);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"        EditNoteDescriptor editNoteDescriptor \u003d createEditNoteDescriptor(argMultimap);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"        if (!editNoteDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"            throw new ParseException(EditNoteCommand.MESSAGE_NOTE_NOT_EDITED);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"        return new EditNoteCommand(patientIndex, noteIndex, editNoteDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"    private EditNoteDescriptor createEditNoteDescriptor(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"        EditNoteDescriptor editNoteDescriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"            editNoteDescriptor.setDate(ParserUtil.parseLocalDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"            editNoteDescriptor.setTime(ParserUtil.parseLocalTime(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"            editNoteDescriptor.setDescription(ParserUtil.parseDescription(argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"        return editNoteDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"sebin0817":69}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.BirthdateContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.DrugAllergyContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.GenderContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.IllnessContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.NricContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"raysonchia"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"raysonchia"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_NRIC,","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_BIRTHDATE,","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"raysonchia"},"content":"                        PREFIX_ILLNESS);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"raysonchia"},"content":"        if (!atLeastOnePrefixPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_BIRTHDATE, PREFIX_PHONE,","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"raysonchia"},"content":"                PREFIX_EMAIL, PREFIX_GENDER, PREFIX_DRUG_ALLERGY, PREFIX_ILLNESS)","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"raysonchia"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"raysonchia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"raysonchia"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_NAME, PREFIX_BIRTHDATE, PREFIX_PHONE,","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"raysonchia"},"content":"                PREFIX_EMAIL, PREFIX_GENDER, PREFIX_DRUG_ALLERGY, PREFIX_ILLNESS);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"raysonchia"},"content":"        String[] nricKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"raysonchia"},"content":"        String[] nameKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"raysonchia"},"content":"        String[] genderKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"raysonchia"},"content":"        String[] birthdateKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"raysonchia"},"content":"        String[] phoneKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"raysonchia"},"content":"        String[] emailKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"raysonchia"},"content":"        String[] allergyKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"raysonchia"},"content":"        String[] illnessKeywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"raysonchia"},"content":"        // Extract search parameters based on prefixes","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"raysonchia"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"raysonchia"},"content":"            nricKeywords \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new NricContainsKeywordsPredicate(Arrays.asList(nricKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"raysonchia"},"content":"            nameKeywords \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"raysonchia"},"content":"            genderKeywords \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new GenderContainsKeywordsPredicate(Arrays.asList(genderKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"raysonchia"},"content":"            birthdateKeywords \u003d ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_BIRTHDATE).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new BirthdateContainsKeywordsPredicate(Arrays.asList(birthdateKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"raysonchia"},"content":"            phoneKeywords \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"raysonchia"},"content":"            emailKeywords \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new EmailContainsKeywordsPredicate(Arrays.asList(emailKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_DRUG_ALLERGY).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"raysonchia"},"content":"            allergyKeywords \u003d ParserUtil.parseDrugAllergy(argMultimap.getValue(PREFIX_DRUG_ALLERGY).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new DrugAllergyContainsKeywordsPredicate(Arrays.asList(allergyKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"raysonchia"},"content":"        if (argMultimap.getValue(PREFIX_ILLNESS).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"raysonchia"},"content":"            illnessKeywords \u003d ParserUtil.parseIllness(argMultimap.getValue(PREFIX_ILLNESS).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"raysonchia"},"content":"                    .toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"raysonchia"},"content":"                    .replaceAll(\"[\\\\[\\\\],]\", \"\")","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"raysonchia"},"content":"                    .split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"raysonchia"},"content":"            predicates.add(new IllnessContainsKeywordsPredicate(Arrays.asList(illnessKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"raysonchia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"raysonchia"},"content":"        Predicate\u003cPerson\u003e combinedPredicate \u003d predicates.stream().reduce(w -\u003e true, Predicate::and);","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"raysonchia"},"content":"        return new FindCommand(combinedPredicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"raysonchia"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"raysonchia"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"raysonchia"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"raysonchia"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"raysonchia"},"content":"    private static boolean atLeastOnePrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"raysonchia"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"raysonchia":118,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rickkoh"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rickkoh"},"content":" * Parses input arguments and creates a new HelpCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rickkoh"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"rickkoh"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"rickkoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"rickkoh"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"rickkoh"},"content":"     * HelpCommand and returns a HelpCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"        String commandKeyword \u003d args.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"        return new HelpCommand(commandKeyword);","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rickkoh":23}},{"path":"src/main/java/seedu/address/logic/parser/ListNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.ListNoteCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":" * Parses input arguments and creates a new ListNoteCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"public class ListNoteCommandParser implements Parser\u003cListNoteCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"     * Parses the given {@code String} of arguments in the context of the ListNoteCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"     * and returns an ListNoteCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"    public ListNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"            return new ListNoteCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"        Index patientIndex;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"            patientIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"        return new ListNoteCommand(patientIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"sebin0817":40}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"    public static final String MESSAGE_INVALID_DATE_TIME \u003d \"Date or time format is invalid.\";","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"     * Parses the input string containing one or more whitespace-separated indices into {@code Index} object array.","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"     * Leading and trailing whitespaces in the input string and around individual indices will be trimmed.","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"     * @param indicesString the string containing one or more one-based indices separated by whitespace.","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"     * @return an array of {@code Index} objects corresponding to the input indices.","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"     * @throws ParseException if any of the specified indices are invalid (not non-zero unsigned integers).","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"    public static Index[] parseIndices(String indicesString) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"        String[] parts \u003d indicesString.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"        Index[] indices \u003d new Index[parts.length];","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"            indices[i] \u003d parseIndex(parts[i]);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"        return indices;","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses a {@code String Nric} into a {@code Nric}.","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"jmsandiegoo"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"jmsandiegoo"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"jmsandiegoo"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"jmsandiegoo"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"        String trimmedGender;","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"jmsandiegoo"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"            trimmedGender \u003d \"Prefer not to say\";","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"            trimmedGender \u003d gender.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"jmsandiegoo"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses a {@code String birthDate} into a {@code BirthDate}.","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"     * @throws ParseException if the given {@code birthDate} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"    public static BirthDate parseBirthDate(String birthDate) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"        String trimmedBirthDate \u003d birthDate.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"jmsandiegoo"},"content":"        if (!BirthDate.isValidBirthDate(trimmedBirthDate)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"jmsandiegoo"},"content":"            throw new ParseException(BirthDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"        return new BirthDate(trimmedBirthDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses a {@code String illness} into a {@code Illness}.","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"jmsandiegoo"},"content":"     * @throws ParseException if the given {@code illness} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"jmsandiegoo"},"content":"    public static Illness parseIllness(String illness) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(illness);","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"jmsandiegoo"},"content":"        String trimmedIllness \u003d illness.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"jmsandiegoo"},"content":"        if (!Illness.isValidIllnessName(trimmedIllness)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"jmsandiegoo"},"content":"            throw new ParseException(Illness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"jmsandiegoo"},"content":"        return new Illness(trimmedIllness);","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses {@code Collection\u003cString\u003e illnesses} into a {@code Set\u003cIllness\u003e}.","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"jmsandiegoo"},"content":"    public static Set\u003cIllness\u003e parseIllnesses(Collection\u003cString\u003e illnesses) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"jmsandiegoo"},"content":"        final Set\u003cIllness\u003e illnessSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"jmsandiegoo"},"content":"        for (String illnessName : illnesses) {","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"jmsandiegoo"},"content":"            illnessSet.add(parseIllness(illnessName));","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"jmsandiegoo"},"content":"        return illnessSet;","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":191,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses a {@code String drugAllergy} into a {@code Drug Allergy}.","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"jmsandiegoo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"jmsandiegoo"},"content":"    public static DrugAllergy parseDrugAllergy(String drugAllergy) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"jmsandiegoo"},"content":"        String trimmedDrugAllergy;","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"jmsandiegoo"},"content":"        if (drugAllergy \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"jmsandiegoo"},"content":"            trimmedDrugAllergy \u003d \"No allergy\";","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"jmsandiegoo"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"jmsandiegoo"},"content":"            trimmedDrugAllergy \u003d drugAllergy.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"jmsandiegoo"},"content":"        if (!DrugAllergy.isValidDrugAllergy(trimmedDrugAllergy)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"jmsandiegoo"},"content":"            throw new ParseException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"jmsandiegoo"},"content":"        return new DrugAllergy(trimmedDrugAllergy);","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":212,"author":{"gitId":"joenus"},"content":"     * Parses {@code String date} and {@code String time} into a {@code LocalDateTime}.","lastModifiedDate":"2024-03-05"},{"lineNumber":213,"author":{"gitId":"joenus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-05"},{"lineNumber":214,"author":{"gitId":"joenus"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":215,"author":{"gitId":"joenus"},"content":"     * @throws ParseException if the given {@code date} or {@code time} is invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":216,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":217,"author":{"gitId":"joenus"},"content":"    public static LocalDateTime parseLocalDateTime(String date, String time) throws ParseException {","lastModifiedDate":"2024-03-05"},{"lineNumber":218,"author":{"gitId":"joenus"},"content":"        requireAllNonNull(date, time);","lastModifiedDate":"2024-03-05"},{"lineNumber":219,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":220,"author":{"gitId":"joenus"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":221,"author":{"gitId":"joenus"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":222,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":223,"author":{"gitId":"joenus"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-05"},{"lineNumber":224,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":225,"author":{"gitId":"joenus"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":226,"author":{"gitId":"joenus"},"content":"            return LocalDateTime.parse(trimmedDate + \" \" + trimmedTime, formatter);","lastModifiedDate":"2024-03-05"},{"lineNumber":227,"author":{"gitId":"joenus"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":228,"author":{"gitId":"joenus"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2024-03-05"},{"lineNumber":229,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":230,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":231,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":232,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":233,"author":{"gitId":"sebin0817"},"content":"     * Parses {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2024-03-26"},{"lineNumber":234,"author":{"gitId":"sebin0817"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-26"},{"lineNumber":235,"author":{"gitId":"sebin0817"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":236,"author":{"gitId":"sebin0817"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2024-03-26"},{"lineNumber":237,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":238,"author":{"gitId":"sebin0817"},"content":"    public static LocalDate parseLocalDate(String date) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":239,"author":{"gitId":"sebin0817"},"content":"        requireAllNonNull(date);","lastModifiedDate":"2024-03-26"},{"lineNumber":240,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":241,"author":{"gitId":"sebin0817"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":242,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":243,"author":{"gitId":"sebin0817"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-03-26"},{"lineNumber":244,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"sebin0817"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"sebin0817"},"content":"            return LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"sebin0817"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"sebin0817"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2024-03-26"},{"lineNumber":249,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":250,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":251,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":252,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":253,"author":{"gitId":"sebin0817"},"content":"     * Parses {@code String time} into a {@code LocalTime}.","lastModifiedDate":"2024-03-26"},{"lineNumber":254,"author":{"gitId":"sebin0817"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-26"},{"lineNumber":255,"author":{"gitId":"sebin0817"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":256,"author":{"gitId":"sebin0817"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":258,"author":{"gitId":"sebin0817"},"content":"    public static LocalTime parseLocalTime(String time) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":259,"author":{"gitId":"sebin0817"},"content":"        requireAllNonNull(time);","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":261,"author":{"gitId":"sebin0817"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":262,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":263,"author":{"gitId":"sebin0817"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":265,"author":{"gitId":"sebin0817"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":266,"author":{"gitId":"sebin0817"},"content":"            return LocalTime.parse(trimmedTime, formatter);","lastModifiedDate":"2024-03-26"},{"lineNumber":267,"author":{"gitId":"sebin0817"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":268,"author":{"gitId":"sebin0817"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2024-03-26"},{"lineNumber":269,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":270,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":271,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":272,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":273,"author":{"gitId":"joenus"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2024-03-05"},{"lineNumber":274,"author":{"gitId":"joenus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-05"},{"lineNumber":275,"author":{"gitId":"joenus"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":276,"author":{"gitId":"joenus"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":277,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":278,"author":{"gitId":"joenus"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2024-03-05"},{"lineNumber":279,"author":{"gitId":"joenus"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-05"},{"lineNumber":280,"author":{"gitId":"joenus"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":281,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":282,"author":{"gitId":"joenus"},"content":"        if (!Description.isValid(trimmedDescription)) {","lastModifiedDate":"2024-03-05"},{"lineNumber":283,"author":{"gitId":"joenus"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-05"},{"lineNumber":284,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":285,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":286,"author":{"gitId":"joenus"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2024-03-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"joenus":41,"jmsandiegoo":92,"sebin0817":61,"-":94}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"    private final ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"     * Creates an AddressBook using the Persons and Notes in the {@code toBeCopied}","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"        updateNoteList();","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the addrgetNoteListess book.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"sebin0817"},"content":"        updateNoteList();","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"sebin0817"},"content":"        updateNoteList();","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"    //// note-level operations","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"     * Updates and reloads appointment note lists for the {@code AddressBook}","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"    public void updateNoteList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"        notes.clear();","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"        for (Person person : getPersonList()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"            notes.addAll(person.getNotes());","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"     * Adds a note to the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"    public void addNote(Note n) {","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"        notes.add(n);","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":133,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"sebin0817"},"content":"    public ObservableList\u003cNote\u003e getNoteList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"sebin0817"},"content":"        return notes;","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sebin0817":29,"-":128}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"    Predicate\u003cNote\u003e PREDICATE_SHOW_ALL_NOTES \u003d unused -\u003e true;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"     * Adds the given note.","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"     * {@code note} must not already exist in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"sebin0817"},"content":"    void addNote(Note note);","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"sebin0817"},"content":"    /** Returns an unmodifiable view of the filtered note list */","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"sebin0817"},"content":"    ObservableList\u003cNote\u003e getFilteredNoteList();","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"     * Updates the filter of the filtered note list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"    void updateFilteredNoteList(Predicate\u003cNote\u003e predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sebin0817":19,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"    private final FilteredList\u003cNote\u003e filteredNotes;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"        filteredNotes \u003d new FilteredList\u003c\u003e(this.addressBook.getNoteList());","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"    // UserPrefs","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"joenus"},"content":"    // AddressBook","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"sebin0817"},"content":"    public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"sebin0817"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"sebin0817"},"content":"        filteredNotes.setPredicate(predicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"sebin0817"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"sebin0817"},"content":"        addressBook.addNote(note);","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"sebin0817"},"content":"        updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"sebin0817"},"content":"     * Returns an unmodifiable view of the list of {@code Note} backed by the internal list of","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"sebin0817"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"sebin0817"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"sebin0817"},"content":"    public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"sebin0817"},"content":"        return filteredNotes;","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"sebin0817"},"content":"            \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"sebin0817"},"content":"            \u0026\u0026 filteredNotes.equals(otherModelManager.filteredNotes);","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joenus":2,"sebin0817":26,"-":143}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"     * Returns an unmodifiable view of the appointment note list.","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"    ObservableList\u003cNote\u003e getNoteList();","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sebin0817":5,"-":18}},{"path":"src/main/java/seedu/address/model/person/BirthDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jmsandiegoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":" * Represents a Person\u0027s birthdate in the patient book.","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthDate(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"public class BirthDate {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"            \"Birth Date must be in the form of DD-MM-YYYY and must not be in the future\";","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"    public final String birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"     * Constructs a {@code BirthDate}.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"     * @param birthDate A valid birthDate.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"    public BirthDate(String birthDate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"        checkArgument(isValidBirthDate(birthDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"jmsandiegoo"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns true if a given string is a valid birthDate.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"    public static boolean isValidBirthDate(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"            LocalDate birthLocalDate \u003d LocalDate.parse(test, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"            return !birthLocalDate.isAfter(today);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"        return birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"        if (!(other instanceof BirthDate)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        BirthDate otherBirthDate \u003d (BirthDate) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"        return birthDate.equals(otherBirthDate.birthDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"        return birthDate.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"jmsandiegoo":70}},{"path":"src/main/java/seedu/address/model/person/DrugAllergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jmsandiegoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":" * Represents a Person\u0027s drug allergy in the patient book.","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDrugAllergy(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"public class DrugAllergy {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"            \"Drug Allergy must not be empty and can contain alphanumerics, spaces and special characters\";","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"    /*","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"     * drugAllergy must not be empty and contain alphanumerics, spaces and special characters","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s*$).+\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"    public final String drugAllergy;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"     * Constructs a {@code DrugAllergy}.","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"     * @param drugAllergy A valid drug allergy.","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"    public DrugAllergy(String drugAllergy) {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(drugAllergy);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"        checkArgument(isValidDrugAllergy(drugAllergy), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"        this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns true if a given string is a valid drugAllergy.","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"    public static boolean isValidDrugAllergy(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"        return drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"        if (!(other instanceof DrugAllergy)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"        DrugAllergy otherDrugAllergy \u003d (DrugAllergy) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"        return drugAllergy.equals(otherDrugAllergy.drugAllergy);","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"        return drugAllergy.hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"jmsandiegoo":62}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jmsandiegoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":" * Represents a Person\u0027s gender in the patient book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"public class Gender {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"            \"Gender must be M, F or exclude argument in the command for \u0027Prefer not to say\u0027\";","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"     * gender must follow the Singapore\u0027s format of M, F or Prefer not to say case-insensitive","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?i)^(M|F|Prefer not to say)$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"    public final String gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"     * @param gender A valid nric.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"    public Gender(String gender) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(gender);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"jmsandiegoo"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"        return gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"        if (!(other instanceof Gender)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"        Gender otherGender \u003d (Gender) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"        return gender.equals(otherGender.gender);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        return gender.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"jmsandiegoo":64}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jmsandiegoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":" * Represents a Person\u0027s nric in the patient book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)} (String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"public class Nric {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"            \"Nric must be an alphanumeric and it must follow Singapore’s NRIC format [S/T/F/G]XXXXXXX[A-Z]\";","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"     * nric must follow the Singapore\u0027s format of [S/T/F/G]XXXXXXX[A-Z]","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[STFG]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"    public final String nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"     * Constructs a {@code Nric}.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"     * @param nric A valid nric.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"    public Nric(String nric) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"jmsandiegoo"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"        return nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"        return nric.equals(otherNric.nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        return nric.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"jmsandiegoo":64}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":" * Represents a Person in the patient book.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"    private final Gender gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"    private final BirthDate birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"    private final DrugAllergy drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"    private final Set\u003cIllness\u003e illnesses \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"    private final ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"    public Person(Nric nric, Name name, Gender gender, BirthDate birthDate, Phone phone,","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"                  Email email, DrugAllergy drugAllergy, Set\u003cIllness\u003e illnesses, ObservableList\u003cNote\u003e notes) {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"        requireAllNonNull(nric, name, phone, email, illnesses, notes);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"        this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"        this.illnesses.addAll(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"    public Nric getNric() {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"        return nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"    public Gender getGender() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        return gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"    public BirthDate getBirthDate() {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"        return birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"jmsandiegoo"},"content":"    public DrugAllergy getDrugAllergy() {","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"        return drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns an immutable illness set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"jmsandiegoo"},"content":"    public Set\u003cIllness\u003e getIllnesses() {","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"jmsandiegoo"},"content":"        return Collections.unmodifiableSet(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"joenus"},"content":"     * Returns an immutable notes list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"joenus"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"    public ObservableList\u003cNote\u003e getNotes() {","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"joenus"},"content":"        return FXCollections.unmodifiableObservableList(notes);","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns true if both persons have the same nric.","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"            \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"jmsandiegoo"},"content":"        return nric.equals(otherPerson.nric)","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"jmsandiegoo"},"content":"            \u0026\u0026 name.equals(otherPerson.name)","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"jmsandiegoo"},"content":"            \u0026\u0026 gender.equals(otherPerson.gender)","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"            \u0026\u0026 birthDate.equals(otherPerson.birthDate)","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"            \u0026\u0026 drugAllergy.equals(otherPerson.drugAllergy)","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"jmsandiegoo"},"content":"            \u0026\u0026 illnesses.equals(otherPerson.illnesses)","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"joenus"},"content":"            \u0026\u0026 notes.equals(otherPerson.notes);","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"jmsandiegoo"},"content":"        return Objects.hash(nric, name, gender, birthDate, phone, email, drugAllergy, illnesses, notes);","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"jmsandiegoo"},"content":"            .add(\"nric\", nric)","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"jmsandiegoo"},"content":"            .add(\"gender\", gender)","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"jmsandiegoo"},"content":"            .add(\"birthDate\", birthDate)","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"jmsandiegoo"},"content":"            .add(\"drugAllergy\", drugAllergy)","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"jmsandiegoo"},"content":"            .add(\"illnesses\", illnesses)","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"joenus"},"content":"            .add(\"notes\", notes)","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"joenus"},"content":"     * Represents a builder for a {@link Person}.","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"joenus"},"content":"    public static class Builder {","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"jmsandiegoo"},"content":"        private Nric nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"joenus"},"content":"        private Name name;","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"jmsandiegoo"},"content":"        private Gender gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"jmsandiegoo"},"content":"        private BirthDate birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"joenus"},"content":"        private Phone phone;","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"joenus"},"content":"        private Email email;","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"jmsandiegoo"},"content":"        private DrugAllergy drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"jmsandiegoo"},"content":"        private Set\u003cIllness\u003e illnesses \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"joenus"},"content":"        private ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"joenus"},"content":"        /**","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"joenus"},"content":"         * Creates a {@code Builder} with the given parameters.","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"joenus"},"content":"         */","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"jmsandiegoo"},"content":"        public Builder(Nric nric,","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"jmsandiegoo"},"content":"                       Name name,","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"jmsandiegoo"},"content":"                       Gender gender,","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"jmsandiegoo"},"content":"                       BirthDate birthDate,","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"jmsandiegoo"},"content":"                       Phone phone,","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"jmsandiegoo"},"content":"                       Email email,","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"jmsandiegoo"},"content":"                       DrugAllergy drugAllergy,","lastModifiedDate":"2024-03-15"},{"lineNumber":181,"author":{"gitId":"jmsandiegoo"},"content":"                       Set\u003cIllness\u003e illnesses,","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"joenus"},"content":"                       ObservableList\u003cNote\u003e notes) {","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"jmsandiegoo"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"joenus"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"jmsandiegoo"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"jmsandiegoo"},"content":"            this.birthDate \u003d birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"joenus"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"joenus"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"jmsandiegoo"},"content":"            this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"jmsandiegoo"},"content":"            this.illnesses.addAll(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"joenus"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"joenus"},"content":"        /**","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"joenus"},"content":"         * Initializes the {@code Builder} with the data of {@code person}.","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"joenus"},"content":"         */","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"joenus"},"content":"        public Builder(Person person) {","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"jmsandiegoo"},"content":"            this(person.getNric(),","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"jmsandiegoo"},"content":"                person.getName(),","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"jmsandiegoo"},"content":"                person.getGender(),","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"jmsandiegoo"},"content":"                person.getBirthDate(),","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"jmsandiegoo"},"content":"                person.getPhone(),","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"jmsandiegoo"},"content":"                person.getEmail(),","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"jmsandiegoo"},"content":"                person.getDrugAllergy(),","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"jmsandiegoo"},"content":"                person.getIllnesses(),","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"joenus"},"content":"                person.getNotes());","lastModifiedDate":"2024-02-29"},{"lineNumber":207,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":208,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":209,"author":{"gitId":"jmsandiegoo"},"content":"        public Nric getNric() {","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"jmsandiegoo"},"content":"            return nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"joenus"},"content":"        public Name getName() {","lastModifiedDate":"2024-02-29"},{"lineNumber":213,"author":{"gitId":"joenus"},"content":"            return name;","lastModifiedDate":"2024-02-29"},{"lineNumber":214,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":215,"author":{"gitId":"jmsandiegoo"},"content":"        public Gender getGender() {","lastModifiedDate":"2024-03-14"},{"lineNumber":216,"author":{"gitId":"jmsandiegoo"},"content":"            return gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":217,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"jmsandiegoo"},"content":"        public BirthDate getBirthDate() {","lastModifiedDate":"2024-03-14"},{"lineNumber":219,"author":{"gitId":"jmsandiegoo"},"content":"            return birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"joenus"},"content":"        public Phone getPhone() {","lastModifiedDate":"2024-02-29"},{"lineNumber":222,"author":{"gitId":"joenus"},"content":"            return phone;","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":224,"author":{"gitId":"joenus"},"content":"        public Email getEmail() {","lastModifiedDate":"2024-02-29"},{"lineNumber":225,"author":{"gitId":"joenus"},"content":"            return email;","lastModifiedDate":"2024-02-29"},{"lineNumber":226,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":227,"author":{"gitId":"jmsandiegoo"},"content":"        public DrugAllergy getDrugAllergy() {","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"jmsandiegoo"},"content":"            return drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":230,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":231,"author":{"gitId":"jmsandiegoo"},"content":"        public Set\u003cIllness\u003e getIllnesses() {","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"jmsandiegoo"},"content":"            return illnesses;","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":234,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":235,"author":{"gitId":"joenus"},"content":"        public ObservableList\u003cNote\u003e getNotes() {","lastModifiedDate":"2024-02-29"},{"lineNumber":236,"author":{"gitId":"joenus"},"content":"            return notes;","lastModifiedDate":"2024-02-29"},{"lineNumber":237,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":238,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":239,"author":{"gitId":"jmsandiegoo"},"content":"        public Builder setNric(Nric nric) {","lastModifiedDate":"2024-03-14"},{"lineNumber":240,"author":{"gitId":"jmsandiegoo"},"content":"            requireNonNull(nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"jmsandiegoo"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":243,"author":{"gitId":"jmsandiegoo"},"content":"            return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"joenus"},"content":"        public Builder setName(Name name) {","lastModifiedDate":"2024-02-29"},{"lineNumber":247,"author":{"gitId":"joenus"},"content":"            requireNonNull(name);","lastModifiedDate":"2024-02-29"},{"lineNumber":248,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":249,"author":{"gitId":"joenus"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-02-29"},{"lineNumber":250,"author":{"gitId":"joenus"},"content":"            return this;","lastModifiedDate":"2024-02-29"},{"lineNumber":251,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":252,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":253,"author":{"gitId":"jmsandiegoo"},"content":"        public Builder setGender(Gender gender) {","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"jmsandiegoo"},"content":"            requireNonNull(gender);","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"jmsandiegoo"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"jmsandiegoo"},"content":"            return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"jmsandiegoo"},"content":"        public Builder setBirthDate(BirthDate birthDate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"jmsandiegoo"},"content":"            requireNonNull(birthDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"jmsandiegoo"},"content":"            this.birthDate \u003d birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"jmsandiegoo"},"content":"            return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"joenus"},"content":"        public Builder setPhone(Phone phone) {","lastModifiedDate":"2024-02-29"},{"lineNumber":268,"author":{"gitId":"joenus"},"content":"            requireNonNull(phone);","lastModifiedDate":"2024-02-29"},{"lineNumber":269,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":270,"author":{"gitId":"joenus"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-02-29"},{"lineNumber":271,"author":{"gitId":"joenus"},"content":"            return this;","lastModifiedDate":"2024-02-29"},{"lineNumber":272,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":273,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":274,"author":{"gitId":"joenus"},"content":"        public Builder setEmail(Email email) {","lastModifiedDate":"2024-02-29"},{"lineNumber":275,"author":{"gitId":"joenus"},"content":"            requireNonNull(email);","lastModifiedDate":"2024-02-29"},{"lineNumber":276,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":277,"author":{"gitId":"joenus"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-02-29"},{"lineNumber":278,"author":{"gitId":"joenus"},"content":"            return this;","lastModifiedDate":"2024-02-29"},{"lineNumber":279,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":280,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":281,"author":{"gitId":"jmsandiegoo"},"content":"        public Builder setDrugAllergy(DrugAllergy drugAllergy) {","lastModifiedDate":"2024-03-15"},{"lineNumber":282,"author":{"gitId":"jmsandiegoo"},"content":"            requireNonNull(drugAllergy);","lastModifiedDate":"2024-03-15"},{"lineNumber":283,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":284,"author":{"gitId":"jmsandiegoo"},"content":"            this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":285,"author":{"gitId":"joenus"},"content":"            return this;","lastModifiedDate":"2024-02-29"},{"lineNumber":286,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":287,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":288,"author":{"gitId":"jmsandiegoo"},"content":"        public Builder setIllnesses(Set\u003cIllness\u003e illnesses) {","lastModifiedDate":"2024-03-14"},{"lineNumber":289,"author":{"gitId":"jmsandiegoo"},"content":"            requireNonNull(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":290,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":291,"author":{"gitId":"jmsandiegoo"},"content":"            this.illnesses.clear();","lastModifiedDate":"2024-03-14"},{"lineNumber":292,"author":{"gitId":"jmsandiegoo"},"content":"            this.illnesses.addAll(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":293,"author":{"gitId":"joenus"},"content":"            return this;","lastModifiedDate":"2024-02-29"},{"lineNumber":294,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":295,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":296,"author":{"gitId":"joenus"},"content":"        public Builder setNotes(ObservableList\u003cNote\u003e notes) {","lastModifiedDate":"2024-02-29"},{"lineNumber":297,"author":{"gitId":"joenus"},"content":"            requireNonNull(notes);","lastModifiedDate":"2024-02-29"},{"lineNumber":298,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":299,"author":{"gitId":"joenus"},"content":"            this.notes.clear();","lastModifiedDate":"2024-03-01"},{"lineNumber":300,"author":{"gitId":"joenus"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2024-02-29"},{"lineNumber":301,"author":{"gitId":"joenus"},"content":"            return this;","lastModifiedDate":"2024-02-29"},{"lineNumber":302,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":303,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":304,"author":{"gitId":"joenus"},"content":"        /**","lastModifiedDate":"2024-02-29"},{"lineNumber":305,"author":{"gitId":"joenus"},"content":"         * Builds a {@link Person} with the latest values.","lastModifiedDate":"2024-02-29"},{"lineNumber":306,"author":{"gitId":"joenus"},"content":"         */","lastModifiedDate":"2024-02-29"},{"lineNumber":307,"author":{"gitId":"joenus"},"content":"        public Person build() {","lastModifiedDate":"2024-02-29"},{"lineNumber":308,"author":{"gitId":"jmsandiegoo"},"content":"            return new Person(nric, name, gender, birthDate, phone, email, drugAllergy, illnesses, notes);","lastModifiedDate":"2024-03-15"},{"lineNumber":309,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":310,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":311,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joenus":101,"jmsandiegoo":112,"sebin0817":1,"-":98}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"            \"Phone numbers should be in valid Singapore phone number format.\"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"                    + \" Must start with 6, 8, or 9 and be followed by seven additional digits, \"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"                    + \"with no spaces or other characters.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[689]\\\\d{7}$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jmsandiegoo":5,"-":58}},{"path":"src/main/java/seedu/address/model/person/illness/Illness.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jmsandiegoo"},"content":"package seedu.address.model.person.illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":" * Represents an Illness in the patient book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidIllnessName(String)} (String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"public class Illness {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Illness names should be alphanumeric\";","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z0-9 ]+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"    public final String illnessName;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"     * Constructs a {@code Illness}.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"     * @param illnessName A valid illness name.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"    public Illness(String illnessName) {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"        requireNonNull(illnessName);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"        checkArgument(isValidIllnessName(illnessName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"        this.illnessName \u003d illnessName;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns true if a given string is a valid illness name.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"jmsandiegoo"},"content":"    public static boolean isValidIllnessName(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"        if (!(other instanceof Illness)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"        Illness otherIllness \u003d (Illness) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"        return illnessName.equals(otherIllness.illnessName);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"        return illnessName.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"        return \u0027[\u0027 + illnessName + \u0027]\u0027;","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"jmsandiegoo":60}},{"path":"src/main/java/seedu/address/model/person/note/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.model.person.note;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":" * Represents a Note\u0027s description.","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"public class Description {","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Note should not be blank\";","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"    public final String description;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"     * @param description A valid description.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"    public Description(String description) {","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"        checkArgument(isValid(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"    public static boolean isValid(String test) {","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"        return !test.isEmpty();","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"            return true;","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"            return false;","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"        Description that \u003d (Description) o;","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"        return Objects.equals(description, that.description);","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        return Objects.hash(description);","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"    public String toString() {","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"        return description;","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"joenus":55}},{"path":"src/main/java/seedu/address/model/person/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.model.person.note;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":" * Represents an Appointment Note.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"public class Note {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"    private final Description description;","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"     * @param dateTime A date and time.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"     * @param description A valid description.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"    public Note(LocalDateTime dateTime, Description description) {","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"        requireAllNonNull(dateTime, description);","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"        return dateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"    public Description getDescription() {","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"        return description;","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"    public String getDateTimeAsString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"            return true;","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"            return false;","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"        Note note \u003d (Note) o;","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"        if (!Objects.equals(dateTime, note.dateTime)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"            return false;","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"        return Objects.equals(description, note.description);","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"        return Objects.hash(dateTime, description);","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"joenus"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"joenus"},"content":"    public String toString() {","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"                .add(\"dateTime\", dateTime)","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"joenus"},"content":"                .add(\"description\", description)","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"                .toString();","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"joenus":69,"sebin0817":6}},{"path":"src/main/java/seedu/address/model/person/note/exceptions/DuplicateNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.model.person.note.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":" * Signals that the operation will result in duplicate Notes (Notes are considered duplicates if they have the same","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":" * appointment date time).","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"public class DuplicateNoteException extends RuntimeException {","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"    public DuplicateNoteException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"        super(\"Operation would result in duplicate note\");","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"sebin0817":11}},{"path":"src/main/java/seedu/address/model/person/note/exceptions/NoteNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.model.person.note.exceptions;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":" * Signals that the operation is unable to find the specified note.","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"public class NoteNotFoundException extends RuntimeException { }","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"joenus":6}},{"path":"src/main/java/seedu/address/model/person/predicates/BirthdateContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code Birthdate} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class BirthdateContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"    public BirthdateContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getBirthDate().toString(), keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":21}},{"path":"src/main/java/seedu/address/model/person/predicates/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s field matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"abstract class ContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"    public ContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"    public abstract boolean test(Person person);","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"raysonchia":7,"-":33}},{"path":"src/main/java/seedu/address/model/person/predicates/DrugAllergyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code DrugAllergy} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class DrugAllergyContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"    public DrugAllergyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getDrugAllergy().toString(), keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":21}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class EmailContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().toString(), keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":21}},{"path":"src/main/java/seedu/address/model/person/predicates/GenderContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code Gender} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class GenderContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"    public GenderContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getGender().toString(), keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":22}},{"path":"src/main/java/seedu/address/model/person/predicates/IllnessContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code Illness} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class IllnessContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"    public IllnessContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"        String illnessString \u003d person.getIllnesses().toString().replaceAll(\"[\\\\[\\\\],]\", \"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(illnessString, keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":23}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class NameContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":22}},{"path":"src/main/java/seedu/address/model/person/predicates/NricContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code Nric} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class NricContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"    public NricContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getNric().toString(), keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":21}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raysonchia"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"raysonchia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"raysonchia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"raysonchia"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"raysonchia"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"raysonchia"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"raysonchia"},"content":"public class PhoneContainsKeywordsPredicate extends ContainsKeywordsPredicate {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"raysonchia"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"        super(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"raysonchia"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"raysonchia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"raysonchia"},"content":"        return super.keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().toString(), keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"raysonchia":21}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"            new Person(new Nric(\"S1234567D\"), new Name(\"Alex Yeoh\"), new Gender(\"M\"), new BirthDate(\"10-07-1999\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"                    new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"                    new DrugAllergy(\"Penicillin, Antibiotic\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"                getIllnesses(\"friends\"), getNotes(","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"                    new Note[]{","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 2, 19, 21, 30),","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"General Flu\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 2, 28, 8, 30),","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Headache\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"                    })),","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"            new Person(new Nric(\"S7654321A\"), new Name(\"Bernice Yu\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"                    new Gender(\"F\"), new BirthDate(\"05-07-1997\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"                    new DrugAllergy(\"No allergy\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"                getIllnesses(\"colleagues\", \"friends\"), getNotes(","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"                    new Note[]{","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 1, 2, 10, 0),","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Annual physical exam\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 3, 15, 9, 15),","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Follow-up for blood pressure\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 6, 7, 15, 0),","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Dermatology consultation\"))","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"                    })),","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"            new Person(new Nric(\"S6543217B\"), new Name(\"Charlotte Oliveiro\"), new Gender(\"F\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"                    new BirthDate(\"06-07-1996\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"                    new DrugAllergy(\"Ligma\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"                getIllnesses(\"neighbours\"), getNotes(","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"                    new Note[]{","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2023, 2, 10, 14, 0),","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Vision checkup\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2023, 5, 23, 9, 0),","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Stomach pain evaluation\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 6, 6, 11, 15),","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Prenatal checkup\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"                    })),","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"            new Person(new Nric(\"S8375839G\"), new Name(\"David Li\"), new Gender(\"Prefer not to say\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"                    new BirthDate(\"02-02-2000\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"                    new DrugAllergy(\"Sulfa drugs\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"                getIllnesses(\"family\"), getNotes(","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"                    new Note[]{","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 2, 20, 15, 30),","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Joint pain assessment\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 4, 4, 10, 30),","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Post-surgery checkup\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 5, 19, 17, 0),","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Sports injury follow-up\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"joenus"},"content":"                    })),","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"            new Person(new Nric(\"S3837463H\"), new Name(\"Irfan Ibrahim\"), new Gender(\"M\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"                    new BirthDate(\"01-01-2001\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"jmsandiegoo"},"content":"                    new DrugAllergy(\"Biologic drugs\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"jmsandiegoo"},"content":"                getIllnesses(\"classmates\"), getNotes(new Note[]{})),","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"jmsandiegoo"},"content":"            new Person(new Nric(\"S2393847D\"), new Name(\"Roy Balakrishnan\"), new Gender(\"M\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"jmsandiegoo"},"content":"                    new BirthDate(\"04-05-2007\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"jmsandiegoo"},"content":"                    new DrugAllergy(\"No allergy\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"jmsandiegoo"},"content":"                getIllnesses(\"colleagues\"), getNotes(","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"joenus"},"content":"                    new Note[]{","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2023, 8, 16, 14, 45),","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Mental health consultation\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 1, 28, 10, 15),","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Blood sugar review\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"jmsandiegoo"},"content":"                        new Note(LocalDateTime.of(2024, 4, 5, 16, 0),","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"jmsandiegoo"},"content":"                                new Description(\"Sore throat and fever\")),","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"                    }))","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"     * Returns an illness set containing the list of strings given.","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"    public static Set\u003cIllness\u003e getIllnesses(String... strings) {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"            .map(Illness::new)","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":114,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"joenus"},"content":"     * Returns a note list containing the list of notes given.","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"joenus"},"content":"    public static ObservableList\u003cNote\u003e getNotes(Note[] notes) {","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"joenus"},"content":"        return Arrays.stream(notes)","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"joenus"},"content":"            .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"joenus":21,"jmsandiegoo":62,"-":39}},{"path":"src/main/java/seedu/address/storage/JsonAdapatedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"public class JsonAdapatedNote {","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Note\u0027s %s field is missing!\";","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"    private final String description;","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"     * Constructs a {@code JsonAdapatedNote} with the given parameters.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"    @JsonCreator","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"    public JsonAdapatedNote(@JsonProperty(\"dateTime\") LocalDateTime dateTime,","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"                            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"    public JsonAdapatedNote(Note source) {","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"        this.dateTime \u003d source.getDateTime();","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"        this.description \u003d source.getDescription().toString();","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Note} object.","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"        if (this.description \u003d\u003d null) {","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"        if (!Description.isValid(this.description)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"        final Description description \u003d new Description(this.description);","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"        return new Note(dateTime, description);","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"joenus":58}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedIllness.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jmsandiegoo"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":" * Jackson-friendly version of {@link Illness}.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"class JsonAdaptedIllness {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"    private final String illnessName;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"     * Constructs a {@code JsonAdaptedIllness} with the given {@code illnessName}.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"    public JsonAdaptedIllness(String illnessName) {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"        this.illnessName \u003d illnessName;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"     * Converts a given {@code Illness} into this class for Jackson use.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"    public JsonAdaptedIllness(Illness source) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"        illnessName \u003d source.illnessName;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"    @JsonValue","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"    public String getTagName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"        return illnessName;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"     * Converts this Jackson-friendly adapted illness object into the model\u0027s {@code Illness} object.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted illness.","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"    public Illness toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"        if (!Illness.isValidIllnessName(illnessName)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(Illness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"        return new Illness(illnessName);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"jmsandiegoo":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"    private final String nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"    private final String gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"    private final String birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"    private final String drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"    private final List\u003cJsonAdaptedIllness\u003e illnesses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"    private final List\u003cJsonAdapatedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"nric\") String nric,","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"                             @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"                             @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"                             @JsonProperty(\"birthdate\") String birthDate,","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"                             @JsonProperty(\"drugAllergy\") String drugAllergy,","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"                             @JsonProperty(\"illnesses\") List\u003cJsonAdaptedIllness\u003e illnesses,","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"                             @JsonProperty(\"notes\") List\u003cJsonAdapatedNote\u003e notes) {","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"        if (illnesses !\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"            this.illnesses.addAll(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"        nric \u003d source.getNric().nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"jmsandiegoo"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"        birthDate \u003d source.getBirthDate().birthDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"jmsandiegoo"},"content":"        drugAllergy \u003d source.getDrugAllergy().drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"jmsandiegoo"},"content":"        illnesses.addAll(source.getIllnesses().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"jmsandiegoo"},"content":"            .map(JsonAdaptedIllness::new)","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"joenus"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"joenus"},"content":"            .map(JsonAdapatedNote::new)","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"joenus"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"jmsandiegoo"},"content":"        final List\u003cIllness\u003e illnesses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"jmsandiegoo"},"content":"        for (JsonAdaptedIllness illness : this.illnesses) {","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"            illnesses.add(illness.toModelType());","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"joenus"},"content":"        final ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"joenus"},"content":"        for (JsonAdapatedNote note : this.notes) {","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"joenus"},"content":"            notes.add(note.toModelType());","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"jmsandiegoo"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"jmsandiegoo"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"        if (birthDate \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, BirthDate.class.getSimpleName()));","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"jmsandiegoo"},"content":"        if (!BirthDate.isValidBirthDate(birthDate)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(BirthDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"jmsandiegoo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"jmsandiegoo"},"content":"        final BirthDate modelBirthDate \u003d new BirthDate(birthDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"jmsandiegoo"},"content":"        if (drugAllergy \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"jmsandiegoo"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, DrugAllergy.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"jmsandiegoo"},"content":"        if (!DrugAllergy.isValidDrugAllergy(drugAllergy)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"jmsandiegoo"},"content":"            throw new IllegalValueException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"jmsandiegoo"},"content":"        final DrugAllergy modelDrugAllergy \u003d new DrugAllergy(drugAllergy);","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"jmsandiegoo"},"content":"        final Set\u003cIllness\u003e modelIllnesses \u003d new HashSet\u003c\u003e(illnesses);","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"jmsandiegoo"},"content":"        return new Person(modelNric, modelName, modelGender, modelBirthDate,","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"jmsandiegoo"},"content":"                modelPhone, modelEmail, modelDrugAllergy, modelIllnesses, notes);","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"joenus":14,"jmsandiegoo":68,"-":86}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"    private NoteListPanel noteListPanel;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"    private StackPane noteListPanelPlaceholder;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"sebin0817"},"content":"        // Initialize both PersonListPanel and NoteListPanel","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"sebin0817"},"content":"        noteListPanel \u003d new NoteListPanel(logic.getFilteredNoteList());","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"sebin0817"},"content":"        noteListPanelPlaceholder.getChildren().add(noteListPanel.getRoot());","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"sebin0817"},"content":"    public NoteListPanel getNoteListPanel() {","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"sebin0817"},"content":"        return noteListPanel;","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sebin0817":14,"-":196}},{"path":"src/main/java/seedu/address/ui/NoteCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":" * An UI component that displays information of a {@code Note}.","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"public class NoteCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"    private static final String FXML \u003d \"NoteListCard.fxml\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"    public final Note note;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"    private Label assessment;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"    private Label id;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"    private Label datetime;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"     * Creates a {@code NoteCode} with the given {@code Note} and index to display.","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"    public NoteCard(Note note, int displayedIndex) {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"        super(FXML);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"        datetime.setText(note.getDateTimeAsString());","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"        assessment.setText(note.getDescription().toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"sebin0817":45}},{"path":"src/main/java/seedu/address/ui/NoteListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":" * Panel containing the list of appointment notes.","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"public class NoteListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"    private static final String FXML \u003d \"NoteListPanel.fxml\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(NoteListPanel.class);","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"    private ListView\u003cNote\u003e noteListView;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"     * Creates a {@code NoteListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"    public NoteListPanel(ObservableList\u003cNote\u003e noteList) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"        super(FXML);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"        noteListView.setItems(noteList);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"        noteListView.setCellFactory(listView -\u003e new NoteListViewCell());","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Note} using a {@code Note}.","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"    class NoteListViewCell extends ListCell\u003cNote\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"        protected void updateItem(Note note, boolean empty) {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"            super.updateItem(note, empty);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"            if (empty || note \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"                setText(null);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"            } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"                setGraphic(new NoteCard(note, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"            }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"sebin0817":49}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"    private Label nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"    private Label gender;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"    private Label birthDate;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    private Label drugAllergy;","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"    private FlowPane illnesses;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"        nric.setText(person.getNric().nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        gender.setText(person.getGender().gender);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"        birthDate.setText(person.getBirthDate().birthDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"        drugAllergy.setText(person.getDrugAllergy().drugAllergy);","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"        person.getIllnesses().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"                .sorted(Comparator.comparing(illness -\u003e illness.illnessName))","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"                .forEach(illness -\u003e illnesses.getChildren().add(new Label(illness.illnessName)));","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jmsandiegoo":16,"-":52}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"         title\u003d\"HealthSync\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" prefWidth\u003d\"680\" prefHeight\u003d\"400\"\u003e \u003c!-- Pref size should be adjusted according to your needs --\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"          \u003c!-- First personList VBox --\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"          \u003cVBox styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"          \u003c!-- Second noteList VBox --\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"          \u003cVBox styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"            \u003cStackPane fx:id\u003d\"noteListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sebin0817":12,"-":59,"rickkoh":1}},{"path":"src/main/resources/view/NoteListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"                \u003cLabel fx:id\u003d\"datetime\" text\u003d\"datetime\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"            \u003cLabel fx:id\u003d\"assessment\" styleClass\u003d\"cell_small_label\" text\u003d\"assessment\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"sebin0817":32}},{"path":"src/main/resources/view/NoteListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"    \u003cListView fx:id\u003d\"noteListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"sebin0817":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"      \u003cLabel fx:id\u003d\"birthDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthDate\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"      \u003cLabel fx:id\u003d\"drugAllergy\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$drugAllergy\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"      \u003cFlowPane fx:id\u003d\"illnesses\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jmsandiegoo":5,"-":34}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DRUG_ALLERGY_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"                temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"sebin0817"},"content":"    public void getAddressBook_retrieveAddressBook_containsExpectedData() {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"sebin0817"},"content":"        ReadOnlyAddressBook readOnlyAddressBook \u003d logic.getAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"sebin0817"},"content":"        assertEquals(model.getAddressBook(), readOnlyAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"    public void getFilteredNoteList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredNoteList().remove(0));","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"    public void getAddressBookFilePath_checkPath_matchesModel() {","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"        Path expectedPath \u003d Paths.get(\"dummy/path/addressBook.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"        model.setAddressBookFilePath(expectedPath);","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"        Path actualPath \u003d logic.getAddressBookFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"        assertEquals(expectedPath, actualPath);","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"    public void getGuiSettings_checkSettings_matchesModel() {","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"sebin0817"},"content":"        GuiSettings expectedSettings \u003d new GuiSettings(1, 2, 1024, 768);","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"sebin0817"},"content":"        model.setGuiSettings(expectedSettings);","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"sebin0817"},"content":"        GuiSettings actualSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"sebin0817"},"content":"        assertEquals(expectedSettings, actualSettings);","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"sebin0817"},"content":"    public void setGuiSettings_checkSettings_effectInModel() {","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"sebin0817"},"content":"        GuiSettings newSettings \u003d new GuiSettings(1.5, 3, 1280, 720);","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"sebin0817"},"content":"        logic.setGuiSettings(newSettings);","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"sebin0817"},"content":"        GuiSettings modelSettings \u003d model.getGuiSettings();","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"sebin0817"},"content":"        assertEquals(newSettings, modelSettings);","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"jmsandiegoo"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NRIC_DESC_AMY + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"jmsandiegoo"},"content":"                + BIRTHDATE_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + DRUG_ALLERGY_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"jmsandiegoo"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withIllnesses().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"joenus":2,"jmsandiegoo":9,"sebin0817":37,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"rickkoh"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"rickkoh"},"content":"        assertEquals(AddCommand.COMMAND_WORD, addCommand.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"rickkoh"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"rickkoh"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"rickkoh"},"content":"        assertEquals(AddCommand.MESSAGE_USAGE, addCommand.getMessageUsage());","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"sebin0817"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"sebin0817"},"content":"        public void addNote(Note note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"sebin0817"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"sebin0817"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"sebin0817"},"content":"        public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"sebin0817"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"sebin0817"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"sebin0817"},"content":"        public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"sebin0817"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"sebin0817":17,"-":204,"rickkoh":12}},{"path":"src/test/java/seedu/address/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_FLU;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import org.mockito.ArgumentCaptor;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"import org.mockito.Captor;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"    @Mock","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"    private ModelManager model;","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"    @BeforeEach()","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"        Mockito.reset(model);","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(null, null));","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(Index.fromOneBased(1), null));","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(null, VALID_NOTE_FLU));","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"    public class ExecuteTests {","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        @Captor","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"        private ArgumentCaptor\u003cPerson\u003e personCaptor;","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"        public void execute_personIndexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"            ObservableList\u003cPerson\u003e persons \u003d TypicalPersons.getTypicalAddressBook().getPersonList();","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"            Mockito.when(model.getFilteredPersonList()).thenReturn(new FilteredList\u003c\u003e(persons));","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"            AddNoteCommand command \u003d new AddNoteCommand(Index.fromOneBased(persons.size() + 1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"            assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"        public void execute_success() throws CommandException {","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"            ObservableList\u003cPerson\u003e persons \u003d TypicalPersons.getTypicalAddressBook().getPersonList();","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"            Mockito.when(model.getFilteredPersonList()).thenReturn(new FilteredList\u003c\u003e(persons));","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"            AddNoteCommand command \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"joenus"},"content":"            CommandResult result \u003d command.execute(model);","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"            Mockito.verify(model).setPerson(Mockito.any(Person.class), personCaptor.capture());","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"            ObservableList\u003cNote\u003e noteCaptor \u003d personCaptor.getValue().getNotes();","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"joenus"},"content":"            assertEquals(VALID_NOTE_FLU, noteCaptor.get(noteCaptor.size() - 1));","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"joenus"},"content":"            assertEquals(","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"                    new CommandResult(String.format(AddNoteCommand.MESSAGE_SUCCESS, Messages.format(VALID_NOTE_FLU)),","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"rickkoh"},"content":"                            false,","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"rickkoh"},"content":"                            false),","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"rickkoh"},"content":"                    result);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"joenus"},"content":"    public void equals_success() {","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"joenus"},"content":"        AddNoteCommand addNoteCommand1 \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"joenus"},"content":"        AddNoteCommand addNoteCommand2 \u003d new AddNoteCommand(Index.fromOneBased(2), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"joenus"},"content":"        // Same object.","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"joenus"},"content":"        assertEquals(addNoteCommand1, addNoteCommand1);","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"joenus"},"content":"        // Same values.","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"joenus"},"content":"        AddNoteCommand addNoteCommand1Copy \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"joenus"},"content":"        assertEquals(addNoteCommand1, addNoteCommand1Copy);","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"joenus"},"content":"        // Different types.","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"joenus"},"content":"        assertNotEquals(1, addNoteCommand1);","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"joenus"},"content":"        // Null.","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"joenus"},"content":"        assertNotEquals(null, addNoteCommand1);","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"joenus"},"content":"        // Different note.","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"joenus"},"content":"        assertNotEquals(addNoteCommand1, addNoteCommand2);","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"joenus"},"content":"    public void hashCode_success() {","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"joenus"},"content":"        AddNoteCommand addNoteCommand1 \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"joenus"},"content":"        AddNoteCommand addNoteCommand2 \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"joenus"},"content":"        // Same values.","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"joenus"},"content":"        assertEquals(addNoteCommand1.hashCode(), addNoteCommand2.hashCode());","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"joenus"},"content":"        // Different values.","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"joenus"},"content":"        AddNoteCommand addNoteCommand3 \u003d new AddNoteCommand(Index.fromOneBased(2), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"joenus"},"content":"        assertNotEquals(addNoteCommand1.hashCode(), addNoteCommand3.hashCode());","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"joenus"},"content":"    public void toString_success() {","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"joenus"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"rickkoh"},"content":"        String expected \u003d \"seedu.address.logic.commands.AddNoteCommand{personIndex\u003dseedu.address.commons.core.index\"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"joenus"},"content":"                + \".Index{zeroBasedIndex\u003d0}, note\u003dseedu.address.model.person.note.Note{dateTime\u003d2024-02-19T21:30, \"","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"joenus"},"content":"                + \"description\u003dGeneral Flu}}\";","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"joenus"},"content":"        assertEquals(expected, addNoteCommand.toString());","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"rickkoh"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"rickkoh"},"content":"        assertEquals(AddNoteCommand.COMMAND_WORD, addNoteCommand.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"rickkoh"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"rickkoh"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(Index.fromOneBased(1), VALID_NOTE_FLU);","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"rickkoh"},"content":"        assertEquals(AddNoteCommand.MESSAGE_USAGE, addNoteCommand.getMessageUsage());","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"joenus":120,"sebin0817":2,"rickkoh":16}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new ClearCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"        assertEquals(\"clear\", command.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new ClearCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"raysonchia"},"content":"        assertEquals(\"clear: Clears the patient book.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"                + \"Example: clear\", command.getMessageUsage());","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"raysonchia":1,"-":32,"rickkoh":13}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_DATE;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_NOTE;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_TIME;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"import seedu.address.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S9975657D\";","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_NRIC_BOB \u003d \"T8945869H\";","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"01-05-2000\";","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"02-03-1999\";","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_PHONE_AMY \u003d \"94505321\";","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_PHONE_BOB \u003d \"84505322\";","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_DRUG_ALLERGY_AMY \u003d \"Penicillin\";","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_DRUG_ALLERGY_BOB \u003d \"No allergy\";","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_ILLNESS_GENETIC \u003d \"Genetic Disorder\";","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String VALID_ILLNESS_INFECTIOUS \u003d \"Infectious Disease\";","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"    public static final String VALID_DATE \u003d \"19-02-2024\";","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"    public static final String VALID_TIME \u003d \"2130\";","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"    public static final String VALID_NOTE1 \u003d \"General Flu\";","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"    public static final String VALID_NOTE2 \u003d \"Headache\";","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"    public static final Note VALID_NOTE_FLU \u003d","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"        new Note(LocalDateTime.of(2024, 2, 19, 21, 30),","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"                new Description(\"General Flu\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String BIRTHDATE_DESC_AMY \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String BIRTHDATE_DESC_BOB \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String DRUG_ALLERGY_DESC_AMY \u003d \" \" + PREFIX_DRUG_ALLERGY + VALID_DRUG_ALLERGY_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String DRUG_ALLERGY_DESC_BOB \u003d \" \" + PREFIX_DRUG_ALLERGY + VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String ILLNESS_DESC_INFECTIOUS \u003d \" \" + PREFIX_ILLNESS + VALID_ILLNESS_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String ILLNESS_DESC_GENETIC \u003d \" \" + PREFIX_ILLNESS + VALID_ILLNESS_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"joenus"},"content":"    public static final String DATE_DESC \u003d \" \" + PREFIX_DATE + VALID_DATE;","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"joenus"},"content":"    public static final String TIME_DESC \u003d \" \" + PREFIX_TIME + VALID_TIME;","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"    public static final String NOTE_DESC \u003d \" \" + PREFIX_NOTE + VALID_NOTE1;","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"G3424GH\";","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"H\";","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String INVALID_BIRTHDATE_DESC \u003d \" \" + PREFIX_BIRTHDATE + \"99-99-9999\";","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String INVALID_DRUG_ALLERGY_DESC \u003d \" \" + PREFIX_DRUG_ALLERGY + \" \"; // empty string not allowed","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String INVALID_ILLNESS_DESC \u003d \" \" + PREFIX_ILLNESS + \"Infectious *\"; // \u0027*\u0027 not allowed","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"joenus"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"19/02/2024\"; // / not allowed for dates","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"    public static final String INVALID_TIME_DESC \u003d \" \" + PREFIX_TIME + \"21:30\"; // / colon seperated not allowed","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"joenus"},"content":"    public static final String INVALID_NOTE_DESC \u003d \" \" + PREFIX_NOTE; // empty note not allowed","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"    public static final EditNoteCommand.EditNoteDescriptor DESC_NOTE1;","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"    public static final EditNoteCommand.EditNoteDescriptor DESC_NOTE2;","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"                .withGender(VALID_GENDER_AMY).withBirthDate(VALID_BIRTHDATE_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"                .withDrugAllergy(VALID_DRUG_ALLERGY_AMY).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"                .withGender(VALID_GENDER_BOB).withBirthDate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"jmsandiegoo"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"                .withDrugAllergy(VALID_DRUG_ALLERGY_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"        DESC_NOTE1 \u003d new EditNoteDescriptorBuilder().withDateTime(VALID_NOTE_FLU.getDateTime())","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"                .withDescription(VALID_NOTE1).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"        DESC_NOTE2 \u003d new EditNoteDescriptorBuilder().withDateTime(VALID_NOTE_FLU.getDateTime())","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"                .withDescription(VALID_NOTE2).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"sebin0817"},"content":"     * Updates {@code model}\u0027s filtered list to show only the notes of the given {@code patientIndex} in the","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"sebin0817"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"sebin0817"},"content":"    public static void showNotesAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"sebin0817"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"sebin0817"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"sebin0817"},"content":"        ObservableList\u003cNote\u003e notes \u003d person.getNotes();","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"sebin0817"},"content":"        model.updateFilteredNoteList(note -\u003e notes.contains(note));","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"sebin0817"},"content":"        assertEquals(2, model.getFilteredNoteList().size());","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"joenus":15,"jmsandiegoo":40,"raysonchia":1,"sebin0817":25,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"joenus"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"rickkoh"},"content":"        assertEquals(DeleteCommand.COMMAND_WORD, command.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"rickkoh"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"rickkoh"},"content":"        assertEquals(DeleteCommand.MESSAGE_USAGE, command.getMessageUsage());","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"joenus":2,"-":118,"rickkoh":13}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"        PersonBuilder builder \u003d new PersonBuilder()","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"                .withNric(model.getFilteredPersonList().get(0).getNric().toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"        // We must include notes, as notes can\u0027t be modified by the edit command.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"        builder.withNotes(model.getFilteredPersonList().get(0).getNotes().toArray(new Note[0]));","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"        Person editedPerson \u003d builder.build();","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"                .withIllnesses(VALID_ILLNESS_INFECTIOUS).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"                .withPhone(VALID_PHONE_BOB).withIllnesses(VALID_ILLNESS_INFECTIOUS).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"joenus"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"joenus"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"rickkoh"},"content":"        assertEquals(EditCommand.COMMAND_WORD, command.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"rickkoh"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"rickkoh"},"content":"        assertEquals(EditCommand.MESSAGE_USAGE, command.getMessageUsage());","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"joenus":2,"jmsandiegoo":12,"-":156,"rickkoh":12}},{"path":"src/test/java/seedu/address/logic/commands/EditNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_NOTE1;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_NOTE2;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"import seedu.address.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditNoteCommand.","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"class EditNoteCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"        Note editedNote \u003d new Note(LocalDateTime.now(), new Description(\"Updated Description\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"        executeCommand_success(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, editedNote,","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"                String.format(EditNoteCommand.MESSAGE_EDIT_NOTE_SUCCESS, Messages.format(editedNote)));","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"    public void execute_editDescriptionOnly_success() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"        Note originalNote \u003d getOriginalNote(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE);","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"        Note editedNote \u003d new Note(originalNote.getDateTime(), new Description(\"New Description Only\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"        executeCommand_success(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, editedNote,","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"                String.format(EditNoteCommand.MESSAGE_EDIT_NOTE_SUCCESS, Messages.format(editedNote)));","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"    public void execute_editDateTimeOnly_success() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"        Note originalNote \u003d getOriginalNote(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"        Note editedNote \u003d new Note(LocalDateTime.now(), originalNote.getDescription());","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"        executeCommand_success(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, editedNote,","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"                String.format(EditNoteCommand.MESSAGE_EDIT_NOTE_SUCCESS, Messages.format(editedNote)));","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"    public void execute_invalidPatientIndex_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"        Index outOfBoundPatientIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"        Note editedNote \u003d new Note(LocalDateTime.now(), new Description(\"Doesn\u0027t matter\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder(editedNote).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(outOfBoundPatientIndex, INDEX_FIRST_NOTE, descriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"sebin0817"},"content":"    public void execute_invalidNoteIndex_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"sebin0817"},"content":"        Index patientIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"        Index outOfBoundNoteIndex \u003d Index.fromOneBased(model.getFilteredPersonList()","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"sebin0817"},"content":"                .get(patientIndex.getZeroBased()).getNotes().size() + 1);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"sebin0817"},"content":"        Note editedNote \u003d new Note(LocalDateTime.now(), new Description(\"Doesn\u0027t matter\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder(editedNote).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(patientIndex, outOfBoundNoteIndex, descriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"sebin0817"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"sebin0817"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"sebin0817"},"content":"        Command command \u003d new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, DESC_NOTE1);","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"sebin0817"},"content":"        assertEquals(EditNoteCommand.COMMAND_WORD, command.getCommandWord());","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"sebin0817"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"sebin0817"},"content":"        Command command \u003d new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, DESC_NOTE1);","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"sebin0817"},"content":"        assertEquals(EditNoteCommand.MESSAGE_USAGE, command.getMessageUsage());","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"sebin0817"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"sebin0817"},"content":"        final EditNoteCommand standardCommand \u003d new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, DESC_NOTE1);","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor copyDescriptor \u003d new EditNoteCommand.EditNoteDescriptor(DESC_NOTE1);","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand commandWithSameValues \u003d new EditNoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"                INDEX_FIRST_NOTE, copyDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"        assertFalse(standardCommand.equals(new EditNoteCommand(INDEX_SECOND_PERSON, INDEX_FIRST_NOTE, DESC_NOTE1)));","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"sebin0817"},"content":"        assertFalse(standardCommand.equals(new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, DESC_NOTE2)));","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"sebin0817"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor editNoteDescriptor \u003d new EditNoteCommand.EditNoteDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand editNoteCommand \u003d new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, editNoteDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"sebin0817"},"content":"        String expected \u003d EditNoteCommand.class.getCanonicalName() + \"{patientIndex\u003d\" + INDEX_FIRST_PERSON","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"sebin0817"},"content":"                + \", noteIndex\u003d\" + INDEX_FIRST_NOTE","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"sebin0817"},"content":"                + \", editNoteDescriptor\u003d\" + editNoteDescriptor + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"sebin0817"},"content":"        assertEquals(expected, editNoteCommand.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"sebin0817"},"content":"    private Note getOriginalNote(Index patientIndex, Index noteIndex) {","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"sebin0817"},"content":"        return model.getFilteredPersonList().get(patientIndex.getZeroBased()).getNotes().get(noteIndex.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"sebin0817"},"content":"    private void executeCommand_success(Index patientIndex, Index noteIndex, Note editedNote,","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"sebin0817"},"content":"                                     String expectedMessage) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder(editedNote).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(patientIndex, noteIndex, descriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"sebin0817"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(patientIndex.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"sebin0817"},"content":"        ObservableList\u003cNote\u003e updatedNotes \u003d FXCollections.observableArrayList(personToEdit.getNotes());","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"sebin0817"},"content":"        updatedNotes.set(noteIndex.getZeroBased(), editedNote);","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"sebin0817"},"content":"        Person updatedPerson \u003d new Person.Builder(personToEdit).setNotes(updatedNotes).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"sebin0817"},"content":"        Model expectedModel \u003d setupExpectedModel(personToEdit, updatedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"sebin0817"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"sebin0817"},"content":"    private Model setupExpectedModel(Person originalPerson, Person updatedPerson) {","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"sebin0817"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"sebin0817"},"content":"        expectedModel.setPerson(originalPerson, updatedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"sebin0817"},"content":"        return expectedModel;","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"sebin0817":154}},{"path":"src/test/java/seedu/address/logic/commands/EditNoteDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_NOTE1;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_NOTE2;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"import seedu.address.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"public class EditNoteDescriptorTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"    @Nested","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"    public class GetSetAttributesTests {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"        void setAndGetDate_returnSetDate() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"            LocalDate testDate \u003d LocalDate.of(2023, 10, 5);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"            EditNoteDescriptor descriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"            descriptor.setDate(testDate);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"            assertEquals(Optional.of(testDate), descriptor.getDate());","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"        void setAndGetTime_returnSetTime() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"            LocalTime testTime \u003d LocalTime.of(12, 0);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"            EditNoteDescriptor descriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"            descriptor.setTime(testTime);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"            assertEquals(Optional.of(testTime), descriptor.getTime());","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"        void setAndGetDescription_returnSetDescription() {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"            Description testDescription \u003d new Description(\"Test description\");","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"            EditNoteDescriptor descriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"            descriptor.setDescription(testDescription);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"            assertEquals(Optional.of(testDescription), descriptor.getDescription());","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor firstDescriptor \u003d new EditNoteCommand.EditNoteDescriptor(DESC_NOTE1);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor secondDescriptor \u003d new EditNoteCommand.EditNoteDescriptor(DESC_NOTE1);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor differentDescriptor \u003d new EditNoteCommand.EditNoteDescriptor(DESC_NOTE2);","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"        assertTrue(firstDescriptor.equals(secondDescriptor));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"        assertTrue(firstDescriptor.equals(firstDescriptor));","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"        assertFalse(firstDescriptor.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"        assertFalse(firstDescriptor.equals(new String(\"Not a descriptor\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"sebin0817"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"sebin0817"},"content":"        assertFalse(firstDescriptor.equals(differentDescriptor));","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"sebin0817"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"sebin0817"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2024-02-19T11:30\");","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"sebin0817"},"content":"        Note note \u003d new Note(dateTime, new Description(\"General Flu\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"sebin0817"},"content":"        EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder(note).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"sebin0817"},"content":"        String expected \u003d EditNoteDescriptor.class.getCanonicalName() + \"{date\u003d2024-02-19, time\u003d11:30,\"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"                + \" description\u003dGeneral Flu}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"        assertEquals(expected, descriptor.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"sebin0817":85}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_GENETIC;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_INFECTIOUS;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"        // different birthDate -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withBirthDate(VALID_BIRTHDATE_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"        // different drugAllergy","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withBirthDate(VALID_BIRTHDATE_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"        // different illnesses","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"                .withIllnesses(VALID_ILLNESS_INFECTIOUS, VALID_ILLNESS_GENETIC).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", gender\u003d\"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"jmsandiegoo"},"content":"                + editPersonDescriptor.getGender().orElse(null) + \", birthDate\u003d\"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"jmsandiegoo"},"content":"                + editPersonDescriptor.getBirthDate().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", drugAllergy\u003d\"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"jmsandiegoo"},"content":"                + editPersonDescriptor.getDrugAllergy().orElse(null) + \", illnesses\u003d\"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"jmsandiegoo"},"content":"                + editPersonDescriptor.getIllnesses().orElse(null) + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"joenus":1,"jmsandiegoo":23,"-":61}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new ExitCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"        assertEquals(ExitCommand.COMMAND_WORD, command.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"        Command command \u003d new ExitCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"        assertEquals(ExitCommand.MESSAGE_USAGE, command.getMessageUsage());","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":20,"rickkoh":13}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"rickkoh"},"content":"        FindCommand findCommand \u003d new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"rickkoh"},"content":"        assertEquals(FindCommand.COMMAND_WORD, findCommand.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"raysonchia":1,"-":90,"rickkoh":6}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForSpecificCommand_add() {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"add\"; // Example specific command \"add\"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"        // Verify","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"        assertEquals(AddCommand.MESSAGE_USAGE, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForEditCommand_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"edit\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"        // Verify","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"        assertEquals(EditCommand.MESSAGE_USAGE, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForDeleteCommand_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"delete\";","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"        // Verify","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"        assertEquals(DeleteCommand.MESSAGE_USAGE, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForClearCommand_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"clear\";","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"rickkoh"},"content":"        // Verify","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"rickkoh"},"content":"        assertEquals(ClearCommand.MESSAGE_USAGE, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForFindCommand_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"find\";","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"rickkoh"},"content":"        // Verify","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"rickkoh"},"content":"        assertEquals(FindCommand.MESSAGE_USAGE, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForListCommand_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"list\";","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"rickkoh"},"content":"        // Verify","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"rickkoh"},"content":"        assertEquals(ListCommand.MESSAGE_USAGE, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForExitCommand_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"exit\";","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"rickkoh"},"content":"        // Verify","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"rickkoh"},"content":"        assertEquals(ExitCommand.MESSAGE_USAGE, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"rickkoh"},"content":"    public void execute_helpForAllCommands_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"rickkoh"},"content":"        // Set up","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"rickkoh"},"content":"        String specificCommand \u003d \"\"; // No specific command","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(specificCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"rickkoh"},"content":"        // Execute","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"rickkoh"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"rickkoh"},"content":"        // Verify that the feedback contains usage instructions for all commands (when","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"rickkoh"},"content":"        // no specific command is specified)","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"rickkoh"},"content":"        // NOTE: When adding a new command, you must add an entry to the commandUsageMap","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"rickkoh"},"content":"        // in HelpCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(AddCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(EditCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(ClearCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(FindCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(HelpCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(ListCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(ExitCommand.COMMAND_WORD));","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"rickkoh"},"content":"        assertEquals(true, commandResult.getFeedbackToUser().contains(ExitCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":134,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"rickkoh"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"rickkoh"},"content":"        assertEquals(HelpCommand.COMMAND_WORD, helpCommand.getCommandWord());","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"rickkoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"rickkoh"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"rickkoh"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"rickkoh"},"content":"        assertEquals(HelpCommand.MESSAGE_USAGE, helpCommand.getMessageUsage());","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"rickkoh":131}},{"path":"src/test/java/seedu/address/logic/commands/ListNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showNotesAtIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListNoteCommand.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"class ListNoteCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"    private Model model;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"        assertCommandSuccess(new ListNoteCommand(), model, ListNoteCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"    public void execute_validIndex_filteredListShowsPersonNotes() {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"        showNotesAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"        ListNoteCommand listNoteCommand \u003d new ListNoteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"        Person person \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"        String commandMsg \u003d String.format(ListNoteCommand.MESSAGE_LIST_NOTE_SUCCESS, person.getName());","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"        assertCommandSuccess(listNoteCommand, model, commandMsg, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"        ListNoteCommand listNoteCommand \u003d new ListNoteCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"        assertCommandFailure(listNoteCommand, model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"    public void getCommandWord() {","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"        Command command \u003d new ListNoteCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"        assertEquals(ListNoteCommand.COMMAND_WORD, command.getCommandWord());","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"    public void getMessageUsage() {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"        Command command \u003d new ListNoteCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"        assertEquals(ListNoteCommand.MESSAGE_USAGE, command.getMessageUsage());","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"sebin0817":71}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DRUG_ALLERGY_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DRUG_ALLERGY_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ILLNESS_DESC_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ILLNESS_DESC_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDATE_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DRUG_ALLERGY_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ILLNESS_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withIllnesses(VALID_ILLNESS_INFECTIOUS).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"jmsandiegoo"},"content":"                + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + DRUG_ALLERGY_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"                + ILLNESS_DESC_INFECTIOUS, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"        Person expectedPersonMultipleIllnesses \u003d new PersonBuilder(BOB).withIllnesses(VALID_ILLNESS_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_ILLNESS_GENETIC).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"jmsandiegoo"},"content":"                + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + DRUG_ALLERGY_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"jmsandiegoo"},"content":"                + ILLNESS_DESC_INFECTIOUS + ILLNESS_DESC_GENETIC, new AddCommand(expectedPersonMultipleIllnesses));","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"        String validExpectedPersonString \u003d NRIC_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"                + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + DRUG_ALLERGY_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"jmsandiegoo"},"content":"                + ILLNESS_DESC_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"jmsandiegoo"},"content":"        // multiple nrics","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"        // multiple genders","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, GENDER_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"        // multiple birthdate","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, BIRTHDATE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDATE));","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"        // multiple drugAllergy","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, DRUG_ALLERGY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DRUG_ALLERGY));","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"                validExpectedPersonString + NRIC_DESC_BOB + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC, PREFIX_NAME, PREFIX_GENDER, PREFIX_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_DRUG_ALLERGY));","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid gender","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, INVALID_GENDER_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid birthdate","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, INVALID_BIRTHDATE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDATE));","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid drugAllergy","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, INVALID_DRUG_ALLERGY_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DRUG_ALLERGY));","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid gender","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_GENDER_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid birthdate","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_BIRTHDATE_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDATE));","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid drugAllergy","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DRUG_ALLERGY_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DRUG_ALLERGY));","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"jmsandiegoo"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withIllnesses().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseSuccess(parser, NRIC_DESC_AMY + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + DRUG_ALLERGY_DESC_AMY,","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"jmsandiegoo"},"content":"        // missing nric prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"jmsandiegoo"},"content":"                VALID_NRIC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS, expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"jmsandiegoo"},"content":"                        + VALID_NAME_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"jmsandiegoo"},"content":"        // missing birthdate prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":217,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"jmsandiegoo"},"content":"                        + VALID_BIRTHDATE_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":221,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"jmsandiegoo"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":227,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":228,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"jmsandiegoo"},"content":"        // missing email prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":232,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":233,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_NAME_BOB + VALID_GENDER_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":240,"author":{"gitId":"jmsandiegoo"},"content":"                        + VALID_BIRTHDATE_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"jmsandiegoo"},"content":"                        + VALID_DRUG_ALLERGY_BOB + VALID_ILLNESS_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":247,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"jmsandiegoo"},"content":"                INVALID_NRIC_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":253,"author":{"gitId":"jmsandiegoo"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":254,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":256,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":257,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":258,"author":{"gitId":"jmsandiegoo"},"content":"                        + INVALID_NAME_DESC + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":259,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":260,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":261,"author":{"gitId":"jmsandiegoo"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":262,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":263,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid gender","lastModifiedDate":"2024-03-16"},{"lineNumber":264,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":265,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + INVALID_GENDER_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":266,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":267,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":268,"author":{"gitId":"jmsandiegoo"},"content":"                Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":269,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":270,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid birthDate","lastModifiedDate":"2024-03-16"},{"lineNumber":271,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":272,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":273,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":274,"author":{"gitId":"jmsandiegoo"},"content":"                        + INVALID_BIRTHDATE_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":275,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":276,"author":{"gitId":"jmsandiegoo"},"content":"                BirthDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":279,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":280,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":281,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":283,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":284,"author":{"gitId":"jmsandiegoo"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":287,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":288,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":289,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":290,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":291,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":292,"author":{"gitId":"jmsandiegoo"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":294,"author":{"gitId":"jmsandiegoo"},"content":"        // invalid illness","lastModifiedDate":"2024-03-16"},{"lineNumber":295,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":296,"author":{"gitId":"jmsandiegoo"},"content":"                NRIC_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":297,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":298,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":299,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + INVALID_ILLNESS_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":300,"author":{"gitId":"jmsandiegoo"},"content":"                Illness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":303,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":304,"author":{"gitId":"jmsandiegoo"},"content":"                INVALID_NRIC_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":305,"author":{"gitId":"jmsandiegoo"},"content":"                        + INVALID_NAME_DESC + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":306,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":307,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":308,"author":{"gitId":"jmsandiegoo"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":311,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":312,"author":{"gitId":"jmsandiegoo"},"content":"                PREAMBLE_NON_EMPTY + INVALID_NRIC_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":313,"author":{"gitId":"jmsandiegoo"},"content":"                        + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":314,"author":{"gitId":"jmsandiegoo"},"content":"                        + BIRTHDATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":315,"author":{"gitId":"jmsandiegoo"},"content":"                        + DRUG_ALLERGY_DESC_BOB + ILLNESS_DESC_INFECTIOUS,","lastModifiedDate":"2024-03-16"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jmsandiegoo":184,"-":134}},{"path":"src/test/java/seedu/address/logic/parser/AddNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_DATE;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_NOTE;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.AddNoteCommand.PREFIX_TIME;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NOTE_DESC;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_FLU;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_DATE_TIME;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"public class AddNoteCommandParserTest {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"    private AddNoteCommandParser parser \u003d new AddNoteCommandParser();","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"        String command \u003d \" 1 d/19-02-2024 t/2130 n/General Flu\";","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"        assertParseSuccess(parser, command, new AddNoteCommand(INDEX_FIRST_PERSON, VALID_NOTE_FLU));","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"    public void parse_repeatedFields_failure() {","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"        // Repeated date.","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC + TIME_DESC + NOTE_DESC + DATE_DESC,","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE));","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"        // Repeated Time.","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC + TIME_DESC + NOTE_DESC + TIME_DESC,","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIME));","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"        // Repeated Note.","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC + TIME_DESC + NOTE_DESC + NOTE_DESC,","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NOTE));","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"        String message \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"        // Missing date prefix.","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + TIME_DESC + NOTE_DESC, message);","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"        // Missing time prefix.","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC + NOTE_DESC, message);","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"        // Missing note prefix.","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC + TIME_DESC, message);","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"        // Invalid date.","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"joenus"},"content":"        // Invalid time.","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC + INVALID_TIME_DESC + NOTE_DESC, MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"        // Invalid note.","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"joenus"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC + TIME_DESC + INVALID_NOTE_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"joenus":74}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.ListNoteCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"import seedu.address.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"raysonchia"},"content":"    // @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"raysonchia"},"content":"    // public void parseCommand_find() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"raysonchia"},"content":"    //     List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"raysonchia"},"content":"    //     FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"raysonchia"},"content":"    //             FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"raysonchia"},"content":"    //     assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"raysonchia"},"content":"    // }","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"joenus"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"joenus"},"content":"    public void parseCommand_addNote() throws Exception {","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"joenus"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2024-02-19T11:30\");","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"joenus"},"content":"        Note note \u003d new Note(dateTime, new Description(\"New note\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"joenus"},"content":"        AddNoteCommand command \u003d (AddNoteCommand) parser.parseCommand(\"add-an 1 d/19-02-2024 t/1130 n/New note\");","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"joenus"},"content":"        assertEquals(new AddNoteCommand(Index.fromOneBased(1), note), command);","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"    public void parseCommand_listNote() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"        assertTrue(parser.parseCommand(ListNoteCommand.COMMAND_WORD) instanceof ListNoteCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"        assertTrue(parser.parseCommand(ListNoteCommand.COMMAND_WORD + \" 3\") instanceof ListNoteCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"    public void parseCommand_editNote() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2024-02-19T11:30\");","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"        Note note \u003d new Note(dateTime, new Description(\"General Flu\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand.EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder(note).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"        EditNoteCommand command \u003d (EditNoteCommand) parser","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"                .parseCommand(\"edit-an 1 1 d/19-02-2024 t/1130 n/General Flu\");","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"sebin0817"},"content":"        assertEquals(new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, descriptor), command);","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"joenus":13,"jmsandiegoo":1,"raysonchia":7,"sebin0817":20,"-":89}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ILLNESS_DESC_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ILLNESS_DESC_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDATE_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ILLNESS_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String ILLNESS_EMPTY \u003d \" \" + PREFIX_ILLNESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"jmsandiegoo"},"content":"                + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"                + INVALID_GENDER_DESC, Gender.MESSAGE_CONSTRAINTS); // invalid gender","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"jmsandiegoo"},"content":"                + INVALID_BIRTHDATE_DESC, BirthDate.MESSAGE_CONSTRAINTS); // invalid birthdate","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"jmsandiegoo"},"content":"                + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"jmsandiegoo"},"content":"                + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"jmsandiegoo"},"content":"                + INVALID_ILLNESS_DESC, Illness.MESSAGE_CONSTRAINTS); // invalid illness","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"        // while parsing {@code PREFIX_ILLNESS} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"jmsandiegoo"},"content":"        // parsing it together with a valid illness results in error","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"                \"1\" + ILLNESS_DESC_INFECTIOUS + ILLNESS_DESC_GENETIC + ILLNESS_EMPTY,","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"                Illness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"                \"1\" + ILLNESS_DESC_INFECTIOUS + ILLNESS_EMPTY + ILLNESS_DESC_GENETIC,","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"                Illness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"jmsandiegoo"},"content":"                \"1\" + ILLNESS_EMPTY + ILLNESS_DESC_INFECTIOUS + ILLNESS_DESC_GENETIC,","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"                Illness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"                \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ILLNESS_DESC_INFECTIOUS","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + ILLNESS_DESC_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"jmsandiegoo"},"content":"                .withIllnesses(VALID_ILLNESS_INFECTIOUS, VALID_ILLNESS_GENETIC).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"jmsandiegoo"},"content":"        // illnesses","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"jmsandiegoo"},"content":"        userInput \u003d targetIndex.getOneBased() + ILLNESS_DESC_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withIllnesses(VALID_ILLNESS_INFECTIOUS).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"jmsandiegoo"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"jmsandiegoo"},"content":"                + ILLNESS_DESC_INFECTIOUS + PHONE_DESC_AMY + EMAIL_DESC_AMY + ILLNESS_DESC_INFECTIOUS","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"jmsandiegoo"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ILLNESS_DESC_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"jmsandiegoo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"jmsandiegoo"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"jmsandiegoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"jmsandiegoo"},"content":"        String userInput \u003d targetIndex.getOneBased() + ILLNESS_EMPTY;","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"jmsandiegoo"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withIllnesses().build();","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jmsandiegoo":54,"-":160}},{"path":"src/test/java/seedu/address/logic/parser/EditNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_NOTE1;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NOTE_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE1;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_DATE_TIME;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"import seedu.address.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"public class EditNoteCommandParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"    private final EditNoteCommandParser parser \u003d new EditNoteCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"    @Nested","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"    class ParseFieldsTests {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"        public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"            String command \u003d \" 1 1 d/19-02-2024 t/2130 n/General Flu\";","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"            assertParseSuccess(parser, command, new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE,","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"                    new EditNoteDescriptor(DESC_NOTE1)));","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"        public void parse_onlyDateFieldPresent_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"            String command \u003d \" 1 1 d/19-02-2024\";","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"            LocalDate expectedDate \u003d LocalDate.parse(VALID_DATE, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"            EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder().withDate(expectedDate).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"            assertParseSuccess(parser, command, new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, descriptor));","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"        public void parse_onlyTimeFieldPresent_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"            String command \u003d \" 1 1 t/2130\";","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"            LocalTime expectedTime \u003d LocalTime.parse(VALID_TIME, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"            EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder().withTime(expectedTime).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"            assertParseSuccess(parser, command, new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, descriptor));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"        public void parse_onlyDescriptionFieldPresent_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"            String command \u003d \" 1 1 n/General Flu\";","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"            EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder().withDescription(VALID_NOTE1).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"            assertParseSuccess(parser, command, new EditNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE, descriptor));","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"sebin0817"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"sebin0817"},"content":"        // no index specified","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"sebin0817"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"        // no field specified","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"sebin0817"},"content":"        assertParseFailure(parser, \"1 1\", EditNoteCommand.MESSAGE_NOTE_NOT_EDITED);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"sebin0817"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"sebin0817"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"sebin0817"},"content":"    @Nested","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"    class InvalidIndexTests {","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"        public void parse_negativeIndex_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"-1 1\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"1 -1\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"-1 -1\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"sebin0817"},"content":"        public void parse_zeroIndex_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"0 1\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"1 0\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"0 0\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"sebin0817"},"content":"    @Nested","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"sebin0817"},"content":"    class InvalidArgumentTests {","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"        public void parse_invalidArguments_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"some random string 1\" + DATE_DESC + TIME_DESC","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"                    + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"1 some random string\" + DATE_DESC + TIME_DESC","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"                    + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"        public void parse_invalidPrefix_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"1 1 z/ string\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"            assertParseFailure(parser, \"1 z/ string 1\" + DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"sebin0817"},"content":"        // Invalid date.","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"sebin0817"},"content":"        assertParseFailure(parser, \"1 1\" + INVALID_DATE_DESC + TIME_DESC + NOTE_DESC, MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"sebin0817"},"content":"        // Invalid time.","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"sebin0817"},"content":"        assertParseFailure(parser, \"1 1\" + DATE_DESC + INVALID_TIME_DESC + NOTE_DESC, MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"sebin0817"},"content":"        // Invalid note.","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"sebin0817"},"content":"        assertParseFailure(parser, \"1 1\" + DATE_DESC + TIME_DESC + INVALID_NOTE_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"sebin0817":127}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"raysonchia"},"content":"    // @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"raysonchia"},"content":"    // public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"raysonchia"},"content":"    //     // no leading and trailing whitespaces","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"    //     FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"raysonchia"},"content":"    //             new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"raysonchia"},"content":"    //     assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"raysonchia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"raysonchia"},"content":"    //     // multiple whitespaces between keywords","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"raysonchia"},"content":"    //     assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"raysonchia"},"content":"    // }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"raysonchia":10,"-":20}},{"path":"src/test/java/seedu/address/logic/parser/ListNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"public class ListNoteCommandParserTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"        String invalidInput \u003d \"a\";","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"        ListNoteCommandParser parser \u003d new ListNoteCommandParser();","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"    public void parse_outOfRangeIndex_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"        String outOfRangeInput \u003d \"-1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"        ListNoteCommandParser parser \u003d new ListNoteCommandParser();","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(outOfRangeInput));","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"sebin0817":23}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_NRIC \u003d \"G3424GH\";","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_GENDER \u003d \"H\";","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_BIRTHDATE \u003d \"99-99-9999\";","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_ILLNESS \u003d \"#illness\";","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"    private static final String INVALID_DATE \u003d \"2024-02-19\";","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"    private static final String INVALID_TIME \u003d \"5006\";","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_NRIC \u003d \"S1234567Z\";","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_GENDER \u003d \"M\";","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_BIRTHDATE \u003d \"01-02-1999\";","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_PHONE \u003d \"65435623\";","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_DRUG_ALLERGY \u003d \"Penicillin\";","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_ILLNESS_1 \u003d \"Infectious Disease\";","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_ILLNESS_2 \u003d \"Chronic Conditions\";","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"    private static final String VALID_DATE \u003d \"19-02-2024\";","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"    private static final String VALID_TIME \u003d \"1130\";","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"    private static final String VALID_DESCRIPTION \u003d \"General Flu\";","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"sebin0817"},"content":"    public void parseIndices_multipleValidInput_success() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"sebin0817"},"content":"        Index[] expected \u003d new Index[]{INDEX_FIRST_PERSON, INDEX_FIRST_NOTE};","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"sebin0817"},"content":"        assertArrayEquals(expected, ParserUtil.parseIndices(\"1 1\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"sebin0817"},"content":"    public void parseIndices_validInputWithWhitespaces_success() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"sebin0817"},"content":"        Index[] expected \u003d new Index[]{INDEX_FIRST_PERSON, INDEX_FIRST_NOTE};","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"sebin0817"},"content":"        assertArrayEquals(expected, ParserUtil.parseIndices(\"  1   1  \"));","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"sebin0817"},"content":"    public void parseIndices_invalidInput_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"sebin0817"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\"1 a 3\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"sebin0817"},"content":"    public void parseIndices_emptyString_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"sebin0817"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\"\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"    public void parseIndices_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(Long.toString((long) Integer.MAX_VALUE + 1)));","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"    public void parseIndices_onlyWhitespaces_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\"    \"));","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseNric_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNric((String) null));","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseNric_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseNric_validValueWithoutWhitespace_returnsNric() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(VALID_NRIC));","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseNric_validValueWithWhitespace_returnsTrimmedNric() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"        String nricWithWhitespace \u003d WHITESPACE + VALID_NRIC + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"jmsandiegoo"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(nricWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseGender_null_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"jmsandiegoo"},"content":"        Gender expectedGender \u003d new Gender(\"Prefer not to say\");","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"jmsandiegoo"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"jmsandiegoo"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"jmsandiegoo"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseBirthDate_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBirthDate((String) null));","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseBirthDate_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthDate(INVALID_GENDER));","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseBirthDate_validValueWithoutWhitespace_returnsBirthDate() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"jmsandiegoo"},"content":"        BirthDate expectedBirthDate \u003d new BirthDate(VALID_BIRTHDATE);","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedBirthDate, ParserUtil.parseBirthDate(VALID_BIRTHDATE));","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseBirthDate_validValueWithWhitespace_returnsTrimmedBirthDate() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"jmsandiegoo"},"content":"        String birthDateWithWhitespace \u003d WHITESPACE + VALID_BIRTHDATE + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"jmsandiegoo"},"content":"        BirthDate expectedBirthDate \u003d new BirthDate(VALID_BIRTHDATE);","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedBirthDate, ParserUtil.parseBirthDate(birthDateWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"jmsandiegoo"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"jmsandiegoo"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"jmsandiegoo"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":217,"author":{"gitId":"jmsandiegoo"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":221,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":222,"author":{"gitId":"jmsandiegoo"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"jmsandiegoo"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"jmsandiegoo"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllness_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIllness(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllness_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIllness(INVALID_ILLNESS));","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllness_validValueWithoutWhitespace_returnsIllness() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"jmsandiegoo"},"content":"        Illness expectedIllness \u003d new Illness(VALID_ILLNESS_1);","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedIllness, ParserUtil.parseIllness(VALID_ILLNESS_1));","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllness_validValueWithWhitespace_returnsTrimmedIllness() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"jmsandiegoo"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_ILLNESS_1 + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"jmsandiegoo"},"content":"        Illness expectedIllness \u003d new Illness(VALID_ILLNESS_1);","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedIllness, ParserUtil.parseIllness(tagWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllnesses_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIllnesses(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":280,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllnesses_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"jmsandiegoo"},"content":"                ParseException.class, () -\u003e ParserUtil.parseIllnesses(Arrays.asList(VALID_ILLNESS_1, INVALID_ILLNESS)));","lastModifiedDate":"2024-03-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":286,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllnesses_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":287,"author":{"gitId":"jmsandiegoo"},"content":"        assertTrue(ParserUtil.parseIllnesses(Collections.emptyList()).isEmpty());","lastModifiedDate":"2024-03-14"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":291,"author":{"gitId":"jmsandiegoo"},"content":"    public void parseIllnesses_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":292,"author":{"gitId":"jmsandiegoo"},"content":"        Set\u003cIllness\u003e actualIllnessSet \u003d ParserUtil.parseIllnesses(Arrays.asList(VALID_ILLNESS_1, VALID_ILLNESS_2));","lastModifiedDate":"2024-03-14"},{"lineNumber":293,"author":{"gitId":"jmsandiegoo"},"content":"        Set\u003cIllness\u003e expectedIllnessSet \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2024-03-16"},{"lineNumber":294,"author":{"gitId":"jmsandiegoo"},"content":"                Arrays.asList(new Illness(VALID_ILLNESS_1), new Illness(VALID_ILLNESS_2)));","lastModifiedDate":"2024-03-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":296,"author":{"gitId":"jmsandiegoo"},"content":"        assertEquals(expectedIllnessSet, actualIllnessSet);","lastModifiedDate":"2024-03-14"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":298,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":299,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-05"},{"lineNumber":300,"author":{"gitId":"joenus"},"content":"    public class ParseLocalDateTimeTests {","lastModifiedDate":"2024-03-05"},{"lineNumber":301,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":302,"author":{"gitId":"joenus"},"content":"        public void parseLocalDateTime_success() throws Exception {","lastModifiedDate":"2024-03-05"},{"lineNumber":303,"author":{"gitId":"joenus"},"content":"            LocalDateTime expectedDateTime \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":304,"author":{"gitId":"joenus"},"content":"                LocalDateTime.parse(VALID_DATE + \" \" + VALID_TIME, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":305,"author":{"gitId":"joenus"},"content":"            assertEquals(expectedDateTime, ParserUtil.parseLocalDateTime(VALID_DATE, VALID_TIME));","lastModifiedDate":"2024-03-05"},{"lineNumber":306,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":307,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":308,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":309,"author":{"gitId":"joenus"},"content":"        public void parseLocalDateTime_invalidDateTime_throwsParseException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":310,"author":{"gitId":"joenus"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocalDateTime(INVALID_DATE, INVALID_TIME));","lastModifiedDate":"2024-03-05"},{"lineNumber":311,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":312,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":313,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":314,"author":{"gitId":"joenus"},"content":"        public void parseLocalDateTime_invalidDate_throwsParseException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":315,"author":{"gitId":"joenus"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocalDateTime(INVALID_DATE, VALID_TIME));","lastModifiedDate":"2024-03-05"},{"lineNumber":316,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":317,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":318,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":319,"author":{"gitId":"joenus"},"content":"        public void parseLocalDateTime_invalidTime_throwsParseException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":320,"author":{"gitId":"joenus"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocalDateTime(VALID_DATE, INVALID_TIME));","lastModifiedDate":"2024-03-05"},{"lineNumber":321,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":322,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":323,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":324,"author":{"gitId":"joenus"},"content":"        public void parseLocalDateTime_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":325,"author":{"gitId":"joenus"},"content":"            assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocalDateTime(null, null));","lastModifiedDate":"2024-03-05"},{"lineNumber":326,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":327,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":328,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":329,"author":{"gitId":"sebin0817"},"content":"    @Nested","lastModifiedDate":"2024-03-26"},{"lineNumber":330,"author":{"gitId":"sebin0817"},"content":"    public class ParseLocalDateTests {","lastModifiedDate":"2024-03-26"},{"lineNumber":331,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":332,"author":{"gitId":"sebin0817"},"content":"        public void parseLocalDate_success() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":333,"author":{"gitId":"sebin0817"},"content":"            LocalDate expectedDate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":334,"author":{"gitId":"sebin0817"},"content":"                    LocalDate.parse(VALID_DATE, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":335,"author":{"gitId":"sebin0817"},"content":"            assertEquals(expectedDate, ParserUtil.parseLocalDate(VALID_DATE));","lastModifiedDate":"2024-03-26"},{"lineNumber":336,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":337,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":338,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":339,"author":{"gitId":"sebin0817"},"content":"        public void parseLocalDate_invalidDate_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":340,"author":{"gitId":"sebin0817"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocalDate(INVALID_DATE));","lastModifiedDate":"2024-03-26"},{"lineNumber":341,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":342,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":343,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":344,"author":{"gitId":"sebin0817"},"content":"        public void parseLocalDate_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":345,"author":{"gitId":"sebin0817"},"content":"            assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocalDate(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":346,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":347,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":348,"author":{"gitId":"sebin0817"},"content":"    @Nested","lastModifiedDate":"2024-03-26"},{"lineNumber":349,"author":{"gitId":"sebin0817"},"content":"    public class ParseLocalTimeTests {","lastModifiedDate":"2024-03-26"},{"lineNumber":350,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":351,"author":{"gitId":"sebin0817"},"content":"        public void parseLocalTime_success() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":352,"author":{"gitId":"sebin0817"},"content":"            LocalTime expectedTime \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":353,"author":{"gitId":"sebin0817"},"content":"                    LocalTime.parse(VALID_TIME, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":354,"author":{"gitId":"sebin0817"},"content":"            assertEquals(expectedTime, ParserUtil.parseLocalTime(VALID_TIME));","lastModifiedDate":"2024-03-26"},{"lineNumber":355,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":356,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":357,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":358,"author":{"gitId":"sebin0817"},"content":"        public void parseLocalTime_invalidDate_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":359,"author":{"gitId":"sebin0817"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocalTime(INVALID_TIME));","lastModifiedDate":"2024-03-26"},{"lineNumber":360,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":361,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":362,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":363,"author":{"gitId":"sebin0817"},"content":"        public void parseLocalTime_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":364,"author":{"gitId":"sebin0817"},"content":"            assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocalTime(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":365,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":366,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":368,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-05"},{"lineNumber":369,"author":{"gitId":"joenus"},"content":"    public class ParseDescriptionTests {","lastModifiedDate":"2024-03-05"},{"lineNumber":370,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":371,"author":{"gitId":"joenus"},"content":"        public void parseDescription_success() throws Exception {","lastModifiedDate":"2024-03-05"},{"lineNumber":372,"author":{"gitId":"joenus"},"content":"            Description expected \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2024-03-05"},{"lineNumber":373,"author":{"gitId":"joenus"},"content":"            assertEquals(expected, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2024-03-05"},{"lineNumber":374,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":375,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":376,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":377,"author":{"gitId":"joenus"},"content":"        public void parseDescription_invalidInput_throwsParseException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":378,"author":{"gitId":"joenus"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2024-03-05"},{"lineNumber":379,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":380,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":381,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":382,"author":{"gitId":"joenus"},"content":"        public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":383,"author":{"gitId":"joenus"},"content":"            assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2024-03-05"},{"lineNumber":384,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":386,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"joenus":57,"jmsandiegoo":101,"sebin0817":74,"-":154}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"    public void addressbook_copyConstuctor_copiesNotes() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"        AddressBook copied \u003d new AddressBook(original);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"        assertEquals(original.getNoteList(), copied.getNoteList());","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"                .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"                .withIllnesses(VALID_ILLNESS_GENETIC)","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"sebin0817"},"content":"    public void resetData_withValidReadOnlyAddressBook_updatesNotes() {","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"sebin0817"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"sebin0817"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"sebin0817"},"content":"        assertEquals(newData.getNoteList(), addressBook.getNoteList());","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"jmsandiegoo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"jmsandiegoo"},"content":"                .withIllnesses(VALID_ILLNESS_GENETIC)","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"    public void deletePerson_deleteAssociatedNotes() {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"        ObservableList\u003cNote\u003e notesToDelete \u003d ALICE.getNotes();","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"        newData.removePerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"        assertFalse(newData.getNoteList().contains(notesToDelete));","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"sebin0817"},"content":"    public void addNote_singleNote_addedSuccessfully() {","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"sebin0817"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"sebin0817"},"content":"        ab.addNote(new Note(LocalDateTime.now(), new Description(\"Test Note\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"sebin0817"},"content":"        assertEquals(1, ab.getNoteList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"sebin0817"},"content":"    public void addNote_multipleNotes_addedSuccessfully() {","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"sebin0817"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"sebin0817"},"content":"        Note firstNote \u003d new Note(LocalDateTime.now(), new Description(\"First Test Note\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"sebin0817"},"content":"        Note secondNote \u003d new Note(LocalDateTime.now().plusDays(1), new Description(\"Second Test Note\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"sebin0817"},"content":"        ab.addNote(firstNote);","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"sebin0817"},"content":"        ab.addNote(secondNote);","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"sebin0817"},"content":"        assertEquals(2, ab.getNoteList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"sebin0817"},"content":"        assertEquals(firstNote, ab.getNoteList().get(0));","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"sebin0817"},"content":"        assertEquals(secondNote, ab.getNoteList().get(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"sebin0817"},"content":"        private final ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"sebin0817"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"sebin0817"},"content":"        public ObservableList\u003cNote\u003e getNoteList() {","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"sebin0817"},"content":"            return notes;","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jmsandiegoo":7,"sebin0817":50,"-":104}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalPersons.NOTE1;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"import static seedu.address.testutil.TypicalPersons.NOTE2;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"sebin0817"},"content":"        // Adding test for different filteredNoteList","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"sebin0817"},"content":"        addressBook.addNote(NOTE1);","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"sebin0817"},"content":"        addressBook.addNote(NOTE2);","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"sebin0817"},"content":"        Predicate\u003cNote\u003e firstNotePredicate \u003d note -\u003e note.getDescription().equals(\"Headache\");","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"sebin0817"},"content":"        modelManager.updateFilteredNoteList(firstNotePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"sebin0817"},"content":"        // Verify modelManagers with different filteredNoteList are not equal","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"sebin0817"},"content":"        assertFalse(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"sebin0817"},"content":"    public void addNote_noteAdded_noteListSizeIncreases() {","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"sebin0817"},"content":"        int initialNoteListSize \u003d modelManager.getFilteredNoteList().size();","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"sebin0817"},"content":"        modelManager.addNote(NOTE1);","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"sebin0817"},"content":"        assertEquals(initialNoteListSize + 1, modelManager.getFilteredNoteList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"sebin0817"},"content":"    public void addNote_noteAdded_addedNoteIsInList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"sebin0817"},"content":"        modelManager.addNote(NOTE1);","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"sebin0817"},"content":"        assertTrue(modelManager.getFilteredNoteList().contains(NOTE1));","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"sebin0817"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"sebin0817"},"content":"    public void addNote_noteAdded_filteredNoteListShowsAllNotes() {","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"sebin0817"},"content":"        int totalNotesCount \u003d modelManager.getAddressBook().getNoteList().size();","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"sebin0817"},"content":"        modelManager.addNote(NOTE1);","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"sebin0817"},"content":"        modelManager.updateFilteredNoteList(Model.PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"sebin0817"},"content":"        assertEquals(totalNotesCount + 1, modelManager.getFilteredNoteList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"raysonchia":1,"sebin0817":35,"-":131}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"raysonchia"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"jmsandiegoo"},"content":"        // Keywords match phone, email, but does not match name","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"jmsandiegoo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"94505323\", \"alice@email.com\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"jmsandiegoo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"94505323\")","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jmsandiegoo":4,"raysonchia":1,"-":81}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_FLU;","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getIllnesses().remove(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"                .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"                .withBirthDate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"                .withIllnesses(VALID_ILLNESS_GENETIC).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"        // different nric -\u003e return false","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"jmsandiegoo"},"content":"        Person editedAlice \u003d new PersonBuilder().withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"jmsandiegoo"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"jmsandiegoo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"jmsandiegoo"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"jmsandiegoo"},"content":"        // different gender -\u003e return false","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"jmsandiegoo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"jmsandiegoo"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"        // different birthdate -\u003e return false","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"joenus"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"joenus"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"        // different drugAllergy -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withDrugAllergy(VALID_DRUG_ALLERGY_AMY).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"joenus"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"        // different illnesses -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withIllnesses(VALID_ILLNESS_GENETIC).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"joenus"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"joenus"},"content":"        // different notes -\u003e returns false","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"joenus"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNotes(new Note[] {VALID_NOTE_FLU}).build();","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"joenus"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"                + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"                + \", gender\u003d\" + ALICE.getGender()","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"jmsandiegoo"},"content":"                + \", birthDate\u003d\" + ALICE.getBirthDate()","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"jmsandiegoo"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"                + \", drugAllergy\u003d\" + ALICE.getDrugAllergy()","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"                + \", illnesses\u003d\" + ALICE.getIllnesses()","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"joenus"},"content":"                + \", notes\u003d\" + ALICE.getNotes() + \"}\";","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"joenus"},"content":"    class BuilderTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"joenus"},"content":"        public void build_default_returnsPerson() {","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"joenus"},"content":"            var builder \u003d new Person.Builder(ALICE);","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"joenus"},"content":"            assertEquals(ALICE, builder.build());","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"joenus"},"content":"        public void build_updateValues_returnsPerson() {","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"joenus"},"content":"            var builder \u003d new Person.Builder(ALICE)","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"jmsandiegoo"},"content":"                    .setNric(BENSON.getNric())","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"joenus"},"content":"                    .setName(BENSON.getName())","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"jmsandiegoo"},"content":"                    .setGender(BENSON.getGender())","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"jmsandiegoo"},"content":"                    .setBirthDate(BENSON.getBirthDate())","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"joenus"},"content":"                    .setPhone(BENSON.getPhone())","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"joenus"},"content":"                    .setEmail(BENSON.getEmail())","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"jmsandiegoo"},"content":"                    .setDrugAllergy(BENSON.getDrugAllergy())","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"jmsandiegoo"},"content":"                    .setIllnesses(BENSON.getIllnesses())","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"joenus"},"content":"                    .setNotes(BENSON.getNotes());","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":147,"author":{"gitId":"joenus"},"content":"            assertEquals(BENSON, builder.build());","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"joenus":39,"jmsandiegoo":44,"-":67}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"jmsandiegoo"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 8 numbers","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"        assertFalse(Phone.isValidPhone(\"49384758\")); // not start with 6, 8 or 9","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"        assertTrue(Phone.isValidPhone(\"63121534\")); // start with 6","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"        assertTrue(Phone.isValidPhone(\"83121534\")); // start with 8","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\")); // start with 9","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"        Phone phone \u003d new Phone(\"94505323\");","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"jmsandiegoo"},"content":"        assertTrue(phone.equals(new Phone(\"94505323\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        assertFalse(phone.equals(new Phone(\"94505333\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jmsandiegoo":8,"-":53}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"                .withName(BOB.getName().fullName)","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"                .withGender(BOB.getGender().gender)","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"jmsandiegoo"},"content":"                .withName(BOB.getName().fullName)","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"                .withGender(BOB.getGender().gender)","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jmsandiegoo":6,"-":171}},{"path":"src/test/java/seedu/address/model/person/illness/IllnessTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jmsandiegoo"},"content":"package seedu.address.model.person.illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"public class IllnessTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Illness(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Illness(invalidTagName));","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"    public void isValidIllnessName() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Illness.isValidIllnessName(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"jmsandiegoo":6,"-":20}},{"path":"src/test/java/seedu/address/model/person/note/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.model.person.note;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"public class DescriptionTest {","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"    class ConstructorTests {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"        public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"            assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"        public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"            String invalid \u003d \"\";","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"            assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalid));","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"    class IsValidTests {","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"        public void isValid_null_throwsNullPointerException() {","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"            assertThrows(NullPointerException.class, () -\u003e Description.isValid(null));","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"        public void isValid_invalid() {","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"            assertFalse(Description.isValid(\"\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"        public void isValid_valid() {","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"            assertTrue(Description.isValid(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"    class EqualsTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        public void equals_sameValues() {","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"            Description description1 \u003d new Description(\"Test\");","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"            Description description2 \u003d new Description(\"Test\");","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"            assertEquals(description1, description2);","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"        public void equals_differentValues() {","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"            Description description1 \u003d new Description(\"Test1\");","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"            Description description2 \u003d new Description(\"Test2\");","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"            assertNotEquals(description1, description2);","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"        public void equals_null() {","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(\"Test\");","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"            assertNotEquals(description, null);","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"joenus"},"content":"        public void equals_differentClass() {","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(\"Test\");","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"            Object other \u003d new Object();","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"            assertNotEquals(description, other);","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"joenus"},"content":"    class HashCodeTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"joenus"},"content":"        public void hashCode_same() {","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"joenus"},"content":"            Description description1 \u003d new Description(\"Test\");","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"joenus"},"content":"            Description description2 \u003d new Description(\"Test\");","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"joenus"},"content":"            assertEquals(description1.hashCode(), description2.hashCode());","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"joenus"},"content":"        public void hashCode_different() {","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"joenus"},"content":"            Description description1 \u003d new Description(\"Test1\");","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"joenus"},"content":"            Description description2 \u003d new Description(\"Test2\");","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"joenus"},"content":"            assertNotEquals(description1.hashCode(), description2.hashCode());","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"joenus"},"content":"    class ToStringTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"joenus"},"content":"        public void toString_sucess() {","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"joenus"},"content":"            String validDescription \u003d \"Some valid description\";","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(validDescription);","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"joenus"},"content":"            assertEquals(validDescription, description.toString());","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"joenus":102}},{"path":"src/test/java/seedu/address/model/person/note/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.model.person.note;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"public class NoteTest {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"    class ConstructorTests {","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"        public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"            assertThrows(NullPointerException.class, () -\u003e new Note(null, null));","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"        public void constructor_success_createsInstance() {","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(\"Some description\");","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"            Note note \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"            assertNotNull(note);","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"            assertEquals(dateTime, note.getDateTime());","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"            assertEquals(description, note.getDescription());","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"    class EqualsTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"        public void equals_same() {","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(\"Test description\");","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"            Note note1 \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"            Note note2 \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"            assertEquals(note1, note2);","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"        public void equals_differentDateTime() {","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(\"Test description\");","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"            Note note1 \u003d new Note(LocalDateTime.now(), description);","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"            Note note2 \u003d new Note(LocalDateTime.now().plusDays(1), description);","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"            assertNotEquals(note1, note2);","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"        public void equals_differentDescription() {","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"            Note note1 \u003d new Note(dateTime, new Description(\"Description 1\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"            Note note2 \u003d new Note(dateTime, new Description(\"Description 2\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"            assertNotEquals(note1, note2);","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"    class HashCodeTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"        public void hashCode_same() {","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(\"Test description\");","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"            Note note1 \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"joenus"},"content":"            Note note2 \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"joenus"},"content":"            assertEquals(note1.hashCode(), note2.hashCode());","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"        public void hashCode_different() {","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"joenus"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"sebin0817"},"content":"            Note note1 \u003d new Note(dateTime, new Description(\"Test description\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"sebin0817"},"content":"            Note note2 \u003d new Note(dateTime, new Description(\"Another description\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"sebin0817"},"content":"            assertNotEquals(note1.hashCode(), note2.hashCode());","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"joenus"},"content":"    class ToStringTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"joenus"},"content":"        public void toString_success() {","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"joenus"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.of(2023, 4, 20, 15, 30);","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"joenus"},"content":"            Description description \u003d new Description(\"Appointment at clinic\");","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"joenus"},"content":"            Note note \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"joenus"},"content":"            String expected \u003d","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"joenus"},"content":"                String.format(\"seedu.address.model.person.note.Note{dateTime\u003d%s, description\u003d%s}\", dateTime,","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"joenus"},"content":"                    description);","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"            assertEquals(expected, note.toString());","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"sebin0817"},"content":"    @Nested","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"sebin0817"},"content":"    class GetDateTimeAsStringTests {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"sebin0817"},"content":"        @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"sebin0817"},"content":"        public void getDateTimeAsString_correctFormat() {","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"sebin0817"},"content":"            // Setup - choose a date-time where day and month values are distinct to avoid confusion","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"sebin0817"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.of(2023, 4, 20, 15, 30);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"sebin0817"},"content":"            Description description \u003d new Description(\"Some description\");","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"sebin0817"},"content":"            Note note \u003d new Note(dateTime, description);","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"sebin0817"},"content":"            // Expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"sebin0817"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"sebin0817"},"content":"            String expected \u003d dateTime.format(formatter);","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"sebin0817"},"content":"            // Assertion","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"sebin0817"},"content":"            assertEquals(expected, note.getDateTimeAsString());","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"sebin0817"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"joenus":91,"sebin0817":23}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"    private static final LocalDateTime TEST_DATE_TIME \u003d LocalDateTime.of(2024, 1, 1, 12, 30);","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"    class GetSampleAddressBookTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"        public void getSampleAddressBook_success_returnsAddressBook() {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"            ReadOnlyAddressBook result \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"            assertNotNull(result);","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"            assertFalse(result.getPersonList().isEmpty());","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"    class GetTagsTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"        void getTags_success_returnsEmptySet() {","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"            Set\u003cIllness\u003e illnesses \u003d SampleDataUtil.getIllnesses();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"            assertTrue(illnesses.isEmpty());","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"        public void getTags_success_returnsPopulatedSet() {","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"            String[] tags \u003d {\"friend\", \"colleague\"};","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"            Set\u003cIllness\u003e result \u003d SampleDataUtil.getIllnesses(tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"            assertEquals(2, result.size());","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"            assertTrue(result.contains(new Illness(tags[0])));","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"            assertTrue(result.contains(new Illness(tags[1])));","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"    class GetNotesTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"        public void getNotes_success_returnsEmptyList() {","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"            Note[] notes \u003d {};","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"            ObservableList\u003cNote\u003e result \u003d SampleDataUtil.getNotes(notes);","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"            assertTrue(result.isEmpty());","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"        public void getNotes_success_returnsPopulatedList() {","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"            var note1 \u003d new Note(TEST_DATE_TIME, new Description(\"Sample note 1\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"            var note2 \u003d new Note(TEST_DATE_TIME, new Description(\"Sample note 2\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"            Note[] notes \u003d {note1, note2};","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"joenus"},"content":"            ObservableList\u003cNote\u003e result \u003d SampleDataUtil.getNotes(notes);","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"joenus"},"content":"            assertEquals(2, result.size());","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"joenus"},"content":"            assertEquals(note1, result.get(0));","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"joenus"},"content":"            assertEquals(note2, result.get(1));","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"joenus":69,"jmsandiegoo":6}},{"path":"src/test/java/seedu/address/storage/JsonAdapatedNoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joenus"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"joenus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"joenus"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"joenus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"joenus"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"joenus"},"content":"public class JsonAdapatedNoteTest {","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"joenus"},"content":"    private static final LocalDateTime TEST_DATE_TIME \u003d LocalDateTime.of(2024, 1, 1, 12, 30);","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"joenus"},"content":"    private static final String VALID_DESCRIPTION \u003d \"General Flu\";","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"joenus"},"content":"    class ConstructorTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"joenus"},"content":"        public void constructor_jsonProperty_returnsNote() {","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"joenus"},"content":"            JsonAdapatedNote jsonAdapatedNote \u003d new JsonAdapatedNote(TEST_DATE_TIME, VALID_DESCRIPTION);","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"            assertNotNull(jsonAdapatedNote);","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"joenus"},"content":"        public void constructor_note_returnsNote() {","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"joenus"},"content":"            JsonAdapatedNote jsonAdapatedNote \u003d","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"joenus"},"content":"                new JsonAdapatedNote(new Note(TEST_DATE_TIME, new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"joenus"},"content":"            assertNotNull(jsonAdapatedNote);","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"    @Nested","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"joenus"},"content":"    class ToModelTypeTests {","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"joenus"},"content":"        public void toModelType_success_returnsNote() throws Exception {","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"joenus"},"content":"            Note original \u003d new Note(TEST_DATE_TIME, new Description(VALID_DESCRIPTION));","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"joenus"},"content":"            JsonAdapatedNote jsonAdapatedNote \u003d new JsonAdapatedNote(original);","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"            Note modelNote \u003d jsonAdapatedNote.toModelType();","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"            assertEquals(original, modelNote);","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"joenus"},"content":"        public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"joenus"},"content":"            JsonAdapatedNote jsonAdapatedNote \u003d new JsonAdapatedNote(TEST_DATE_TIME, INVALID_DESCRIPTION);","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"joenus"},"content":"            assertThrows(IllegalValueException.class, jsonAdapatedNote::toModelType);","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"joenus"},"content":"        @Test","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"joenus"},"content":"        public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"joenus"},"content":"            JsonAdapatedNote jsonAdapatedNote \u003d new JsonAdapatedNote(TEST_DATE_TIME, null);","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"joenus"},"content":"            assertThrows(IllegalValueException.class, jsonAdapatedNote::toModelType);","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"joenus":67}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"joenus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"joenus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_NRIC \u003d \"G3424GH\";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_GENDER \u003d \"H\";","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_BIRTHDATE \u003d \"99-99-9999\";","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_ILLNESS \u003d \"#illness\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_DATE \u003d \"2024-02-19\";","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_TIME \u003d \"5006\";","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_BIRTHDATE \u003d BENSON.getBirthDate().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"    private static final String VALID_DRUG_ALLERGY \u003d BENSON.getDrugAllergy().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"    private static final List\u003cJsonAdaptedIllness\u003e VALID_ILLNESSES \u003d BENSON.getIllnesses().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"        .map(JsonAdaptedIllness::new)","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"    private static final ObservableList\u003cJsonAdapatedNote\u003e VALID_NOTES \u003d BENSON.getNotes().stream()","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"joenus"},"content":"        .map(JsonAdapatedNote::new)","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"joenus"},"content":"        .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(INVALID_NRIC, VALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(null, VALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"jmsandiegoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"            new JsonAdaptedPerson(VALID_NRIC, INVALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"                    VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"joenus"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"            new JsonAdaptedPerson(VALID_NRIC, null, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"                    VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, INVALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"joenus"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, null, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_invalidBirthDate_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_GENDER, INVALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d BirthDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_nullBirthDate_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"joenus"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_GENDER, null,","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BirthDate.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"jmsandiegoo"},"content":"                        INVALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"jmsandiegoo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"jmsandiegoo"},"content":"                        null, VALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, INVALID_EMAIL, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"joenus"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, null, VALID_DRUG_ALLERGY, VALID_ILLNESSES, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"jmsandiegoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"jmsandiegoo"},"content":"    public void toModelType_invalidIllnesses_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"jmsandiegoo"},"content":"        List\u003cJsonAdaptedIllness\u003e invalidIllnesses \u003d new ArrayList\u003c\u003e(VALID_ILLNESSES);","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"jmsandiegoo"},"content":"        invalidIllnesses.add(new JsonAdaptedIllness(INVALID_ILLNESS));","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"jmsandiegoo"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_GENDER, VALID_BIRTHDATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"jmsandiegoo"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_DRUG_ALLERGY, invalidIllnesses, VALID_NOTES);","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"joenus":9,"jmsandiegoo":76,"-":89}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"joenus":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditNoteDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sebin0817"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"sebin0817"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"sebin0817"},"content":"import seedu.address.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"sebin0817"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"sebin0817"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"sebin0817"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"sebin0817"},"content":"public class EditNoteDescriptorBuilder {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"sebin0817"},"content":"    private EditNoteDescriptor descriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"sebin0817"},"content":"    public EditNoteDescriptorBuilder() {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"sebin0817"},"content":"        descriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"sebin0817"},"content":"     * Returns an {@code EditNoteDescriptorBuilder} with fields containing {@code edit}\u0027s details","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"sebin0817"},"content":"    public EditNoteDescriptorBuilder(Note note) {","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"sebin0817"},"content":"        descriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"sebin0817"},"content":"        descriptor.setDate(note.getDateTime().toLocalDate());","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"sebin0817"},"content":"        descriptor.setTime(note.getDateTime().toLocalTime());","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"sebin0817"},"content":"        descriptor.setDescription(note.getDescription());","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"sebin0817"},"content":"     * Sets the {@code date time} of the {@code EditNoteDescriptor} that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"sebin0817"},"content":"    public EditNoteDescriptorBuilder withDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"sebin0817"},"content":"        descriptor.setDate(dateTime.toLocalDate());","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"sebin0817"},"content":"        descriptor.setTime(dateTime.toLocalTime());","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"sebin0817"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"sebin0817"},"content":"     * Sets the {@code date} of the {@code EditNoteDescriptor} that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"sebin0817"},"content":"    public EditNoteDescriptorBuilder withDate(LocalDate date) {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"sebin0817"},"content":"        descriptor.setDate(date);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"sebin0817"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"sebin0817"},"content":"     * Sets the {@code time} of the {@code EditNoteDescriptor} that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"sebin0817"},"content":"    public EditNoteDescriptorBuilder withTime(LocalTime time) {","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sebin0817"},"content":"        descriptor.setTime(time);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sebin0817"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sebin0817"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sebin0817"},"content":"     * Sets the {@code description} of the {@code EditNoteDescriptor} that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sebin0817"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sebin0817"},"content":"    public EditNoteDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sebin0817"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sebin0817"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sebin0817"},"content":"    public EditNoteDescriptor build() {","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sebin0817"},"content":"        return descriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"sebin0817"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"sebin0817"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"sebin0817":68}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setBirthDate(person.getBirthDate());","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setDrugAllergy(person.getDrugAllergy());","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setIllnesses(person.getIllnesses());","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"     * Sets the {@code BirthDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"    public EditPersonDescriptorBuilder withBirthDate(String birthDate) {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setBirthDate(new BirthDate(birthDate));","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"     * Sets the {@code DrugAllergy} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"jmsandiegoo"},"content":"    public EditPersonDescriptorBuilder withDrugAllergy(String drugAllergy) {","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setDrugAllergy(new DrugAllergy(drugAllergy));","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses the {@code illnesses} into a {@code Set\u003cIllness\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"    public EditPersonDescriptorBuilder withIllnesses(String... illnesses) {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"        Set\u003cIllness\u003e illnessSet \u003d Stream.of(illnesses).map(Illness::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.setIllnesses(illnessSet);","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jmsandiegoo":31,"-":76}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"joenus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"joenus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.BirthDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String DEFAULT_NRIC \u003d \"S1234567D\";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String DEFAULT_BIRTHDATE \u003d \"07-10-1999\";","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"jmsandiegoo"},"content":"    public static final String DEFAULT_DRUG_ALLERGY \u003d \"No allergy\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"jmsandiegoo"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"jmsandiegoo"},"content":"    private Gender gender;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"    private BirthDate birthDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"    private DrugAllergy drugAllergy;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"    private Set\u003cIllness\u003e illnesses \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"joenus"},"content":"    private ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"        birthDate \u003d new BirthDate(DEFAULT_BIRTHDATE);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"        drugAllergy \u003d new DrugAllergy(DEFAULT_DRUG_ALLERGY);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        birthDate \u003d personToCopy.getBirthDate();","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"        drugAllergy \u003d personToCopy.getDrugAllergy();","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"        this.illnesses.addAll(personToCopy.getIllnesses());","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"joenus"},"content":"        this.notes.addAll(personToCopy.getNotes());","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"jmsandiegoo"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"jmsandiegoo"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"jmsandiegoo"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"joenus"},"content":"        return this;","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"joenus"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"joenus"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"joenus"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"jmsandiegoo"},"content":"     * Sets the {@code BirthDate} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"joenus"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"jmsandiegoo"},"content":"    public PersonBuilder withBirthDate(String birthDate) {","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"        this.birthDate \u003d new BirthDate(birthDate);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"     * Sets the {@code DrugAllergy} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"jmsandiegoo"},"content":"    public PersonBuilder withDrugAllergy(String drugAllergy) {","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"jmsandiegoo"},"content":"        this.drugAllergy \u003d new DrugAllergy(drugAllergy);","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"jmsandiegoo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses the {@code illness} into a {@code Set\u003cIllness\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"    public PersonBuilder withIllnesses(String ... illness) {","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"jmsandiegoo"},"content":"        this.illnesses \u003d SampleDataUtil.getIllnesses(illness);","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"     * Parses the {@code notes} into a {@code ObservableList\u003cNote\u003e} and set it to the {@code Person} that we are","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"     * building.","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"jmsandiegoo"},"content":"    public PersonBuilder withNotes(Note[] notes) {","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"jmsandiegoo"},"content":"        this.notes \u003d SampleDataUtil.getNotes(notes);","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":144,"author":{"gitId":"jmsandiegoo"},"content":"        return new Person(nric, name, gender, birthDate, phone, email, drugAllergy, illnesses, notes);","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"joenus":9,"jmsandiegoo":56,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"jmsandiegoo"},"content":"import seedu.address.model.person.illness.Illness;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"        sb.append(PREFIX_NRIC + person.getNric().nric + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"        sb.append(PREFIX_GENDER + person.getGender().gender + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"        sb.append(PREFIX_BIRTHDATE + person.getBirthDate().birthDate + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"        sb.append(PREFIX_DRUG_ALLERGY + person.getDrugAllergy().drugAllergy + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"        person.getIllnesses().stream().forEach(","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"            s -\u003e sb.append(PREFIX_ILLNESS + s.illnessName + \" \")","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.gender).append(\" \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.getBirthDate().ifPresent(","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"                birthDate -\u003e sb.append(PREFIX_BIRTHDATE).append(birthDate.birthDate).append(\" \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"        descriptor.getDrugAllergy().ifPresent(","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"                drugAllergy -\u003e sb.append(PREFIX_DRUG_ALLERGY).append(drugAllergy.drugAllergy).append(\" \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"        if (descriptor.getIllnesses().isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"            Set\u003cIllness\u003e illnesses \u003d descriptor.getIllnesses().get();","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"jmsandiegoo"},"content":"            if (illnesses.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"                sb.append(PREFIX_ILLNESS);","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"                illnesses.forEach(s -\u003e sb.append(PREFIX_ILLNESS).append(s.illnessName).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jmsandiegoo":22,"-":50}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"sebin0817"},"content":"    public static final Index INDEX_FIRST_NOTE \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"sebin0817":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_GENETIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ILLNESS_INFECTIOUS;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"jmsandiegoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"joenus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Description;","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"joenus"},"content":"import seedu.address.model.person.note.Note;","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withNric(\"S1234567A\")","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"F\")","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"01-02-2000\")","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"jmsandiegoo"},"content":"            .withDrugAllergy(\"No allergy\")","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"jmsandiegoo"},"content":"            .withIllnesses(\"Infectious Disease\").withNotes(new Note[]{","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"jmsandiegoo"},"content":"                new Note(LocalDateTime.of(2024, 2, 19, 21, 30),","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"jmsandiegoo"},"content":"                        new Description(\"General Flu\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"jmsandiegoo"},"content":"                new Note(LocalDateTime.of(2024, 2, 28, 8, 30),","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"jmsandiegoo"},"content":"                        new Description(\"Headache\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"joenus"},"content":"            }).build();","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"S1234567B\")","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"M\")","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"01-03-1999\")","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"jmsandiegoo"},"content":"            .withDrugAllergy(\"Penicillin\")","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"jmsandiegoo"},"content":"            .withIllnesses(\"Infectious Disease\")","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"jmsandiegoo"},"content":"            .withNotes(new Note[]{","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"jmsandiegoo"},"content":"                new Note(LocalDateTime.of(2024, 2, 20, 15, 30),","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"jmsandiegoo"},"content":"                        new Description(\"Joint pain assessment\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"jmsandiegoo"},"content":"                new Note(LocalDateTime.of(2024, 4, 4, 10, 30),","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"jmsandiegoo"},"content":"                        new Description(\"Post-surgery checkup\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"jmsandiegoo"},"content":"                new Note(LocalDateTime.of(2024, 5, 19, 17, 0),","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"jmsandiegoo"},"content":"                        new Description(\"Sports injury follow-up\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"joenus"},"content":"            }).build();","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"T1234567A\")","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"Prefer not to say\")","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"04-10-1998\")","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"jmsandiegoo"},"content":"            .withDrugAllergy(\"No allergy\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"T1234567B\")","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"M\")","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"02-06-2001\")","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"jmsandiegoo"},"content":"            .withDrugAllergy(\"Antibiotics\")","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"jmsandiegoo"},"content":"            .withIllnesses(\"Chronic Condition\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"T1234567C\")","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"F\")","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"03-02-1997\")","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"94822245\")","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"F1234567A\")","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"F\")","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"03-06-1996\")","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"94824277\")","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"jmsandiegoo"},"content":"            .build();","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"F1234567B\")","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"M\")","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"01-03-2002\")","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"94824423\")","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"jmsandiegoo"},"content":"            .withIllnesses(\"Genetic Disorder\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":107,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"F1234567C\")","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"M\")","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(\"04-11-2000\")","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"84824242\")","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"sebin0817"},"content":"            .withIllnesses(\"Nutritional Deficiency\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(\"G1234567A\")","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(\"F\")","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(\"84821311\")","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"jmsandiegoo"},"content":"            .withDrugAllergy(\"Sulfonamides\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":124,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(VALID_NRIC_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(VALID_BIRTHDATE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"jmsandiegoo"},"content":"            .withDrugAllergy(VALID_DRUG_ALLERGY_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"jmsandiegoo"},"content":"            .withIllnesses(VALID_ILLNESS_INFECTIOUS).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"jmsandiegoo"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"jmsandiegoo"},"content":"            .withNric(VALID_NRIC_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"jmsandiegoo"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"jmsandiegoo"},"content":"            .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"jmsandiegoo"},"content":"            .withBirthDate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"jmsandiegoo"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"jmsandiegoo"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"jmsandiegoo"},"content":"            .withDrugAllergy(VALID_DRUG_ALLERGY_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"jmsandiegoo"},"content":"            .withIllnesses(VALID_ILLNESS_INFECTIOUS, VALID_ILLNESS_GENETIC)","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":144,"author":{"gitId":"sebin0817"},"content":"    public static final Note NOTE1 \u003d new Note(LocalDateTime.now(), new Description(\"Headache\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"sebin0817"},"content":"    public static final Note NOTE2 \u003d new Note(LocalDateTime.now(), new Description(\"Covid-19\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"sebin0817"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":159,"author":{"gitId":"sebin0817"},"content":"        ab.updateNoteList();","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"joenus":5,"jmsandiegoo":109,"sebin0817":5,"-":47}}]
