[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"# FINDvisor","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103-F15-1/tp/actions)","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-F15-1/tp/graph/badge.svg?token\u003dvAQ9m3CKxP)](https://codecov.io/gh/AY2324S2-CS2103-F15-1/tp)","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"*FINDvisor aims to streamline client management for financial advisors with a tool that organizes contact information. Furthermore, it aims to simplify organising meetings, and tracks client goals for better timeline planning—all in one clutter-free interface.* While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"For the detailed documentation of this project, see the **[FINDvisor Product Website](https://ay2324s2-cs2103-f15-1.github.io/tp/)**.","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"## Acknowledgements","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"Dethada":8,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"mainClassName \u003d \u0027seedu.findvisor.Main\u0027","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"    archiveFileName \u003d \u0027findvisor.jar\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"run {","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KohGuanZeh":1,"Javiery3889":3,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"YuZizhen"},"content":"### Yu Zizhen","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"YuZizhen"},"content":"\u003cimg src\u003d\"images/yuzizhen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"YuZizhen"},"content":"[[github](https://github.com/YuZizhen)]","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":"* Role: Developer","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"YuZizhen"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"YuZizhen"},"content":"### Koh Guan Zeh","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"\u003cimg src\u003d\"images/kohguanzeh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"[[github](https://github.com/KohGuanZeh)]","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"YuZizhen"},"content":"* Role: Developer","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"YuZizhen"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"### Javier Yong","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"\u003cimg src\u003d\"images/javiery3889.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"[[github](https://github.com/Javiery3889)]","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"YuZizhen"},"content":"* Responsibilities: Scheduling and Tracking","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"### Lim Yong En, Dominic","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"\u003cimg src\u003d\"images/arixeyeion.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"[[github](http://github.com/Arixeyeion)]","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"YuZizhen"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"### David Zhu","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"\u003cimg src\u003d\"images/dethada.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"[[github](http://github.com/Dethada)]","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"YuZizhen"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Arixeyeion":6,"KohGuanZeh":2,"Javiery3889":3,"YuZizhen":11,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** For all sequence diagrams, note that the lifeline for objects should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"Arixeyeion"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"![Structure of the UI Component](images/UiClassDiagram.svg)","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `MeetingListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.svg)","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"KohGuanZeh"},"content":"Classes used by multiple components are in the `seedu.findvisor.commons` package.","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"KohGuanZeh"},"content":"### Data Changing Commands","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"KohGuanZeh"},"content":"The section aims to show how the different components interact with each other when a **command that changes the data** stored in FINDvisor is called.","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"KohGuanZeh"},"content":"The `edit` command will be used as an example to demonstrate the interactions.","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"KohGuanZeh"},"content":"The following sequence diagram shows the interaction within `Logic` component when executing `EditCommand`.","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"KohGuanZeh"},"content":"![EditSequenceDiagram-Logic](images/EditSequenceDiagram-Logic.svg)","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"KohGuanZeh"},"content":"The following sequence diagram shows the interactions within `Model` component when executing `EditCommand`.","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"KohGuanZeh"},"content":"![EditSequenceDiagram-Model](images/EditSequenceDiagram-Model.svg)","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"KohGuanZeh"},"content":"The following sequence diagram shows the interactions within the `Storage` component when executing `EditCommand`.","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"KohGuanZeh"},"content":"![EditSequenceDiagram-Storage](images/EditSequenceDiagram-Storage.svg)","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"Dethada"},"content":"### Meeting Scheduling","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"Dethada"},"content":"`Person` class has an `Optional\u003cMeeting\u003e` field which will hold a `Meeting` object that contains the meeting details if a meeting is scheduled with the person. Otherwise, it will hold an `Optional.empty()` to represent no meeting is scheduled with the person.","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"Dethada"},"content":"The supported meeting details are:","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"Dethada"},"content":"- Start date time","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"Dethada"},"content":"- End date time","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"Dethada"},"content":"- Remarks","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"Dethada"},"content":"#### Schedule Command","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"Dethada"},"content":"The `schedule` command is implemented to allow users to schedule meetings within the application. The command follows a sequence of interactions similar to the other commands. The part to highlight is `ScheduleCommandParser#parse(String)`  creates a `Meeting` object containing the parsed meeting details and it is then passed to `ScheduleCommand`.","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"Dethada"},"content":"The following sequence diagram shows how a schedule meeting operation goes through the `Logic` component:","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Dethada"},"content":"![Schedule Meeting Sequence Diagram](images/ScheduleMeetingSequenceDiagram.svg)","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"Dethada"},"content":"#### Reschedule Command","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"Dethada"},"content":"The `reschedule` command is designed to provide users with the capability to update the meeting details of a previously scheduled meeting. The primary action is the creation of a new `Meeting` object with the specified changes, that will replace the current `Meeting` object of the specified person in the Model.","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"Dethada"},"content":"The execution flow of the `reschedule` command follows a sequence of interactions similar to the `edit` Command, with the main difference being `RescheduleCommand` takes a `EditMeetingDescriptor` instead of `EditPersonDescriptor`.","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"Dethada"},"content":"#### Unschedule Command","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"Dethada"},"content":"The `unschedule` command is designed to provide users with the capability to remove previously scheduled meetings. The primary action is the removal of the Meeting object from the specified person\u0027s record in the Model.","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"Dethada"},"content":"The execution flow of the `unschedule` command is similar to the one shown for `schedule` command (refer to the sequence diagram for `ScheduleCommand` shown above), with the main difference being the `personToEdit` will have their meeting field set to `Optional.empty()`.","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"Dethada"},"content":"#### Design Choice","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"Dethada"},"content":"The implementation of the `schedule` and `unschedule` command are in this manner to maintain consistency with the existing command structure.","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"Dethada"},"content":"For the schedule command, in the case where a person already has a meeting scheduled, the schedule command will result in an error, instead of overwriting the existing meeting details. This behavior is chosen over the alternative of overwriting the existing meeting details to guard against accidental data loss.","lastModifiedDate":"2024-03-26"},{"lineNumber":200,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"KohGuanZeh"},"content":"### Remark Feature","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"KohGuanZeh"},"content":"Users are able to add a `Remark` to a `Person` in FINDvisor to note down some information about a `Person`.","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"KohGuanZeh"},"content":"The remark feature is implemented through creating a `RemarkCommand`, which updates the `Remark` of a `Person`.","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"KohGuanZeh"},"content":"A separate command is used to support the remark feature to separate the logic of the personal particulars of a `Person` from the `Remark`.","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"KohGuanZeh"},"content":"`Remark` is implemented with the use of the `Optional` generic class (i.e. `Optional\u003cRemark\u003e`) as it is an optional attribute of a `Person`.","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"KohGuanZeh"},"content":"While it is possible to determine an empty `Remark` through its value, the `Optional` generic class provides a better abstraction for when a `Remark` is empty.","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"KohGuanZeh"},"content":"When a user passes a parameter that is either empty or consists exclusively of whitespace, the `Remark` attribute of a `Person` would be updated to `Optional.empty()`.","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"KohGuanZeh"},"content":"This is equivalent to a user removing the previous `Remark` of a `Person`.","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"KohGuanZeh"},"content":"The following sequence diagram shows how the remark value is parsed through the `Logic` component:","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"KohGuanZeh"},"content":"![RemarkSequenceDiagram-Logic](images/RemarkSequenceDiagram-Logic.svg)","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The activation bar for `LogicManager` does not end after the `RemarkCommand` is returned. The above diagram is only meant to highlight the parsing for `Remark` which is why the sequence diagram ends here.","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"KohGuanZeh"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"KohGuanZeh"},"content":"#### Proposed Changes","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"KohGuanZeh"},"content":"A proposed change to the current remark feature is to allow users to have remarks added as an optional field for `AddCommand` and `EditCommand` for the convenience of users.","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"KohGuanZeh"},"content":"The `RemarkCommand` can remain for users  to only update the `Remark` of a `Person`.","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"Javiery3889"},"content":"### Searching persons by person\u0027s information feature","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"Javiery3889"},"content":"This feature allows users to find for a specific `Person` field based on the user-supplied string, all `Person` that contains the specified search string in the specified field will be displayed to the user. The find mechanism is facilitated by `FindCommand` and `FindCommandParser` that extends `Command` and `Parser` respectively. Note that `FindCommandParser` implements `FindCommand#parse(String)` which checks if there is only one parameter supplied by the user which corresponds to the `Person` field to be searched.","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":229,"author":{"gitId":"Javiery3889"},"content":"The current supported `Person` fields that can be searched are:","lastModifiedDate":"2024-03-26"},{"lineNumber":230,"author":{"gitId":"Javiery3889"},"content":"- Name","lastModifiedDate":"2024-03-26"},{"lineNumber":231,"author":{"gitId":"Javiery3889"},"content":"- Email","lastModifiedDate":"2024-03-26"},{"lineNumber":232,"author":{"gitId":"Javiery3889"},"content":"- Phone Number","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"Javiery3889"},"content":"- Address","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"Javiery3889"},"content":"- Remark","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"Javiery3889"},"content":"- Meeting Date","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"Javiery3889"},"content":"- Meeting Remark","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"Javiery3889"},"content":"- Tags","lastModifiedDate":"2024-03-26"},{"lineNumber":238,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":239,"author":{"gitId":"Javiery3889"},"content":"The following sequence diagram below shows how `Model` and `LogicManger` components interact with the find feature. Below are the definitions used in the sequence diagram:","lastModifiedDate":"2024-03-26"},{"lineNumber":240,"author":{"gitId":"Javiery3889"},"content":"- `find`: `find n/John`","lastModifiedDate":"2024-03-26"},{"lineNumber":241,"author":{"gitId":"Javiery3889"},"content":"- `argument`: `n/John`","lastModifiedDate":"2024-03-26"},{"lineNumber":242,"author":{"gitId":"Javiery3889"},"content":"- `value`: `John`","lastModifiedDate":"2024-03-26"},{"lineNumber":243,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":244,"author":{"gitId":"Javiery3889"},"content":"![FindSequenceDiagram-Model](images/FindSequenceDiagram.svg)","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"Javiery3889"},"content":"1. The user executes `find n/John` to find all `Person` with `Name` containing `John`.","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"Javiery3889"},"content":"2. The `FindCommandParser` checks that only one parameter is present in the user input. This parameter is used to indicate which `Person` field to search for.","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"Javiery3889"},"content":"3. When called upon to parse the value of the parameter specified by the user, the `FindCommandParser` creates an `PersonXYZPredicate` that encapsulates the user search string e.g. `John` (`XYZ` is a placeholder for the specific `Person` field e.g. `PersonNamePredicate`).","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"Javiery3889"},"content":"4. All `PersonXYZPredicate` classes (e.g.`PersonNamePredicate`, `PersonEmailPredicate`) inherit from `PersonPredicate` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"Javiery3889"},"content":"5. A new `FindCommand` instance is created by `FindCommandParser` and is executed by `LogicManger`.","lastModifiedDate":"2024-03-26"},{"lineNumber":251,"author":{"gitId":"Javiery3889"},"content":"6. `FindCommand` will call `Model#updateFilteredPersonList(PersonPredicate)` to update the `UI` and display all `Person` that has `Name` containing `John`.","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"Javiery3889"},"content":"7. The result of the command execution is encapsulated as a `CommandResult` object which is returned back to `LogicManager`.","lastModifiedDate":"2024-03-26"},{"lineNumber":253,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":254,"author":{"gitId":"Javiery3889"},"content":"#### Search persons by person\u0027s meeting date sub-feature","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"Javiery3889"},"content":"For search queries based on person\u0027s meeting date, the user input will be first validated in `FindCommandParser` to check if it matches the date format specified in FINDvisor. This validation is facilitated by `ParserUtil#parseMeetingDate(String)`. Afterwards, `FindCommandParser` will create a new `PersonMeetingDatePredicate(LocalDate)` with the parsed user input if it is valid. ","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"Javiery3889"},"content":"The following sequence diagram below show `Model` and `LogicManger` components interact with the find by person\u0027s meeting date sub-feature. Below are the definitions used in the sequence diagram:","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"Javiery3889"},"content":"- `find`: `find m/25-04-2024`","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"Javiery3889"},"content":"- `argument`: `m/25-04-2024`","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"Javiery3889"},"content":"- `value`: `25-04-2024`","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"Javiery3889"},"content":"![FindMeetingDateSequenceDiagram](images/FindMeetingDateSequenceDiagram.svg)","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"Arixeyeion"},"content":"### Add Tag Feature","lastModifiedDate":"2024-03-27"},{"lineNumber":265,"author":{"gitId":"Arixeyeion"},"content":"This feature allows users to add `tags` to a `person` within the contact list, without the need to use the `edit` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"Arixeyeion"},"content":"This feature is implemented through the `AddTagCommand` and the `AddTagCommandParser` which extends `Command` and `Parser` respectively.","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"Arixeyeion"},"content":"The `AddTagCommandParser` takes in an `index` and the `tags` to add to a person. If both are supplied and valid, they are passed into the `AddTagCommand`, if not it will throw an exception according to the error.","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"Arixeyeion"},"content":"The following sequence diagram shows how `AddTag` interacts with `Logic`.","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"Javiery3889"},"content":"![AddTagSequenceDiagram-Model](images/AddTagSequenceDiagram.svg)","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"Arixeyeion"},"content":"1. The user keys in `addtags 1 t/validTag1 t/validTag2` to add 2 valid tags to the `person` at the first `index`.","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"Arixeyeion"},"content":"2. The `AddTagCommandParser` validates `index` and `tags`, then returns a new `AddTagCommand` with the corresponding index and set of tags.","lastModifiedDate":"2024-03-28"},{"lineNumber":277,"author":{"gitId":"Arixeyeion"},"content":"3. The `LogicManager` then executes the `AddTagCommand`.","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"Arixeyeion"},"content":"4. The `AddTagCommand` finds the `Person` to add tags to using `Index` and creates a new `Person` with the added tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"Arixeyeion"},"content":"5. `AddTagCommand` then calls the `setPerson(person, personWithAddedTags)` method to set the old `Person` to the newly created `Person`.","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"Arixeyeion"},"content":"6. `AddTagCommand` then calls `updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` to update `UI` to display the person with the newly added `Tags`.","lastModifiedDate":"2024-03-27"},{"lineNumber":281,"author":{"gitId":"Arixeyeion"},"content":"7. `CommandResult` is then returned to `LogicManager`.","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"KohGuanZeh"},"content":"#### Proposed Changes","lastModifiedDate":"2024-04-01"},{"lineNumber":284,"author":{"gitId":"Arixeyeion"},"content":"Allow users to add tags to multiple people at once.","lastModifiedDate":"2024-03-27"},{"lineNumber":285,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":286,"author":{"gitId":"YuZizhen"},"content":"### Delete Tag Feature","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"YuZizhen"},"content":"This section aims to show the logic behind delete tag command and the consideration behind the scene.","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"YuZizhen"},"content":"Delete Tag Command is a new featured added for user to delete one specific tag associated with a specific person located by index of the current list. This command is called by `deletetag` followed by the index of the targeted person, then by one target tag `tag` object. In case of the targeting tag is not associated with the person, an error message suggesting missing targeted tag will be returned.","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"YuZizhen"},"content":"The delete tag mechanism is facilitated by `DeleteTagCommand` and `DeleteTagCommandParser` that extends `Command` and `Parser` respectively. The `DeleteTagCommandParser` takes in an `index` and the `tag` to delete from a person. If both are supplied and valid, they are passed into the `DeleteTagCommand`.","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"YuZizhen"},"content":"The following sequence diagram shows how `DeleteTagCommand` interacts with `Logic`.","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"YuZizhen"},"content":"![DeleteTagSequenceDiagram](images/DeleteTagSequenceDiagram.svg)","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"YuZizhen"},"content":"1. The user keys in `deletetag 1 t/validTag` to delete `validTag` associated with the `person` at the first `index`.","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"YuZizhen"},"content":"2. The `DeleteTagCommandParser` checks that the `index` and `tag` are valid, then returns a new `DeleteTagCommand` with the corresponding index and the target tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"YuZizhen"},"content":"3. The `LogicManager` then executes the `DeleteTagCommand`.","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"YuZizhen"},"content":"4. The `DeleteTagCommand` finds the `Person` using `Index` and check whether the target tag exists for the `Person`.","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"YuZizhen"},"content":"5. If targeted `tag` is found with the targeted `Person`, then the command creates a new `Person` with the all other tags except the targeted tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"YuZizhen"},"content":"6. If targeted `tag` is not found with the targeted `Person`, then the command will return an error message indicating the `Person` does not have the targeted `validTag`.","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"YuZizhen"},"content":"7. `DeleteTagCommand` then calls the `setPerson(person, editedPerson)` method to set the old `Person` to the newly created `Person`.","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"YuZizhen"},"content":"8. `DeleteTagCommand` then calls `updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` to update `UI` to display the newly updated person list in Findvisor.","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"YuZizhen"},"content":"9. `CommandResult` is then returned to `LogicManager`.","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"KohGuanZeh"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.svg)","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":353,"author":{"gitId":"KohGuanZeh"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.svg)","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"Javiery3889"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-09"},{"lineNumber":393,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":394,"author":{"gitId":"Javiery3889"},"content":"## **Planned Enhancements**","lastModifiedDate":"2024-04-09"},{"lineNumber":395,"author":{"gitId":"Javiery3889"},"content":"**Team size: 5**","lastModifiedDate":"2024-04-09"},{"lineNumber":396,"author":{"gitId":"Javiery3889"},"content":"### 1. Allow users to enter more special characters for Remark and Meeting Remark fields","lastModifiedDate":"2024-04-09"},{"lineNumber":397,"author":{"gitId":"Javiery3889"},"content":"**Current Implementation**: ","lastModifiedDate":"2024-04-09"},{"lineNumber":398,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":399,"author":{"gitId":"Javiery3889"},"content":"- `REMARK` and `MEETING_REMARK` fields uses **the same pre-defined set of allowed characters** to prevent issues with command parsing. User inputs that contains any characters **not included** in the pre-defined set will be treated as invalid and results with an error message.","lastModifiedDate":"2024-04-09"},{"lineNumber":400,"author":{"gitId":"Javiery3889"},"content":"- For example, if the user wishes to add a remark titled \"Birthday on 23/02/2024\" for an existing Person at index 1, the command `remark 1 r/Birthday on 23/02/2024` will be invalid.","lastModifiedDate":"2024-04-09"},{"lineNumber":401,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":402,"author":{"gitId":"Javiery3889"},"content":"**Proposed Enhancement**: ","lastModifiedDate":"2024-04-09"},{"lineNumber":403,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":404,"author":{"gitId":"Javiery3889"},"content":"- Modify the pre-defined set of allowed characters to **capture any character instead**.","lastModifiedDate":"2024-04-09"},{"lineNumber":405,"author":{"gitId":"Javiery3889"},"content":"- Allow escaping of `/` characters by the user using `\\` as an escape character. With reference to the previous `remark` command, the remark will be successfully saved when the user enters `remark 1 r/Birthday on 23\\/02\\/2024`.","lastModifiedDate":"2024-04-09"},{"lineNumber":406,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":407,"author":{"gitId":"Javiery3889"},"content":"### 2. Allow users to enter more special characters for Address field","lastModifiedDate":"2024-04-09"},{"lineNumber":408,"author":{"gitId":"Javiery3889"},"content":"**Current Implementation**: ","lastModifiedDate":"2024-04-09"},{"lineNumber":409,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":410,"author":{"gitId":"Javiery3889"},"content":"- Similar to Planned Enhancement 1, the `ADDRESS` field uses a **pre-defined set of allowed characters** to prevent issues with command parsing. User inputs that contains any characters **not included** in the pre-defined set will be treated as invalid and results with an error message.","lastModifiedDate":"2024-04-09"},{"lineNumber":411,"author":{"gitId":"Javiery3889"},"content":"- For example, if the user wishes to edit an existing Person\u0027s address at index 1 with the value \"Pinnacle@Duxton\", the command `edit 1 a/Pinnacle@Duxton` will be invalid.","lastModifiedDate":"2024-04-09"},{"lineNumber":412,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":413,"author":{"gitId":"Javiery3889"},"content":"**Proposed Enhancement**: ","lastModifiedDate":"2024-04-09"},{"lineNumber":414,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":415,"author":{"gitId":"Javiery3889"},"content":"- Modify the pre-defined set of allowed characters to **capture any character instead**. This allows for flexibility since all special characters will be accepted for the `ADDRESS` field.","lastModifiedDate":"2024-04-09"},{"lineNumber":416,"author":{"gitId":"Javiery3889"},"content":"- For addresses containing `/` characters, the user will be required to use the `\\` character to escape each `/` character similar to the example in Planned Enhancement 1.","lastModifiedDate":"2024-04-09"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"KohGuanZeh"},"content":"* financial advisors based in Singapore and deals with Singaporean clients","lastModifiedDate":"2024-04-03"},{"lineNumber":437,"author":{"gitId":"Javiery3889"},"content":"* has a need of scheduling meetings with a significant number of clients","lastModifiedDate":"2024-02-27"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"KohGuanZeh"},"content":"* has English as his first language","lastModifiedDate":"2024-04-03"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"Javiery3889"},"content":"**Value proposition**: FINDvisor aims to streamline client management for financial advisors with a tool that organizes contact information. Furthermore, it aims to simplify organising meetings, and tracks client goals for better timeline planning—all in one clutter-free interface.","lastModifiedDate":"2024-02-27"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                                                             | So that I can…​                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"KohGuanZeh"},"content":"|----------|-------------------|------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-31"},{"lineNumber":452,"author":{"gitId":"Javiery3889"},"content":"| `* * *`  | New user          | easily download and launch FINDvisor                                                     | quickly start managing my client information                                  |","lastModifiedDate":"2024-02-27"},{"lineNumber":453,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | New user          | know how to operate the basic functionalities of FINDvisor                               |                                                                               |","lastModifiedDate":"2024-03-31"},{"lineNumber":454,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | New user          | know how to operate the basic functionalities of FINDvisor within the app                | learn how to use FINDvisor without heavily referencing external documentation |","lastModifiedDate":"2024-03-31"},{"lineNumber":455,"author":{"gitId":"Javiery3889"},"content":"| `* * *`  | Financial Advisor | add contacts of my clients                                                               | keep a record of my clients\u0027 contact information                              |","lastModifiedDate":"2024-02-27"},{"lineNumber":456,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | Financial Advisor | delete a client\u0027s contact                                                                | reduce clutter in contact list with clients I no longer need contact with     |","lastModifiedDate":"2024-03-31"},{"lineNumber":457,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | Financial Advisor | update client\u0027s contact information                                                      |                                                                               |","lastModifiedDate":"2024-04-01"},{"lineNumber":458,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | Financial Advisor | find a client\u0027s contact based on what I remember about the client\u0027s contact information  | do not have to search through the whole list to find a specific client        |","lastModifiedDate":"2024-04-01"},{"lineNumber":459,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | Financial Advisor | filter contact list by categories                                                        | easily find clients based on category                                         |","lastModifiedDate":"2024-03-31"},{"lineNumber":460,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | Financial Advisor | attach a meeting date and time to my client contact                                      | know the next meeting plan with a specific client                             |","lastModifiedDate":"2024-04-01"},{"lineNumber":461,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | Financial Advisor | delete a scheduled meeting                                                               | so that I can update my schedule in the event of a cancelled meeting          |","lastModifiedDate":"2024-03-31"},{"lineNumber":462,"author":{"gitId":"KohGuanZeh"},"content":"| `* * *`  | Financial Advisor | categorize my clients into different categories such as financial plans or relationships |                                                                               |","lastModifiedDate":"2024-03-31"},{"lineNumber":463,"author":{"gitId":"KohGuanZeh"},"content":"| `* *`    | Financial Advisor | view all my meetings for today                                                           | be prepared for my meetings of today                                          |","lastModifiedDate":"2024-03-31"},{"lineNumber":464,"author":{"gitId":"KohGuanZeh"},"content":"| `* *`    | Financial Advisor | filter contact list by meeting date                                                      | find out who I\u0027m meeting on a specific date                                   |","lastModifiedDate":"2024-03-31"},{"lineNumber":465,"author":{"gitId":"KohGuanZeh"},"content":"| `* *`    | Financial Advisor | modify a scheduled meeting\u0027s date and time                                               | update a meeting\u0027s schedule accordingly                                       |","lastModifiedDate":"2024-03-31"},{"lineNumber":466,"author":{"gitId":"KohGuanZeh"},"content":"| `* *`    | Financial Advisor | re-categorize my clients into different categories                                       | reorganize my client\u0027s categories when needed                                 |","lastModifiedDate":"2024-04-01"},{"lineNumber":467,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | New user          | import contact information in bulk to FINDvisor                                          | easily transfer all my client\u0027s contact into FINDvisor                        |","lastModifiedDate":"2024-03-31"},{"lineNumber":468,"author":{"gitId":"KohGuanZeh"},"content":"| `* *`    | Financial Advisor | add a remark about a client                                                              | take note of additional information about a client as required                |","lastModifiedDate":"2024-04-01"},{"lineNumber":469,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | Financial Advisor | add a note about each meeting                                                            | know what the meeting is about                                                |","lastModifiedDate":"2024-03-31"},{"lineNumber":470,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | Financial Advisor | edit a note about each meeting                                                           | update what the meeting is about                                              |","lastModifiedDate":"2024-03-31"},{"lineNumber":471,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | Financial Advisor | schedule recurring meeting plans                                                         | save the effort manually scheduling the meeting each time                     |","lastModifiedDate":"2024-04-01"},{"lineNumber":472,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | Experienced User  | remove past meeting information that is no longer needed in bulk                         | easily keep my contact list and meeting information up to date.               |","lastModifiedDate":"2024-03-31"},{"lineNumber":473,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | Experienced User  | use shorthand commands                                                                   | speed up my workflow                                                          |","lastModifiedDate":"2024-03-31"},{"lineNumber":474,"author":{"gitId":"Javiery3889"},"content":"| `*`      | Experienced User  | set up shortcuts that I can run                                                          | speed up my workflow                                                          |","lastModifiedDate":"2024-02-27"},{"lineNumber":475,"author":{"gitId":"Javiery3889"},"content":"| `*`      | Experienced User  | export my data                                                                           | backup my data                                                                |","lastModifiedDate":"2024-02-27"},{"lineNumber":476,"author":{"gitId":"Javiery3889"},"content":"| `*`      | Experienced User  | import my data                                                                           | restore my data from backup                                                   |","lastModifiedDate":"2024-02-27"},{"lineNumber":477,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | Experienced User  | archive contact data that are not in use, but I still want to keep                       | reduce clutter in the application                                             |","lastModifiedDate":"2024-03-31"},{"lineNumber":478,"author":{"gitId":"KohGuanZeh"},"content":"| `*`      | Experienced User  | archive past meeting data that are not in use, but I still want to keep                  | reduce clutter in the application                                             |","lastModifiedDate":"2024-03-31"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"KohGuanZeh"},"content":"(For all use cases below, the **System** is the `FINDvisor` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-02-26"},{"lineNumber":483,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":484,"author":{"gitId":"KohGuanZeh"},"content":"#### Use case: Edit a person","lastModifiedDate":"2024-04-02"},{"lineNumber":485,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":486,"author":{"gitId":"KohGuanZeh"},"content":"**MSS**","lastModifiedDate":"2024-02-26"},{"lineNumber":487,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":488,"author":{"gitId":"KohGuanZeh"},"content":"1. User requests to list persons.","lastModifiedDate":"2024-02-26"},{"lineNumber":489,"author":{"gitId":"KohGuanZeh"},"content":"2. FINDvisor shows a list of persons.","lastModifiedDate":"2024-02-26"},{"lineNumber":490,"author":{"gitId":"KohGuanZeh"},"content":"3. User requests to edit a specific field(s) of a specified person in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":491,"author":{"gitId":"KohGuanZeh"},"content":"4. FINDvisor edits respective fields of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":492,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":493,"author":{"gitId":"KohGuanZeh"},"content":"    Use case ends.","lastModifiedDate":"2024-02-26"},{"lineNumber":494,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":495,"author":{"gitId":"KohGuanZeh"},"content":"**Extensions**","lastModifiedDate":"2024-02-26"},{"lineNumber":496,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":497,"author":{"gitId":"KohGuanZeh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":498,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":499,"author":{"gitId":"KohGuanZeh"},"content":"    Use case ends.","lastModifiedDate":"2024-02-26"},{"lineNumber":500,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":501,"author":{"gitId":"KohGuanZeh"},"content":"* 3a. FINDvisor detects an error in the given data for editing a person.","lastModifiedDate":"2024-04-02"},{"lineNumber":502,"author":{"gitId":"KohGuanZeh"},"content":"    * 3a1. FINDvisor shows an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":504,"author":{"gitId":"KohGuanZeh"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2024-04-02"},{"lineNumber":505,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":506,"author":{"gitId":"Javiery3889"},"content":"#### Use case: Search for specific persons based on a person\u0027s field","lastModifiedDate":"2024-04-03"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":508,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-04-03"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":510,"author":{"gitId":"Javiery3889"},"content":"1. User requests to find persons based on the entered the search category and keywords.","lastModifiedDate":"2024-04-03"},{"lineNumber":511,"author":{"gitId":"Javiery3889"},"content":"2. FINDvisor displays all persons that contains specified keywords for the specified search category.","lastModifiedDate":"2024-04-03"},{"lineNumber":512,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":513,"author":{"gitId":"Javiery3889"},"content":"    Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":514,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":515,"author":{"gitId":"Javiery3889"},"content":"**Extensions**","lastModifiedDate":"2024-04-03"},{"lineNumber":516,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":517,"author":{"gitId":"Javiery3889"},"content":"* 1a. No persons match the specified keywords.","lastModifiedDate":"2024-04-03"},{"lineNumber":518,"author":{"gitId":"Javiery3889"},"content":"  * 1a1. FINDvisor displays an empty list.","lastModifiedDate":"2024-04-03"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":522,"author":{"gitId":"Javiery3889"},"content":"* 1b. FINDvisor detects an error in specified keywords.","lastModifiedDate":"2024-04-03"},{"lineNumber":523,"author":{"gitId":"Javiery3889"},"content":"  * 1b1. FINDvisor shows an error message and requests for valid keywords from the user.","lastModifiedDate":"2024-04-03"},{"lineNumber":524,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":525,"author":{"gitId":"Javiery3889"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-03"},{"lineNumber":526,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":527,"author":{"gitId":"Javiery3889"},"content":"* 1c. The given category is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":528,"author":{"gitId":"Javiery3889"},"content":"  * 1c1. FINDvisor shows an error message and requests for a valid category from the user.","lastModifiedDate":"2024-04-03"},{"lineNumber":529,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":530,"author":{"gitId":"Javiery3889"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-03"},{"lineNumber":531,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":532,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":533,"author":{"gitId":"KohGuanZeh"},"content":"#### Use case: Delete a person","lastModifiedDate":"2024-04-02"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"KohGuanZeh"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-02-26"},{"lineNumber":538,"author":{"gitId":"KohGuanZeh"},"content":"2.  FINDvisor shows a list of persons.","lastModifiedDate":"2024-02-26"},{"lineNumber":539,"author":{"gitId":"KohGuanZeh"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":540,"author":{"gitId":"KohGuanZeh"},"content":"4.  FINDvisor deletes the person.","lastModifiedDate":"2024-02-26"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"KohGuanZeh"},"content":"* 3a. FINDvisor detects an error in the given data for deleting a person.","lastModifiedDate":"2024-04-02"},{"lineNumber":551,"author":{"gitId":"KohGuanZeh"},"content":"    * 3a1. FINDvisor shows an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"KohGuanZeh"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2024-04-02"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"KohGuanZeh"},"content":"#### Use Case: Scheduling a meeting with a new person","lastModifiedDate":"2024-04-02"},{"lineNumber":556,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":557,"author":{"gitId":"Dethada"},"content":"**MSS**","lastModifiedDate":"2024-02-26"},{"lineNumber":558,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":559,"author":{"gitId":"Dethada"},"content":"1. User adds new person to FINDvisor.","lastModifiedDate":"2024-02-27"},{"lineNumber":560,"author":{"gitId":"Dethada"},"content":"2. User requests to list persons.","lastModifiedDate":"2024-02-27"},{"lineNumber":561,"author":{"gitId":"Dethada"},"content":"3. FINDvisor shows a list of persons.","lastModifiedDate":"2024-02-27"},{"lineNumber":562,"author":{"gitId":"Dethada"},"content":"4. User requests to schedule a meeting with a specific person in the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":563,"author":{"gitId":"Dethada"},"content":"5. Meeting is scheduled.","lastModifiedDate":"2024-02-27"},{"lineNumber":564,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":565,"author":{"gitId":"Dethada"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":566,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":567,"author":{"gitId":"Dethada"},"content":"**Extensions**","lastModifiedDate":"2024-02-26"},{"lineNumber":568,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":569,"author":{"gitId":"KohGuanZeh"},"content":"* 3a. FINDvisor detects an error in the given data for adding a person.","lastModifiedDate":"2024-04-02"},{"lineNumber":570,"author":{"gitId":"KohGuanZeh"},"content":"    * 3a1. FINDvisor shows an error message.","lastModifiedDate":"2024-04-02"},{"lineNumber":571,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":572,"author":{"gitId":"KohGuanZeh"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2024-04-02"},{"lineNumber":573,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":574,"author":{"gitId":"KohGuanZeh"},"content":"* 4a. FINDvisor detects an error in the given data for scheduling a meeting.","lastModifiedDate":"2024-04-02"},{"lineNumber":575,"author":{"gitId":"Dethada"},"content":"    * 4a1. FINDvisor shows an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":576,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":577,"author":{"gitId":"KohGuanZeh"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-04-02"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"KohGuanZeh"},"content":"#### Use case: Update the remark of a person","lastModifiedDate":"2024-04-02"},{"lineNumber":580,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":581,"author":{"gitId":"KohGuanZeh"},"content":"**MSS**","lastModifiedDate":"2024-04-01"},{"lineNumber":582,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":583,"author":{"gitId":"KohGuanZeh"},"content":"1. User requests to list persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":584,"author":{"gitId":"KohGuanZeh"},"content":"2. FINDvisor shows a list of persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":585,"author":{"gitId":"KohGuanZeh"},"content":"3. User requests to update the remark of a specific person in the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":586,"author":{"gitId":"KohGuanZeh"},"content":"4. FINDvisor updates the remark of the person.","lastModifiedDate":"2024-04-01"},{"lineNumber":587,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":588,"author":{"gitId":"KohGuanZeh"},"content":"   Use case ends.","lastModifiedDate":"2024-04-01"},{"lineNumber":589,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":590,"author":{"gitId":"KohGuanZeh"},"content":"**Extensions**","lastModifiedDate":"2024-04-01"},{"lineNumber":591,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":592,"author":{"gitId":"KohGuanZeh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-01"},{"lineNumber":593,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":594,"author":{"gitId":"KohGuanZeh"},"content":"  Use case ends.","lastModifiedDate":"2024-04-01"},{"lineNumber":595,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":596,"author":{"gitId":"KohGuanZeh"},"content":"* 3a. FINDvisor detects an error in the given data for updating a remark.","lastModifiedDate":"2024-04-02"},{"lineNumber":597,"author":{"gitId":"KohGuanZeh"},"content":"    * 3a1. FINDvisor shows an error message.","lastModifiedDate":"2024-04-01"},{"lineNumber":598,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":599,"author":{"gitId":"KohGuanZeh"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2024-04-02"},{"lineNumber":600,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":601,"author":{"gitId":"KohGuanZeh"},"content":"* 3b. User requests to remove the remark.","lastModifiedDate":"2024-04-02"},{"lineNumber":602,"author":{"gitId":"KohGuanZeh"},"content":"    * 3b1. FINDvisor removes the remark of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":603,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":604,"author":{"gitId":"KohGuanZeh"},"content":"      Use case ends.","lastModifiedDate":"2024-04-01"},{"lineNumber":605,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":606,"author":{"gitId":"Arixeyeion"},"content":"#### Use case: Add tags to a person","lastModifiedDate":"2024-04-02"},{"lineNumber":607,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":608,"author":{"gitId":"Arixeyeion"},"content":"**MSS**","lastModifiedDate":"2024-04-02"},{"lineNumber":609,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":610,"author":{"gitId":"Arixeyeion"},"content":"1. User requests to list persons.","lastModifiedDate":"2024-04-02"},{"lineNumber":611,"author":{"gitId":"Arixeyeion"},"content":"2. FINDvisor shows a list of persons.","lastModifiedDate":"2024-04-02"},{"lineNumber":612,"author":{"gitId":"Arixeyeion"},"content":"3. User requests to add tags to a specific person in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":613,"author":{"gitId":"Arixeyeion"},"content":"4. FINDvisor adds specified tags to the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":614,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":615,"author":{"gitId":"Arixeyeion"},"content":"   Use case ends.","lastModifiedDate":"2024-04-02"},{"lineNumber":616,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":617,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-04-02"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":619,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-04-02"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":623,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-04-02"},{"lineNumber":624,"author":{"gitId":"Arixeyeion"},"content":"    * 3a1. FINDvisor shows an error message.","lastModifiedDate":"2024-04-02"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":626,"author":{"gitId":"Arixeyeion"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-02"},{"lineNumber":627,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":628,"author":{"gitId":"Arixeyeion"},"content":"* 3b. No tag is given.","lastModifiedDate":"2024-04-02"},{"lineNumber":629,"author":{"gitId":"Arixeyeion"},"content":"    * 3b1. FINDvisor shows an error message.","lastModifiedDate":"2024-04-02"},{"lineNumber":630,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":631,"author":{"gitId":"Arixeyeion"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-02"},{"lineNumber":632,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":633,"author":{"gitId":"Arixeyeion"},"content":"* 3c. Fields do not comply with stated formats and constraints.","lastModifiedDate":"2024-04-02"},{"lineNumber":634,"author":{"gitId":"Arixeyeion"},"content":"    * 3c1. FINDvisor shows an error message.","lastModifiedDate":"2024-04-02"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-02"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":638,"author":{"gitId":"YuZizhen"},"content":"#### Use case: Delete a tag","lastModifiedDate":"2024-04-02"},{"lineNumber":639,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":640,"author":{"gitId":"YuZizhen"},"content":"**MSS**","lastModifiedDate":"2024-04-01"},{"lineNumber":641,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":642,"author":{"gitId":"YuZizhen"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":643,"author":{"gitId":"YuZizhen"},"content":"2.  FINDvisor shows a list of persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":644,"author":{"gitId":"YuZizhen"},"content":"3.  User requests to delete one or more tags associated with a specific person in the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":645,"author":{"gitId":"YuZizhen"},"content":"4.  FINDvisor deletes the tags associated with the specific person.","lastModifiedDate":"2024-04-01"},{"lineNumber":646,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":647,"author":{"gitId":"YuZizhen"},"content":"    Use case ends.","lastModifiedDate":"2024-04-01"},{"lineNumber":648,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":649,"author":{"gitId":"YuZizhen"},"content":"**Extensions**","lastModifiedDate":"2024-04-01"},{"lineNumber":650,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":651,"author":{"gitId":"YuZizhen"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-01"},{"lineNumber":652,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":653,"author":{"gitId":"YuZizhen"},"content":"  Use case ends.","lastModifiedDate":"2024-04-01"},{"lineNumber":654,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":655,"author":{"gitId":"YuZizhen"},"content":"* 3a. FINDvisor detects an error in the given data for deleting a tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":656,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":657,"author":{"gitId":"YuZizhen"},"content":"    * 3a1. FINDvisor shows an error message.","lastModifiedDate":"2024-04-01"},{"lineNumber":658,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":659,"author":{"gitId":"YuZizhen"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-04-02"},{"lineNumber":660,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":661,"author":{"gitId":"YuZizhen"},"content":"* 4a. FINDvisor detects an error in the given data for deleting a tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":662,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":663,"author":{"gitId":"YuZizhen"},"content":"    * 4a1. FINDvisor shows an error message.","lastModifiedDate":"2024-04-02"},{"lineNumber":664,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":665,"author":{"gitId":"YuZizhen"},"content":"      Use case ends.","lastModifiedDate":"2024-04-01"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":667,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"Arixeyeion"},"content":"2.  Should work without requiring an installer.","lastModifiedDate":"2024-02-26"},{"lineNumber":671,"author":{"gitId":"Arixeyeion"},"content":"3.  Should be packaged into a single jar file.","lastModifiedDate":"2024-02-26"},{"lineNumber":672,"author":{"gitId":"Arixeyeion"},"content":"4.  Should be below the size limit of 100MB for FINDvisor and 15MB for Docs.","lastModifiedDate":"2024-02-26"},{"lineNumber":673,"author":{"gitId":"Arixeyeion"},"content":"5.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-02-26"},{"lineNumber":674,"author":{"gitId":"Arixeyeion"},"content":"6.  Should not depend on a remote server.","lastModifiedDate":"2024-02-26"},{"lineNumber":675,"author":{"gitId":"Arixeyeion"},"content":"7.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-02-26"},{"lineNumber":676,"author":{"gitId":"Arixeyeion"},"content":"8.  Should not cause any resolution-related inconveniences to user.","lastModifiedDate":"2024-02-26"},{"lineNumber":677,"author":{"gitId":"Arixeyeion"},"content":"9.  Should store data locally in a human editable text file without the use of DBMS.","lastModifiedDate":"2024-02-26"},{"lineNumber":678,"author":{"gitId":"Arixeyeion"},"content":"10. Should be used by a single user.","lastModifiedDate":"2024-02-26"},{"lineNumber":679,"author":{"gitId":"Arixeyeion"},"content":"11. Command names should be representative of their actions.","lastModifiedDate":"2024-02-27"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"KohGuanZeh"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS.","lastModifiedDate":"2024-02-26"},{"lineNumber":684,"author":{"gitId":"KohGuanZeh"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others.","lastModifiedDate":"2024-02-26"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"KohGuanZeh"},"content":"   1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2024-02-26"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"YuZizhen"},"content":"### Deleting a tag","lastModifiedDate":"2024-04-01"},{"lineNumber":732,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":733,"author":{"gitId":"YuZizhen"},"content":"1. Deleting a tag while all persons are being shown","lastModifiedDate":"2024-04-01"},{"lineNumber":734,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":735,"author":{"gitId":"YuZizhen"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":736,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":737,"author":{"gitId":"YuZizhen"},"content":"   1. Test case: `delete 1 t/validTag`\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":738,"author":{"gitId":"YuZizhen"},"content":"      Expected: First contact is selected from the list. Tags of the selected contact will be checked.","lastModifiedDate":"2024-04-01"},{"lineNumber":739,"author":{"gitId":"YuZizhen"},"content":"      If validTag exisits in the person\u0027s tags, it will be removed. Successful output will be showned in the status message.","lastModifiedDate":"2024-04-01"},{"lineNumber":740,"author":{"gitId":"YuZizhen"},"content":"      If validTag does not exisit in the person\u0027s tags, failure output will be showned in the status message.","lastModifiedDate":"2024-04-01"},{"lineNumber":741,"author":{"gitId":"YuZizhen"},"content":"      Timestamp in the status bar is updated.","lastModifiedDate":"2024-04-01"},{"lineNumber":742,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":743,"author":{"gitId":"YuZizhen"},"content":"   1. Test case: `delete 0 t/validTag`\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":744,"author":{"gitId":"YuZizhen"},"content":"      Expected: No tag is deleted as 0 is not a valid index for person. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-01"},{"lineNumber":745,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":746,"author":{"gitId":"YuZizhen"},"content":"   1. Test case: `delete 1 t/invalidTag`\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":747,"author":{"gitId":"YuZizhen"},"content":"      Expected: No tag is deleted as the tag is invalid. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-01"},{"lineNumber":748,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":749,"author":{"gitId":"YuZizhen"},"content":"   1. Test case: `delete 1 t/containedTag t/notContainedTag`\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":750,"author":{"gitId":"YuZizhen"},"content":"      Expected: No tag is deleted as one of the targeting tags is not associated with the person. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-01"},{"lineNumber":751,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":752,"author":{"gitId":"YuZizhen"},"content":"   1. Other incorrect delete commands to try: `deletetag`, `deletetag x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":753,"author":{"gitId":"YuZizhen"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-04-01"},{"lineNumber":754,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":755,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Arixeyeion":55,"KohGuanZeh":142,"Javiery3889":92,"Dethada":49,"YuZizhen":74,"-":349}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"   1. Run the `seedu.findvisor.Main` and try a few commands.","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"KohGuanZeh":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"   e.g. `seedu.findvisor.commons.StringUtilTest`","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"   e.g. `seedu.findvisor.storage.StorageManagerTest`","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"   e.g. `seedu.findvisor.logic.LogicManagerTest`","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"KohGuanZeh":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"## Table of Contents","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"{:.no_toc}","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"* ToC","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"## About FINDvisor","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"FINDvisor is a desktop app for **Singapore-based** financial advisors to manage contacts with **Singapore-based mobile phone numbers**. If you **frequently schedule meetings and require quick access to your contacts\u0027 details**, then FINDvisor is the tool for you. It is optimized for typists, enabling individuals who type fast to perform contact management and meeting scheduling tasks efficiently.","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"FINDvisor enables financial advisors to quickly save and retrieve the following contact\u0027s information such as name, phone number, email and physical address. It also allows financial advisors to add a remark and tags to specific contacts where needed, while offering the capability to manage their meeting details with their contacts.","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"1. Download the latest `findvisor.jar` from [here](https://github.com/AY2324S2-CS2103-F15-1/tp/releases).","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Arixeyeion"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FINDvisor.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar findvisor.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Arixeyeion"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to FINDvisor.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"  * e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"  * e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"* Items with `…`​ after them can be used one or more times.\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"  * e.g. `t/TAG…​` can be used as `t/DoeFamily` or `t/PRUactiveCash t/DoeFamily` etc.","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"* Items with separated with `|` requires exactly one item to be matched.","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"  * e.g. `n/NAME|p/PHONE_NUMBER` can only accept `n/John Doe` or `p/91234567` but not both.","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"  * e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"  * e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"KohGuanZeh"},"content":"**:information_source: Notes about input values format:**\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"Arixeyeion"},"content":"* Input values cannot be blank unless otherwise specified.","lastModifiedDate":"2024-04-09"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"* Spacing of values:","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"KohGuanZeh"},"content":"  * Leading and trailing spaces of input values will be removed.","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"KohGuanZeh"},"content":"  * Extra spaces between values will remain unless otherwise specified.","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"KohGuanZeh"},"content":"* Case sensitivity:","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"KohGuanZeh"},"content":"  * All input values are case-sensitive unless otherwise specified.","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"* Duplicate contacts:","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"  * Contacts are considered duplicates if they share the same phone number.","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"* `NAME` format:","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"Arixeyeion"},"content":"  * Can only contain alphanumeric characters and spaces.","lastModifiedDate":"2024-04-09"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"  * Extra spaces between values will be processed as a single space.","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"* `PHONE_NUMBER` format:","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"KohGuanZeh"},"content":"  * Must follow the standard Singapore telephone numbers (i.e. 9XXXXXXX or 8XXXXXXX).","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"  * Spaces between numbers will be ignored.","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"KohGuanZeh"},"content":"* `EMAIL` format:","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"KohGuanZeh"},"content":"  * Must follow the standard email address format (i.e. example@example.com).","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"KohGuanZeh"},"content":"* `ADDRESS` format:","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"KohGuanZeh"},"content":"  * Can only consist of alphanumeric characters, whitespace and the following set of characters: ``#-(),``.","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"KohGuanZeh"},"content":"* `TAG` format:","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"KohGuanZeh"},"content":"  * Can only consist of alphanumeric characters.","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"KohGuanZeh"},"content":"* `DATETIME` format:","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"KohGuanZeh"},"content":"  * Applies to all parameters with `DATETIME` postfix (i.e. `START_DATETIME` and `END_DATETIME`).","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"KohGuanZeh"},"content":"  * Must follow the format `dd-MM-yyyy`T`HH:mm` (i.e. `23-02-2024T14:00`).","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"* `DATE` format:","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"  * Applies to all parameters with `DATE` postfix (i.e.`MEETING_DATE`).","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"  * Must follow the format `dd-MM-yyyy` (i.e. `23-02-2024`).","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"KohGuanZeh"},"content":"* `REMARK` format:","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"KohGuanZeh"},"content":"    * Can only consist of alphanumeric characters, whitespace and the following set of characters: ``!@#$%^\u0026*()_+-{}[]:;\u0027\\\"\u003c\u003e?.,|~`\\``.","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"* `MEETING_REMARK` format:","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"    * Allowed characters are the same as `REMARK` format.","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"    * Maximum length of 200 characters.","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Arixeyeion"},"content":"Adds a person to the contact list in FINDvisor.","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Arixeyeion"},"content":"A person can have any number of tags (including 0).","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Arixeyeion"},"content":"* `add n/Bobby Tay p/9678 5432 e/BobbyTay@gmail.com a/Blk 123 Foo Street 45, #07-89 t/PRUactiveCash`","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"Arixeyeion"},"content":"* `add n/Betsy Crowe t/PRUactiveCash e/betsycrowe@example.com a/Block 82 Marine Parade Central #01-600 p/9876 5432 t/PRUTravellerProtect`","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"Arixeyeion"},"content":"Specifications:","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"Arixeyeion"},"content":"* `p/PHONE_NUMBER` has to be unique from the other contacts in FINDvisor.","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Arixeyeion"},"content":"Shows a list of all persons in the contact list of FINDvisor.","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"KohGuanZeh"},"content":"Edits an existing person\u0027s contact information (name, phone number, email and address) and tags in FINDvisor.","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Javiery3889"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"KohGuanZeh"},"content":"* Edits the person at the specified `INDEX`.","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"KohGuanZeh"},"content":"* The index refers to the index number shown in the current displayed person list.","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"KohGuanZeh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"YuZizhen"},"content":"* Input values will overwrite **all** existing values that were assigned to the specified field.","lastModifiedDate":"2024-03-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"YuZizhen"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2024-03-02"},{"lineNumber":164,"author":{"gitId":"YuZizhen"},"content":"* This command will check for duplicate phone number before edit is executed. If the new phone number is used by another person, the command will not be executed.","lastModifiedDate":"2024-03-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"YuZizhen"},"content":"* `edit 3 n/Bobby Tay e/bobbytay@u.nus.edu` Edits contact displayed at index 3 and changes the name of the contact to `Bobby Tay` and email to `bobbytay@u.nus.edu` respectively.","lastModifiedDate":"2024-03-02"},{"lineNumber":168,"author":{"gitId":"YuZizhen"},"content":"* `edit 1 t/PRUActiveSaverIII t/PRUActiveCash` Edits contact displayed at index 1 to change its tags to only `PRUActiveSaverIII` and `PRUActiveCash`. It will remove all other previous tags that are previously associated with the contact.","lastModifiedDate":"2024-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Javiery3889"},"content":"### Searching persons by person\u0027s information: `find`","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"Javiery3889"},"content":"Finds persons that contains specified keywords based on **a specified category** of a person\u0027s information.","lastModifiedDate":"2024-04-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"Javiery3889"},"content":"Format:`find n/NAME|e/EMAIL|p/PHONE_NUMBER|a/ADDRESS|r/REMARK|m/MEETING_DATE`\u003cbr\u003e`|mr/MEETING_REMARK|t/TAG…`\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Javiery3889"},"content":"* **Only one category can be specified** and searched for any instance of the `find` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":177,"author":{"gitId":"Javiery3889"},"content":"* Specified keywords **must not be blank**.","lastModifiedDate":"2024-04-08"},{"lineNumber":178,"author":{"gitId":"Javiery3889"},"content":"* User input will be validated **only** for `find m/MEETING_DATE` based on the `DATE` format.","lastModifiedDate":"2024-04-08"},{"lineNumber":179,"author":{"gitId":"Javiery3889"},"content":"  * For other categories, user input **does not have to conform** to the corresponding parameter format, e.g. `find p/John`, however no persons will be matched.","lastModifiedDate":"2024-04-08"},{"lineNumber":180,"author":{"gitId":"Javiery3889"},"content":"* The search checks if a person\u0027s information **contains** the keyword specified, e.g. `find n/Ali` will match `Alice` and `Alicia Tay`.","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"Javiery3889"},"content":"* The search is **case-insensitive**. e.g `find n/hans` will match `Hans`.","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"Javiery3889"},"content":"* Order of keywords matter. e.g. `find n/Doe John` will **not match** `John Doe`.","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"Javiery3889"},"content":"* Multiple keywords can be specified for tags **only**.","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"Javiery3889"},"content":"  * Persons matching **at least** one of the specified tag keywords will be returned. e.g. `find t/PRUActiveCash t/friends` returns all persons with tags containing `PRUActiveCash` or `friends`.","lastModifiedDate":"2024-04-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"Javiery3889"},"content":"* `find n/Alice` returns all persons with name containing `Alice`.","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"Javiery3889"},"content":"* `find p/91234567` returns person with phone number `91234567`.","lastModifiedDate":"2024-02-27"},{"lineNumber":189,"author":{"gitId":"Javiery3889"},"content":"* `find mr/online meeting` returns all persons with meeting remark containing `online meeting`.","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"Javiery3889"},"content":"* `find m/23-10-2024` returns all persons with meetings on the date `23-10-2024`.","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Arixeyeion"},"content":"Deletes the specified person from the contact list of FINDvisor.","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"YuZizhen"},"content":"* The delete command only supports the deletion of **one person** at a time.","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Arixeyeion"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the contact list of FINDvisor.","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"Dethada"},"content":"### Scheduling a meeting : `schedule`","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"Dethada"},"content":"Schedules a meeting with the specified person.","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"Dethada"},"content":"Format: `schedule INDEX s/START_DATETIME e/END_DATETIME [mr/MEETING_REMARK]`","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":213,"author":{"gitId":"Dethada"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-02-26"},{"lineNumber":214,"author":{"gitId":"Dethada"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-26"},{"lineNumber":215,"author":{"gitId":"Dethada"},"content":"* `START_DATETIME` must be after the system\u0027s current datetime.","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"Dethada"},"content":"* `END_DATETIME` must be after `START_DATETIME`","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"Javiery3889"},"content":"* There can be **at most** one scheduled meeting with a person.","lastModifiedDate":"2024-03-15"},{"lineNumber":218,"author":{"gitId":"Dethada"},"content":"* If `MEETING_REMARK` is empty or consists entirely of whitespace characters, **no meeting remark will be added**.","lastModifiedDate":"2024-04-09"},{"lineNumber":219,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":220,"author":{"gitId":"Dethada"},"content":"Examples:","lastModifiedDate":"2024-02-26"},{"lineNumber":221,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":222,"author":{"gitId":"Dethada"},"content":"* `schedule 1 s/23-02-2024T16:00 e/23-02-2024T17:00 mr/online meeting` schedules a meeting with the person at index 1 from 23-02-2024 16:00 to 23-02-2024 17:00 with the remark `online meeting`.","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"Dethada"},"content":"* `schedule 1 s/23-02-2024T16:00 e/23-02-2024T17:00` schedules a meeting with the person at index 1 from 23-02-2024 16:00 to 23-02-2024 17:00.","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":225,"author":{"gitId":"KohGuanZeh"},"content":"### Unscheduling a meeting : `unschedule`","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"KohGuanZeh"},"content":"Unschedules a meeting with the specified person.","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"KohGuanZeh"},"content":"Format: `unschedule INDEX`","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"Dethada"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"Dethada"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"Dethada"},"content":"* Specified person must have a meeting scheduled.","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"Dethada"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"KohGuanZeh"},"content":"* `unschedule 1` unschedules the meeting with the person at index 1.","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":239,"author":{"gitId":"KohGuanZeh"},"content":"### Rescheduling a meeting : `reschedule`","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":241,"author":{"gitId":"KohGuanZeh"},"content":"Allows the currently scheduled meeting details to be edited.","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"KohGuanZeh"},"content":"Format: `reschedule INDEX [s/START_DATETIME] [e/END_DATETIME] [mr/MEETING_REMARK]`","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":245,"author":{"gitId":"Dethada"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-02-26"},{"lineNumber":246,"author":{"gitId":"Dethada"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-26"},{"lineNumber":247,"author":{"gitId":"Javiery3889"},"content":"* Specified person must have a meeting scheduled.","lastModifiedDate":"2024-03-15"},{"lineNumber":248,"author":{"gitId":"KohGuanZeh"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"KohGuanZeh"},"content":"* Input values will overwrite existing value that were assigned to the specified field.","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"KohGuanZeh"},"content":"* `START_DATETIME` must be after the system\u0027s current datetime.","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"KohGuanZeh"},"content":"* `END_DATETIME` must be after `START_DATETIME`","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"Dethada"},"content":"* If `MEETING_REMARK` is empty or consists entirely of whitespace characters, the command will **remove the existing meeting remark**.","lastModifiedDate":"2024-04-09"},{"lineNumber":253,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":254,"author":{"gitId":"Dethada"},"content":"Examples:","lastModifiedDate":"2024-02-26"},{"lineNumber":255,"author":{"gitId":"KohGuanZeh"},"content":"* `reschedule 1 s/23-02-2024T16:00 e/23-02-2024T17:00` Reschedules the meeting with the person at index 1 to start at 23-02-2024 16:00 and end at 23-02-2024 17:00.","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"KohGuanZeh"},"content":"* `reschedule 1 mr/online meeting` Changes the meeting remark of the meeting with the person at index 1 to `online meeting`.","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":258,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"KohGuanZeh"},"content":"### Update remark of a person: `remark`","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"KohGuanZeh"},"content":"Updates the remark of a specified person.","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":264,"author":{"gitId":"KohGuanZeh"},"content":"This command is useful for adding additional information about a person, such as their birthday or financial goals,","lastModifiedDate":"2024-04-01"},{"lineNumber":265,"author":{"gitId":"KohGuanZeh"},"content":"that is not covered by a person\u0027s contact information.","lastModifiedDate":"2024-04-01"},{"lineNumber":266,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":267,"author":{"gitId":"KohGuanZeh"},"content":"Format: `remark INDEX r/[REMARK]`","lastModifiedDate":"2024-04-08"},{"lineNumber":268,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":269,"author":{"gitId":"KohGuanZeh"},"content":"* Updates the remark of a person at the specified `INDEX`.","lastModifiedDate":"2024-04-01"},{"lineNumber":270,"author":{"gitId":"KohGuanZeh"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-01"},{"lineNumber":271,"author":{"gitId":"KohGuanZeh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-01"},{"lineNumber":272,"author":{"gitId":"KohGuanZeh"},"content":"* If there is an existing remark, it will be overwritten with the new `REMARK`.","lastModifiedDate":"2024-04-01"},{"lineNumber":273,"author":{"gitId":"KohGuanZeh"},"content":"* If `REMARK` is empty or consists entirely of whitespace characters, the command will **remove the existing remark**.","lastModifiedDate":"2024-04-08"},{"lineNumber":274,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":275,"author":{"gitId":"KohGuanZeh"},"content":"Examples:","lastModifiedDate":"2024-04-01"},{"lineNumber":276,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":277,"author":{"gitId":"KohGuanZeh"},"content":"* `remark 1 r/Plans to own a house by age 35` updates the remark of the person at index 1 to `Plans to own a house by age 35`.","lastModifiedDate":"2024-04-01"},{"lineNumber":278,"author":{"gitId":"KohGuanZeh"},"content":"* `remark 2 r/` updates the remark of the person at index 2 to be empty.","lastModifiedDate":"2024-04-01"},{"lineNumber":279,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":280,"author":{"gitId":"Arixeyeion"},"content":"### Adding tags to a person : `addtag`","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"Arixeyeion"},"content":"Adds 1 or more tags to a specified person from the contact list of FINDvisor.","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":284,"author":{"gitId":"KohGuanZeh"},"content":"This command makes it easier to add tags to a person without having to re-type all existing tags using the `edit` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"Arixeyeion"},"content":"Format: `addtag INDEX t/TAG...`","lastModifiedDate":"2024-04-02"},{"lineNumber":287,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"Arixeyeion"},"content":"* Adds 1 or more tags to the person at the specified `INDEX`","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"Arixeyeion"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":290,"author":{"gitId":"Arixeyeion"},"content":"* The index **must be a positive integer** 1, 2, 3,...","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"KohGuanZeh"},"content":"* At least 1 `TAG` must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"Arixeyeion"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"Arixeyeion"},"content":"* `list` followed by `addtag 1 t/PRUSafe365` adds `PRUSafe365` to the 1st person in the contact list of FINDvisor.","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"Arixeyeion"},"content":"* `find n/Holly` followed by `addtag 1 t/PRUSafe365 t/PRUGrowth` adds both `PRUSafe365` and  `PRUGrowth` to the 1st person in the results of the `find` command.","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"KohGuanZeh"},"content":"### Deleting tags from a person : `deletetag`","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":300,"author":{"gitId":"KohGuanZeh"},"content":"Deletes 1 or more tags from a specified person from the contact list of FINDvisor.","lastModifiedDate":"2024-04-04"},{"lineNumber":301,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"KohGuanZeh"},"content":"This command makes it easier to remove tags from a person without having to re-type all tags that should be kept using the `edit` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":303,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":304,"author":{"gitId":"KohGuanZeh"},"content":"Format: `deletetag INDEX t/TAG...`","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"KohGuanZeh"},"content":"* Deletes 1 or more tags from the person at the specified `INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"YuZizhen"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"YuZizhen"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"KohGuanZeh"},"content":"* At least 1 `TAG` must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"KohGuanZeh"},"content":"* Specified person **must have all** the specified `TAG`.","lastModifiedDate":"2024-04-04"},{"lineNumber":311,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"YuZizhen"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":313,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":314,"author":{"gitId":"YuZizhen"},"content":"* `deletetag 1 t/friends t/family` deletes the tags `friends` and  `family` of the person at index 1 in the contact list of FINDvisor.","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"YuZizhen"},"content":"* `find n/Alex` followed by `deletetag 1 t/PRUSafe365 t/PRUGrowth` deletes both `PRUSafe365` and  `PRUGrowth` to the 1st person in the results of the `find` command.","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"Arixeyeion"},"content":"Clears all entries from the contact list of FINDvisor.","lastModifiedDate":"2024-02-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":322,"author":{"gitId":"KohGuanZeh"},"content":"FINDvisor will **not prompt for confirmation** and will result in **permanent deletion of all contacts** in FINDvisor.","lastModifiedDate":"2024-04-09"},{"lineNumber":323,"author":{"gitId":"KohGuanZeh"},"content":"This action is **irreversible** and there will be no way to retrieve the data unless there is a backup copy of the JSON data file.","lastModifiedDate":"2024-04-09"},{"lineNumber":324,"author":{"gitId":"KohGuanZeh"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":336,"author":{"gitId":"KohGuanZeh"},"content":"### Viewing help : `help`","lastModifiedDate":"2024-04-03"},{"lineNumber":337,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":338,"author":{"gitId":"KohGuanZeh"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-03"},{"lineNumber":339,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":340,"author":{"gitId":"KohGuanZeh"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":341,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":342,"author":{"gitId":"KohGuanZeh"},"content":"Format: `help`","lastModifiedDate":"2024-04-03"},{"lineNumber":343,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":344,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"Arixeyeion"},"content":"FINDvisor data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-27"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":350,"author":{"gitId":"Dethada"},"content":"FINDvisor data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Directly editing the data file is not officially supported, advanced users can edit the data file at their own risk.","lastModifiedDate":"2024-04-10"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"Arixeyeion"},"content":"If your changes to the data file makes its format invalid, FINDvisor will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":354,"author":{"gitId":"Arixeyeion"},"content":"Furthermore, certain edits can cause the FINDvisor to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Arixeyeion"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FINDvisor home folder.","lastModifiedDate":"2024-02-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":369,"author":{"gitId":"KohGuanZeh"},"content":"2. **When adding a tag with many characters**, the text for the tag does not wrap and will go off-screen. While FINDvisor does not impose a character length limit, for the optimal experience, it is recommended to use tags of short character lengths. ","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":373,"author":{"gitId":"KohGuanZeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"KohGuanZeh"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2024-04-03"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"KohGuanZeh"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-04-03"},{"lineNumber":382,"author":{"gitId":"KohGuanZeh"},"content":"**Find** | `find n/NAME|e/EMAIL|p/PHONE_NUMBER|a/ADDRESS|r/REMARK`\u003cbr\u003e`|m/MEETING_DATE|mr/MEETING_REMARK|t/TAG…`\u003cbr\u003e e.g. `find n/Alice Tan`","lastModifiedDate":"2024-04-03"},{"lineNumber":383,"author":{"gitId":"KohGuanZeh"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g. `delete 3`","lastModifiedDate":"2024-04-03"},{"lineNumber":384,"author":{"gitId":"KohGuanZeh"},"content":"**Schedule** | `schedule INDEX s/START_DATETIME e/END_DATETIME [mr/MEETING_REMARK]`\u003cbr\u003e e.g. `schedule 1 s/23-02-2024T16:00 e/23-02-2024T17:00 mr/online meeting`","lastModifiedDate":"2024-04-03"},{"lineNumber":385,"author":{"gitId":"KohGuanZeh"},"content":"**Unschedule** | `unschedule INDEX`\u003cbr\u003e e.g. `unschedule 1`","lastModifiedDate":"2024-04-03"},{"lineNumber":386,"author":{"gitId":"KohGuanZeh"},"content":"**Reschedule** | `reschedule INDEX [s/START_DATETIME] [e/END_DATETIME] [mr/MEETING_REMARK]`\u003cbr\u003e e.g. `reschedule 1 s/23-02-2024T16:00 e/23-02-2024T17:00`","lastModifiedDate":"2024-04-03"},{"lineNumber":387,"author":{"gitId":"KohGuanZeh"},"content":"**Remark** | `remark INDEX r/[REMARK]`\u003cbr\u003e e.g. `remark 1 r/Plans to own a house by age 35`","lastModifiedDate":"2024-04-08"},{"lineNumber":388,"author":{"gitId":"KohGuanZeh"},"content":"**Add Tag** | `addtag INDEX t/TAG...`\u003cbr\u003e e.g. `addtag 1 t/PRUSafe365` \u003cbr\u003e `addtag 1 t/PRUSafe365 t/PRUGrowth`","lastModifiedDate":"2024-04-03"},{"lineNumber":389,"author":{"gitId":"KohGuanZeh"},"content":"**Delete Tag** | `deletetag INDEX t/TAG...`\u003cbr\u003e e.g. `deletetag 1 t/friends t/family`","lastModifiedDate":"2024-04-03"},{"lineNumber":390,"author":{"gitId":"KohGuanZeh"},"content":"**Clear** | `clear`","lastModifiedDate":"2024-04-03"},{"lineNumber":391,"author":{"gitId":"Dethada"},"content":"**Exit** | `exit`","lastModifiedDate":"2024-02-27"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"Arixeyeion":37,"KohGuanZeh":123,"Javiery3889":34,"Dethada":41,"YuZizhen":17,"-":140}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Javiery3889"},"content":"    content: \"FINDvisor\";","lastModifiedDate":"2024-02-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Javiery3889":1,"-":294}},{"path":"docs/diagrams/AddTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Arixeyeion"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Arixeyeion"},"content":"!include style.puml","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Arixeyeion"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Arixeyeion"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Arixeyeion"},"content":"participant \":AddTagCommandParser\" as AddTagCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"participant \"ParserUtil\" as ParserUtil \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Arixeyeion"},"content":"participant \"a:AddTagCommand\" as AddTagCommand LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Arixeyeion"},"content":"participant \"AddTagCommand\" as AddTagCommandStatic \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Arixeyeion"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Arixeyeion"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Arixeyeion"},"content":"[-\u003e LogicManager : execute(\"addtag 1 t/validTag1 t/validTag2\")","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Arixeyeion"},"content":"activate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Arixeyeion"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addtag 1 t/validTag1 t/validTag2\")","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Arixeyeion"},"content":"create AddTagCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Arixeyeion"},"content":"AddressBookParser -\u003e AddTagCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":"activate AddTagCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"deactivate AddTagCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Arixeyeion"},"content":"AddressBookParser -\u003e AddTagCommandParser : parse(\"addtag 1 t/validTag1 t/validTag2\")","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Arixeyeion"},"content":"activate AddTagCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Arixeyeion"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Arixeyeion"},"content":"ParserUtil --\u003e AddTagCommandParser : index","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommandParser -\u003e ParserUtil : parseTags(\"t/validTag1 t/validTag2\")","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"ParserUtil --\u003e AddTagCommandParser : tagSet","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"Arixeyeion"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"create AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommandParser -\u003e AddTagCommand : addTagCommand(index, tagSet)","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Arixeyeion"},"content":"activate AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommand --\u003e AddTagCommandParser : a","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Arixeyeion"},"content":"deactivate AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Arixeyeion"},"content":"deactivate AddTagCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Arixeyeion"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Arixeyeion"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Arixeyeion"},"content":"destroy AddTagCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Arixeyeion"},"content":"LogicManager -\u003e AddTagCommand : execute(m)","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Arixeyeion"},"content":"activate AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Arixeyeion"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Arixeyeion"},"content":"Model --\u003e AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Arixeyeion"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommand -\u003e AddTagCommandStatic : addTagsToPerson(personFilteredByIndex, tagSet)","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"Arixeyeion"},"content":"activate AddTagCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommandStatic --\u003e AddTagCommand : personWithAddedTags","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"Arixeyeion"},"content":"deactivate AddTagCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommand -\u003e Model : setPerson(personFilteredByIndex, personWithAddedTags)","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Arixeyeion"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Arixeyeion"},"content":"Model --\u003e AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Arixeyeion"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommand -\u003e Model: updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Arixeyeion"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"Arixeyeion"},"content":"Model --\u003e AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"Arixeyeion"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Arixeyeion"},"content":"create CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommand -\u003e CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"Arixeyeion"},"content":"activate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"Arixeyeion"},"content":"CommandResult --\u003e AddTagCommand : r","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"Arixeyeion"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"Arixeyeion"},"content":"AddTagCommand --\u003e LogicManager: r","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"Arixeyeion"},"content":"deactivate AddTagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"Arixeyeion"},"content":"[\u003c-- LogicManager: r","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"Arixeyeion"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"Arixeyeion"},"content":"destroy AddTagCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"Arixeyeion"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Arixeyeion":101}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"destroy DeleteCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KohGuanZeh":3,"-":68}},{"path":"docs/diagrams/DeleteTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuZizhen"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"YuZizhen"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"YuZizhen"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"YuZizhen"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"YuZizhen"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"YuZizhen"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"YuZizhen"},"content":"participant \":DeleteTagCommandParser\" as DeleteTagCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"participant \"ParserUtil\" as ParserUtil \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"YuZizhen"},"content":"participant \"d:DeleteTagCommand\" as DeleteTagCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"participant \"DeleteTagCommand\" as DeleteTagCommandStatic \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"YuZizhen"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"YuZizhen"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"YuZizhen"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"YuZizhen"},"content":"[-\u003e LogicManager : execute(\"deletetag 1 t/validTag\")","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"YuZizhen"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"YuZizhen"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteTag 1 t/validTag\")","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"YuZizhen"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"YuZizhen"},"content":"create DeleteTagCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"YuZizhen"},"content":"AddressBookParser -\u003e DeleteTagCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"YuZizhen"},"content":"activate DeleteTagCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"YuZizhen"},"content":"DeleteTagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"YuZizhen"},"content":"deactivate DeleteTagCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"YuZizhen"},"content":"AddressBookParser -\u003e DeleteTagCommandParser : parse(\"deleteTag 1 t/validTag\")","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"YuZizhen"},"content":"activate DeleteTagCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"DeleteTagCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"ParserUtil --\u003e DeleteTagCommandParser : index","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"DeleteTagCommandParser -\u003e ParserUtil : parseTags(\"t/validTag\")","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"ParserUtil --\u003e DeleteTagCommandParser : targetTags","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"YuZizhen"},"content":"create DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"DeleteTagCommandParser -\u003e DeleteTagCommand : DeleteTagCommand(index, targetTags)","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"YuZizhen"},"content":"activate DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"YuZizhen"},"content":"DeleteTagCommand --\u003e DeleteTagCommandParser : d","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"YuZizhen"},"content":"deactivate DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"YuZizhen"},"content":"DeleteTagCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"YuZizhen"},"content":"deactivate DeleteTagCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"YuZizhen"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"YuZizhen"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"YuZizhen"},"content":"destroy DeleteTagCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"YuZizhen"},"content":"LogicManager -\u003e DeleteTagCommand : execute(m)","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"YuZizhen"},"content":"activate DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"YuZizhen"},"content":"DeleteTagCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"YuZizhen"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"YuZizhen"},"content":"Model --\u003e DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"YuZizhen"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"KohGuanZeh"},"content":"DeleteTagCommand -\u003e DeleteTagCommandStatic : deleteTagFromPerson(personFilteredByIndex, targetTag)","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"KohGuanZeh"},"content":"activate DeleteTagCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"KohGuanZeh"},"content":"DeleteTagCommandStatic --\u003e DeleteTagCommand : editedPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"deactivate DeleteTagCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"YuZizhen"},"content":"DeleteTagCommand -\u003e Model : setPerson(personFilteredByIndex, editedPerson)","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"YuZizhen"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"YuZizhen"},"content":"Model --\u003e DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"YuZizhen"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"YuZizhen"},"content":"DeleteTagCommand -\u003e Model: updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"YuZizhen"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"YuZizhen"},"content":"Model --\u003e DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"YuZizhen"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"create CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"DeleteTagCommand -\u003e CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"activate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"KohGuanZeh"},"content":"CommandResult --\u003e DeleteTagCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"DeleteTagCommand --\u003e LogicManager: r","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"YuZizhen"},"content":"deactivate DeleteTagCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"KohGuanZeh"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"KohGuanZeh"},"content":"destroy DeleteTagCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"YuZizhen"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"KohGuanZeh":27,"YuZizhen":75}},{"path":"docs/diagrams/EditSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"participant \"d:EditCommandDescriptor\" as EditCommandDescriptor LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"participant \"c:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"participant \"EditCommand\" as EditCommandStatic \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"participant \"m:PersonList\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"participant \"s:Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"end box","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"[-\u003e LogicManager : execute(\"edit 1 n/Alex Yeoh\")","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 1 n/Alex Yeoh\")","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"1 n/Alex Yeoh\")","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"create EditCommandDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"EditCommandParser -\u003e EditCommandDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"activate EditCommandDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"EditCommandDescriptor --\u003e EditCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"deactivate EditCommandDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"create EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"EditCommandParser -\u003e EditCommand : EditCommand(1, d)","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"activate EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"EditCommand --\u003e EditCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"EditCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"destroy EditCommandDescriptor","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e EditCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"activate EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"EditCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KohGuanZeh"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KohGuanZeh"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"KohGuanZeh"},"content":"EditCommand -\u003e EditCommandStatic : createEditedPerson(personToEdit, d)","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"KohGuanZeh"},"content":"activate EditCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"EditCommandStatic --\u003e EditCommand : editedPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"deactivate EditCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KohGuanZeh"},"content":"EditCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"Model --\u003e EditCommand :","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"KohGuanZeh"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KohGuanZeh"},"content":"EditCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"KohGuanZeh"},"content":"activate Model","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"Model --\u003e EditCommand:","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"deactivate Model","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"KohGuanZeh"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"KohGuanZeh"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"EditCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e Model : getAddressBook()","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"KohGuanZeh"},"content":"activate Model","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"KohGuanZeh"},"content":"Model --\u003e LogicManager : addressBook","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"KohGuanZeh"},"content":"deactivate Model","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e Storage : saveAddressBook(addressBook)","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"KohGuanZeh"},"content":"activate Storage","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"KohGuanZeh"},"content":"Storage --\u003e LogicManager :","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"KohGuanZeh"},"content":"deactivate Storage","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"KohGuanZeh"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"KohGuanZeh"},"content":"destroy EditCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"KohGuanZeh"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"KohGuanZeh":117}},{"path":"docs/diagrams/EditSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Arixeyeion"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Arixeyeion"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Arixeyeion"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Arixeyeion"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Arixeyeion"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"participant \":ObservableList\" as ObservableList MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Arixeyeion"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Arixeyeion"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Arixeyeion"},"content":"[-\u003e ModelManager : getFilteredPersonList()","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"activate ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"[\u003c-- ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Arixeyeion"},"content":"deactivate ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Arixeyeion"},"content":"[-\u003e ModelManager: setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Arixeyeion"},"content":"activate ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Arixeyeion"},"content":"ModelManager -\u003e AddressBook : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"activate AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Arixeyeion"},"content":"AddressBook -\u003e UniquePersonList : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Arixeyeion"},"content":"activate UniquePersonList","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Arixeyeion"},"content":"UniquePersonList -\u003e ObservableList : indexOf(personToEdit)","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Arixeyeion"},"content":"activate ObservableList","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"ObservableList --\u003e UniquePersonList : index","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Arixeyeion"},"content":"UniquePersonList -\u003e ObservableList : set(index, editedPerson)","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Arixeyeion"},"content":"ObservableList --\u003e UniquePersonList","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"deactivate ObservableList","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"UniquePersonList --\u003e AddressBook","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"deactivate UniquePersonList","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Arixeyeion"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Arixeyeion"},"content":"deactivate AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"[\u003c-- ModelManager","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Arixeyeion"},"content":"deactivate ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Arixeyeion"},"content":"[-\u003e ModelManager : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Arixeyeion"},"content":"activate ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Arixeyeion"},"content":"ModelManager -\u003e FilteredList : setPredicate(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Arixeyeion"},"content":"activate FilteredList","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Arixeyeion"},"content":"FilteredList --\u003e ModelManager","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Arixeyeion"},"content":"deactivate FilteredList","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Arixeyeion"},"content":"[\u003c-- ModelManager","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"deactivate ModelManager","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"[-\u003e ModelManager : getAddressBook()","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"activate ModelManager","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c-- ModelManager : addressBook","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"Arixeyeion"},"content":"deactivate ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Arixeyeion"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Arixeyeion":64,"KohGuanZeh":6}},{"path":"docs/diagrams/EditSequenceDiagram-Storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"@startuml","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"!include style.puml","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"participant \":JsonAddressBookStorage\" as JsonAddressBookStorage STORAGE_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"end box","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"[-\u003e StorageManager : saveAddressBook(addressBook)","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"activate StorageManager","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"StorageManager -\u003e JsonAddressBookStorage : saveAddressBook(addressBook, filePath)","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"activate JsonAddressBookStorage","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"JsonAddressBookStorage --\u003e StorageManager","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"deactivate JsonAddressBookStorage","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c-- StorageManager","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"deactivate StorageManager","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"@enduml","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"KohGuanZeh":21}},{"path":"docs/diagrams/FindMeetingDateSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"!include style.puml","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"participant \"ParserUtil\" as ParserUtil \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"participant \"c:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"participant \"p:PersonMeetingDatePredicate\" as PersonMeetingDatePredicate MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"[-\u003e LogicManager : execute(find)","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"activate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(find)","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"create FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"activate FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -\u003e AddressBookParser","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"AddressBookParser -\u003e FindCommandParser : parse(argument)","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"activate FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -\u003e ParserUtil : parseMeetingDate(value)","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"ParserUtil -\u003e FindCommandParser : d","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"create PersonMeetingDatePredicate","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -\u003e PersonMeetingDatePredicate : PersonMeetingDatePredicate(d)","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"activate PersonMeetingDatePredicate","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"PersonMeetingDatePredicate --\u003e FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"deactivate PersonMeetingDatePredicate","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"create FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(p)","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"activate FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser : c","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e FindCommand : execute(m)","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"activate FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"deactivate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"create CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"activate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"FindCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"destroy FindCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"KohGuanZeh":5,"Javiery3889":77}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"@startuml","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"!include style.puml","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"participant \"c:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"end box","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"participant \"p:PersonXYZPredicate\" as PersonXYZPredicate MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"end box","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"[-\u003e LogicManager : execute(find)","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"activate LogicManager","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(find)","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -\u003e AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"AddressBookParser -\u003e FindCommandParser : parse(argument)","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"create PersonXYZPredicate","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -\u003e PersonXYZPredicate : PersonXYZPredicate(value)","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"activate PersonXYZPredicate","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"PersonXYZPredicate --\u003e FindCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"deactivate PersonXYZPredicate","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"create FindCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(p)","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"activate FindCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser : c","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e FindCommand : execute(m)","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"activate FindCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"activate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"deactivate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"create CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"activate CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"destroy FindCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"@enduml","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"KohGuanZeh":7,"Javiery3889":72}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"Class Meeting","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"ModelManager -\u003e \"1\" AddressBook","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"ModelManager -\u003e \"1\" UserPrefs","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"Person *--\u003e \"0..1\" Meeting","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"Person -[hidden]right--\u003e I","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"UniquePersonList -[hidden]left-\u003e I","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"Tag -[hidden]right-\u003e Meeting","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"ModelManager -\u003e \"~* filtered\" Person","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Javiery3889":9,"-":49}},{"path":"docs/diagrams/RemarkSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"participant \":RemarkCommandParser\" as RemarkCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"participant \"ParserUtil\" as ParserUtil \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"participant \"c:RemarkCommand\" as RemarkCommand LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"participant \"r:Remark\" as Remark MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"[-\u003e LogicManager : execute(\"remark 1 r/\" + value)","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"activate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"remark 1 r/\" + value)","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"create RemarkCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"AddressBookParser -\u003e RemarkCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"activate RemarkCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"RemarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"deactivate RemarkCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"AddressBookParser -\u003e RemarkCommandParser : parse(\"1 r/\" + value)","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"activate RemarkCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"RemarkCommandParser -\u003e ParserUtil : parseRemark(value)","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"alt value is not blank","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"create Remark","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"ParserUtil -\u003e Remark : new Remark(value)","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"activate Remark","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"Remark --\u003e ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"deactivate Remark","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"ParserUtil --\u003e RemarkCommandParser : Optional.of(r)","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"else value is blank","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"ParserUtil --\u003e RemarkCommandParser : Optional.Empty()","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"end","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"create RemarkCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"RemarkCommandParser -\u003e RemarkCommand : RemarkCommand(1, optionalRemark)","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"activate RemarkCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"RemarkCommand --\u003e RemarkCommandParser : c","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"deactivate RemarkCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"RemarkCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"deactivate RemarkCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"RemarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"destroy RemarkCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"[ \u003c-[hidden]- LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"KohGuanZeh":66}},{"path":"docs/diagrams/ScheduleMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"@startuml","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"!include style.puml","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"participant \":ScheduleCommandParser\" as ScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"participant \"s:ScheduleCommand\" as ScheduleCommand LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"participant \"ScheduleCommand\" as ScheduleCommandStatic \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"end box","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"participant \":Meeting\" as Meeting MODEL_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"end box","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"[-\u003e LogicManager : execute(schedule)","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"activate LogicManager","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(schedule)","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"create ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"AddressBookParser -\u003e ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"ScheduleCommandParser -\u003e AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"AddressBookParser -\u003e ScheduleCommandParser : parse(arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"create Meeting","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"ScheduleCommandParser -\u003e Meeting","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"activate Meeting","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"Meeting --\u003e ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"deactivate Meeting","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"create ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"ScheduleCommandParser -\u003e ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"activate ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"ScheduleCommand --\u003e ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"ScheduleCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"ScheduleCommandParser -[hidden]-\u003e AddressBookParser : s","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"destroy ScheduleCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e ScheduleCommand : execute(m)","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"activate ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"ScheduleCommand -\u003e Model : getFilteredPersonLisAt()","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"activate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"deactivate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"ScheduleCommand -\u003e ScheduleCommandStatic : createEditedPerson(personToEdit, meeting)","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"activate ScheduleCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"KohGuanZeh"},"content":"ScheduleCommandStatic --\u003e ScheduleCommand : editedPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"deactivate ScheduleCommandStatic","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"ScheduleCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"activate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"deactivate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"ScheduleCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"activate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"deactivate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"KohGuanZeh"},"content":"create CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"KohGuanZeh"},"content":"ScheduleCommand -\u003e CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"KohGuanZeh"},"content":"activate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"CommandResult --\u003e ScheduleCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"ScheduleCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"destroy ScheduleCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"@enduml","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"KohGuanZeh":21,"Dethada":76}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"Class JsonAdaptedMeeting","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"JsonAdaptedPerson ---\u003e \"1\" JsonAdaptedMeeting","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Dethada":2,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"Class MeetingListPanel","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"Class MeetingCard","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"MainWindow *-down-\u003e \"1\" MeetingListPanel","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"MeetingListPanel -down-\u003e \"*\" MeetingCard","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"MainWindow -up-|\u003e UiPart","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"MeetingListPanel --|\u003e UiPart","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"MeetingCard ---|\u003e UiPart","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"MeetingCard ...\u003e Model","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"PersonListPanel -[hidden]right- MeetingListPanel","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KohGuanZeh":10,"-":59}},{"path":"docs/diagrams/UndoSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"LogicManager -\u003e UndoCommand : execute(m)","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"destroy UndoCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KohGuanZeh":4,"-":42}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"title: FINDvisor","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103-F15-1/tp/actions)","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-F15-1/tp/graph/badge.svg?token\u003dvAQ9m3CKxP)](https://codecov.io/gh/AY2324S2-CS2103-F15-1/tp)","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"**FINDvisor aims to streamline client management for financial advisors with a tool that organizes contact information. Furthermore, it aims to simplify organising meetings, and tracks client goals for better timeline planning—all in one clutter-free interface.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"* If you are interested in using FINDvisor, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"* If you are interested about developing FINDvisor, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"* App icon and favicon: \u003ca href\u003d\"https://www.flaticon.com/free-icons/search\" title\u003d\"search icons\"\u003eSearch icons created by Maxim Basinski Premium - Flaticon\u003c/a\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Javiery3889":2,"Dethada":6,"-":12}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"KohGuanZeh"},"content":"Create a `RemarkCommandParser` class in the `seedu.findvisor.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"KohGuanZeh"},"content":"Create a new `Remark` in `seedu.findvisor.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"KohGuanZeh"},"content":"Simply add the following to [`seedu.findvisor.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"KohGuanZeh":6,"-":393}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"The `address` field in `Person` is actually an instance of the `seedu.findvisor.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KohGuanZeh":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.findvisor.logic.Logic`.","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"A quick look at the `seedu.findvisor.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KohGuanZeh":2,"-":299}},{"path":"src/main/java/seedu/findvisor/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.FileUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"KohGuanZeh":4,"-":69}},{"path":"src/main/java/seedu/findvisor/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"KohGuanZeh":2,"-":39}},{"path":"src/main/java/seedu/findvisor/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.Config;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.Version;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ConfigUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.LogicManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.AddressBookStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.Storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.StorageManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.ui.Ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.ui.UiManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, false);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Arixeyeion"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FINDvisor ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"Arixeyeion"},"content":"        logger.info(\"Starting FINDvisor \" + MainApp.VERSION);","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"Arixeyeion"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping FINDvisor ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Arixeyeion":3,"KohGuanZeh":24,"Dethada":1,"-":158}},{"path":"src/main/java/seedu/findvisor/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":2,"-":64}},{"path":"src/main/java/seedu/findvisor/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"    private static final double DEFAULT_WIDTH \u003d 1045;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"    private static final double DEFAULT_HEIGHT \u003d 755;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"    private static final double DEFAULT_DIVIDER_POSITION \u003d 0.315;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"    private final boolean isMaximized;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"    private final double dividerPosition;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"     * Constructs a {@code GuiSettings} with the default height, width window position and divider position.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"        isMaximized \u003d false;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"        dividerPosition \u003d DEFAULT_DIVIDER_POSITION;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width window position and divider position.","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition,","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"                       boolean isMaximized, double dividerPosition) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"        this.isMaximized \u003d isMaximized;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"        this.dividerPosition \u003d dividerPosition;","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"    public boolean getIsMaximized() {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"        return isMaximized;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"    public double getDividerPosition() {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"        return dividerPosition;","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates)","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"KohGuanZeh"},"content":"                \u0026\u0026 isMaximized \u003d\u003d otherGuiSettings.isMaximized","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"KohGuanZeh"},"content":"                \u0026\u0026 dividerPosition \u003d\u003d otherGuiSettings.dividerPosition;","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, isMaximized, dividerPosition);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"                .add(\"isMaximized\", isMaximized)","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"                .add(\"dividerPosition\", dividerPosition)","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":29,"-":73}},{"path":"src/main/java/seedu/findvisor/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":1,"-":105}},{"path":"src/main/java/seedu/findvisor/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":1,"-":120}},{"path":"src/main/java/seedu/findvisor/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core.index;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"KohGuanZeh":2,"-":67}},{"path":"src/main/java/seedu/findvisor/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"KohGuanZeh":1,"-":10}},{"path":"src/main/java/seedu/findvisor/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":1,"-":20}},{"path":"src/main/java/seedu/findvisor/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KohGuanZeh":2,"-":40}},{"path":"src/main/java/seedu/findvisor/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":1,"-":34}},{"path":"src/main/java/seedu/findvisor/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.Config;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KohGuanZeh":3,"-":20}},{"path":"src/main/java/seedu/findvisor/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Handles DateTime parsing and formatting.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    public static final String DATE_PATTERN \u003d \"dd-MM-uuuu\";","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-uuuu\u0027T\u0027HH:mm\")","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter DATE_TIME_OUTPUT_FORMAT \u003d","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-uuuu HH:mm\")","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(DATE_PATTERN)","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     * Returns true if {@code date} can be converted into a {@code LocalDate} via {@link LocalDate#parse(CharSequence)},","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * otherwise returns false.","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @param date A string representing the date.","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"            LocalDate.parse(date, DATE_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"     * Returns true if {@code dateTime} can be converted into a {@code LocalDateTime}","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"     * via {@link LocalDateTime#parse(CharSequence)}, otherwise returns false.","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     * @param dateTime A string representing the date and time.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    public static boolean isValidDateTime(String dateTime) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"            LocalDateTime.parse(dateTime, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"     * Converts a String into a LocalDateTime object. The expected format is dd-MM-yyyy\u0027T\u0027HH:mm. For","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * example, 2023-01-29T14:00.","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param input The string to be converted to a LocalDateTime object.","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return The resulting LocalDateTime object after the conversion.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws DateTimeParseException If the String is not in the expected format.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseDateTimeString(String input) throws DateTimeParseException {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return LocalDateTime.parse(input, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"     * Converts a String into a LocalDate object. The expected format is dd-MM-yyyy. For","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"     * example, 29-12-2024.","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"     * @param input The string to be converted to a LocalDate object.","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"     * @return The resulting LocalDate object after the conversion.","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"     * @throws DateTimeParseException If the String is not in the expected format.","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"    public static LocalDate parseDateString(String input) {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        return LocalDate.parse(input, DATE_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"     * Converts a LocalDateTime object into a String in input format. The format is dd-MM-yyyy\u0027T\u0027HH:mm. For","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * example, 2023-01-29T14:00.","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param dateTime The LocalDateTime object to be converted.","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @return The resulting string after the conversion.","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static String dateTimeToInputString(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return dateTime.format(DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"     * Converts a LocalDate object into a String in input format. The format is dd-MM-yyyy. For","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"     * example, 29-12-2024.","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"     * @param date The LocalDate object to be converted.","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"     * @return The resulting string after the conversion.","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"    public static String dateToString(LocalDate date) {","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"        return date.format(DATE_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"     * Converts a LocalDateTime object into a String in output format. The format is dd-MM-yyyy HH:mm. For","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * example, 2023-01-29 14:00.","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param dateTime The LocalDateTime object to be converted.","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return The resulting string after the conversion.","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return dateTime.format(DATE_TIME_OUTPUT_FORMAT);","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"     * Checks if the given LocalDateTime object is after the current date and time.","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"     * @param dateTime The LocalDateTime object to be checked.","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"     * @return True if the given LocalDateTime object is after the current date and time, false otherwise.","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"    public static boolean isAfterCurrentDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"        return dateTime.isAfter(LocalDateTime.now());","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"     * Checks if two LocalDateTime objects are equal to each other, with precision up to minutes.","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"     * @param dateTime The first LocalDateTime object to be compared.","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"     * @param otherDateTime The other LocalDateTime object to be compared.","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"     * @return True if the two LocalDateTime objects are equal up to minutes.","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"    public static boolean isEqualsDateTimeMinutes(LocalDateTime dateTime, LocalDateTime otherDateTime) {","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"        return dateTime.truncatedTo(ChronoUnit.MINUTES).equals(otherDateTime.truncatedTo(ChronoUnit.MINUTES));","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"Javiery3889"},"content":"     * Checks if the two given LocalDate object have the same date.","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"Javiery3889"},"content":"     * @param date The LocalDate object to be checked.","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"Javiery3889"},"content":"     * @param otherDate The other LocalDate object to be checked against.","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"Javiery3889"},"content":"     * @return True if the given LocalDate objects have the same date, false otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"Javiery3889"},"content":"    public static boolean isSameDate(LocalDate date, LocalDate otherDate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"Javiery3889"},"content":"        return date.equals(otherDate);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Javiery3889":52,"Dethada":45,"-":47}},{"path":"src/main/java/seedu/findvisor/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":1,"-":82}},{"path":"src/main/java/seedu/findvisor/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":3,"-":141}},{"path":"src/main/java/seedu/findvisor/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"    private static final String SAFE_STRING_REGEX \u003d \"[\\\\w\\\\s!@#$%^\u0026*()+\\\\-{}\\\\[\\\\]:;\u0027\\\"\\\\\\\\\u003c\u003e?.,|~`]*\";","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"     * Returns true if the {@code sentence} contains the {@code subString}","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"     * Ignores case, but order of the words in {@code subString} matter.","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"     * @param sentence The string in which to search for the substring. This parameter cannot be null.","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"     * @param subString The substring to search within a {@code sentence}. This parameter is trimmed for leading and","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"     *      trailing whitespace and cannot be empty after trimming. This parameter cannot be null.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"    public static boolean containsIgnoreCase(String sentence, String subString) {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        requireNonNull(subString);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        String preppedSubString \u003d subString.trim().toLowerCase();","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        checkArgument(!preppedSubString.isEmpty(), \"subString parameter cannot be empty\");","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        return sentence.toLowerCase().contains(preppedSubString);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":86,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"     * Returns true if {@code s} is a safe string","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"     * A safe string only consists of alphanumeric characters, whitespace","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"     * and the set of special characters: \"!@#$%^\u0026*()_+-{}[]:;\u0027\"\u003c\u003e?.,|~`\\\"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"KohGuanZeh"},"content":"    public static boolean isSafeString(String s) {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"        requireNonNull(s);","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"        return s.matches(SAFE_STRING_REGEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":17,"Javiery3889":16,"-":66}},{"path":"src/main/java/seedu/findvisor/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"KohGuanZeh":1,"-":52}},{"path":"src/main/java/seedu/findvisor/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"     * @see seedu.findvisor.model.Model#getAddressBook()","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"    /** Returns an unmodifiable view of the list of persons with today\u0027s meetings */","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"    ObservableList\u003cPerson\u003e getTodaysMeetingPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KohGuanZeh":11,"-":42}},{"path":"src/main/java/seedu/findvisor/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.Command;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.AddressBookParser;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.Storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"    public ObservableList\u003cPerson\u003e getTodaysMeetingPersonList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"        return model.getTodaysMeetingPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KohGuanZeh":17,"-":76}},{"path":"src/main/java/seedu/findvisor/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.Prefix;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_EMPTY_FIELD \u003d \"Empty value for field: %1$s!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_CANNOT_SCHEDULE_MEETING_IN_THE_PAST \u003d \"Cannot schedule meeting that\"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"            + \" starts before the current time!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_REQUIRE_AT_LEAST_ONE_FIELD \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String MESSAGE_SAFE_STRING_INPUT_CHARACTERS \u003d \"alphanumeric characters, whitespace and the\"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"            + \" following set of characters: {!@#$%^\u0026*()_+-{}[]:;\u0027\\\"\u003c\u003e?.,|~`\\\\}\";","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    //@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"     * Formats the {@code meeting} for display to the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    public static String format(Meeting meeting) {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        builder.append(\"Meeting Start: \")","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"                .append(meeting.getStartString())","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"                .append(\"; End: \")","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"                .append(meeting.getEndString());","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"        if (!meeting.remark.equals(\"\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"            builder.append(\"\\nMeeting Remark: \")","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"                    .append(meeting.remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        return builder.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    //@@author","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"     * Formats the {@code remark} for display to the user","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"    public static String format(Remark remark) {","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"        builder.append(\"Remark: \").append(remark.value);","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"KohGuanZeh"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":14,"Javiery3889":1,"Dethada":21,"-":49}},{"path":"src/main/java/seedu/findvisor/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_PHONE + \"PHONE_NUMBER \"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":11,"Javiery3889":1,"-":72}},{"path":"src/main/java/seedu/findvisor/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arixeyeion"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Arixeyeion"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Arixeyeion"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Arixeyeion"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Arixeyeion"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":" * Adds tags to an existing person in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Arixeyeion"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Arixeyeion"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"    public static final String COMMAND_WORD \u003d \"addtag\";","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Arixeyeion"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds new tags to the person identified \"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Arixeyeion"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"            + \"Single tag example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Arixeyeion"},"content":"            + PREFIX_TAG + \"PRUTravellerProtect\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"            + \"Multiple tag example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"            + PREFIX_TAG + \"PRUactiveCash \"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"            + PREFIX_TAG + \"UniversityStudentYear1\";","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Arixeyeion"},"content":"    public static final String MESSAGE_ADD_TAGS_TO_PERSON_SUCCESS \u003d \"Added tags to Person: %1$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"    public static final String MESSAGE_TAG_CONSTRAINTS_VIOLATED \u003d \"One or more tags violate the tag constraints\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Arixeyeion"},"content":"            + \"Tags must be alphanumeric with no spaces\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"            + \"Example: \" + PREFIX_TAG + \"PRUactiveCash23\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"            + \"Multiple tag example: \" + PREFIX_TAG + \"PRUactiveCash23 \" + PREFIX_TAG + \"PRUTravellerProtect\";","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Arixeyeion"},"content":"    private final Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"    private final Set\u003cTag\u003e newTags;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Arixeyeion"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Arixeyeion"},"content":"     * @param index of the person in the filtered person list to add tags to","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Arixeyeion"},"content":"     * @param newTags tags to add to the person","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Arixeyeion"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Arixeyeion"},"content":"    public AddTagCommand(Index index, Set\u003cTag\u003e newTags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Arixeyeion"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Arixeyeion"},"content":"        requireNonNull(newTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Arixeyeion"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Arixeyeion"},"content":"        this.newTags \u003d newTags;","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Arixeyeion"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Arixeyeion"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Arixeyeion"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Arixeyeion"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Arixeyeion"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Arixeyeion"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Arixeyeion"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Arixeyeion"},"content":"        Person personToAddTagTo \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Arixeyeion"},"content":"        Person personWithAddedTags \u003d addTagsToPerson(personToAddTagTo, newTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Arixeyeion"},"content":"        model.setPerson(personToAddTagTo, personWithAddedTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Arixeyeion"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Arixeyeion"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAGS_TO_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Arixeyeion"},"content":"                Messages.format(personWithAddedTags)));","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Arixeyeion"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Arixeyeion"},"content":"     * Creates and returns a {@code Person} with the same details as {@code  personToAddTagTo}","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Arixeyeion"},"content":"     * and all the newly added tags from {@code newTags}","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"Arixeyeion"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"Arixeyeion"},"content":"    private static Person addTagsToPerson(Person personToAddTagTo, Set\u003cTag\u003e newTags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"Arixeyeion"},"content":"        assert personToAddTagTo !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Arixeyeion"},"content":"        //keep original details of person but add the tag to their tag set","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"Arixeyeion"},"content":"        Name name \u003d personToAddTagTo.getName();","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"Arixeyeion"},"content":"        Phone phone \u003d personToAddTagTo.getPhone();","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"Arixeyeion"},"content":"        Email email \u003d personToAddTagTo.getEmail();","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"Arixeyeion"},"content":"        Address address \u003d personToAddTagTo.getAddress();","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"Arixeyeion"},"content":"        Set\u003cTag\u003e tags \u003d personToAddTagTo.getTags();","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"Arixeyeion"},"content":"        Optional\u003cMeeting\u003e meeting \u003d personToAddTagTo.getMeeting();","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"Arixeyeion"},"content":"        Optional\u003cRemark\u003e remark \u003d personToAddTagTo.getRemark();","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"Arixeyeion"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"Arixeyeion"},"content":"        updatedTags.addAll(tags);","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"Arixeyeion"},"content":"        updatedTags.addAll(newTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"Arixeyeion"},"content":"        return new Person(name, phone, email, address, updatedTags, meeting, remark);","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"Arixeyeion"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"Arixeyeion"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"Arixeyeion"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"Arixeyeion"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"Arixeyeion"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"Arixeyeion"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"Arixeyeion"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"Arixeyeion"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"Arixeyeion"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand otherAddTagCommand \u003d (AddTagCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"Arixeyeion"},"content":"        return newTags.equals(otherAddTagCommand.newTags) \u0026\u0026 index.equals(otherAddTagCommand.index);","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"Arixeyeion"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"Arixeyeion"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"Arixeyeion"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"Arixeyeion"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"Arixeyeion"},"content":"                .add(\"tags\", newTags)","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"Arixeyeion"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"Arixeyeion"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Arixeyeion":125,"Javiery3889":2}},{"path":"src/main/java/seedu/findvisor/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":3,"-":20}},{"path":"src/main/java/seedu/findvisor/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":3,"-":17}},{"path":"src/main/java/seedu/findvisor/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":2,"-":80}},{"path":"src/main/java/seedu/findvisor/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":7,"-":62}},{"path":"src/main/java/seedu/findvisor/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuZizhen"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"YuZizhen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"YuZizhen"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"YuZizhen"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"YuZizhen"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"YuZizhen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"YuZizhen"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"YuZizhen"},"content":" * Deletes an existing tag of a person identified using it\u0027s displayed index","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"YuZizhen"},"content":" * from the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"YuZizhen"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"YuZizhen"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"YuZizhen"},"content":"    public static final String COMMAND_WORD \u003d \"deletetag\";","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"YuZizhen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"YuZizhen"},"content":"            + \": Deletes the tag associated with a particular person \"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"YuZizhen"},"content":"            + \"identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"YuZizhen"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"YuZizhen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 t/PRUTravellerProtect\";","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"YuZizhen"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted tag %1$s for Person: %2$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"YuZizhen"},"content":"    public static final String MESSAGE_CANNOT_FIND_TAG \u003d \"There is no tag %1$s for Person: %2$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"YuZizhen"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"YuZizhen"},"content":"    private final Set\u003cTag\u003e targetTags;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"YuZizhen"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"YuZizhen"},"content":"     * Creates an DeleteTagCommand to delete an existing tag with the person at the","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"YuZizhen"},"content":"     * specified {@code Index}","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"YuZizhen"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"YuZizhen"},"content":"    public DeleteTagCommand(Index targetIndex, Set\u003cTag\u003e targetTags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"YuZizhen"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"YuZizhen"},"content":"        requireNonNull(targetTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"YuZizhen"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"YuZizhen"},"content":"        this.targetTags \u003d targetTags;","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"YuZizhen"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"YuZizhen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"YuZizhen"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"YuZizhen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"YuZizhen"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"YuZizhen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"YuZizhen"},"content":"        Person personFilteredByIndex \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"YuZizhen"},"content":"        Set\u003cTag\u003e tagsOfPerson \u003d personFilteredByIndex.getTags();","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"YuZizhen"},"content":"        Set\u003cTag\u003e missingTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"YuZizhen"},"content":"        for (Tag tag : targetTags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"YuZizhen"},"content":"            if (!tagsOfPerson.contains(tag)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"YuZizhen"},"content":"                missingTags.add(tag);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"YuZizhen"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"YuZizhen"},"content":"        if (missingTags.size() \u003e 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"YuZizhen"},"content":"            throw new CommandException(String.format(MESSAGE_CANNOT_FIND_TAG, missingTags,","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"YuZizhen"},"content":"                    personFilteredByIndex.getName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"YuZizhen"},"content":"        Person editedPerson \u003d deleteTagsFromPerson(personFilteredByIndex, targetTags);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"YuZizhen"},"content":"        model.setPerson(personFilteredByIndex, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"YuZizhen"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"YuZizhen"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_SUCCESS, targetTags, editedPerson.getName()));","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"YuZizhen"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"YuZizhen"},"content":"     * Creates and returns a copy of {@code personFilteredByIndex} without {@code targetTags}.","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"YuZizhen"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"YuZizhen"},"content":"    private static Person deleteTagsFromPerson(Person personFilteredByIndex, Set\u003cTag\u003e targetTags) {","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"YuZizhen"},"content":"        assert personFilteredByIndex !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"YuZizhen"},"content":"        Name name \u003d personFilteredByIndex.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"YuZizhen"},"content":"        Phone phone \u003d personFilteredByIndex.getPhone();","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"YuZizhen"},"content":"        Email email \u003d personFilteredByIndex.getEmail();","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"YuZizhen"},"content":"        Address address \u003d personFilteredByIndex.getAddress();","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"YuZizhen"},"content":"        Set\u003cTag\u003e tags \u003d personFilteredByIndex.getTags();","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"YuZizhen"},"content":"        Optional\u003cMeeting\u003e meeting \u003d personFilteredByIndex.getMeeting();","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"YuZizhen"},"content":"        Optional\u003cRemark\u003e remark \u003d personFilteredByIndex.getRemark();","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"YuZizhen"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"YuZizhen"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"YuZizhen"},"content":"            if (!targetTags.contains(tag)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"YuZizhen"},"content":"                updatedTags.add(tag);","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"YuZizhen"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"YuZizhen"},"content":"        return new Person(name, phone, email, address, updatedTags, meeting, remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"YuZizhen"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"YuZizhen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"YuZizhen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"YuZizhen"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"YuZizhen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"YuZizhen"},"content":"        if (!(other instanceof DeleteTagCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"YuZizhen"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand otherDeleteTagCommand \u003d (DeleteTagCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"YuZizhen"},"content":"        return targetIndex.equals(otherDeleteTagCommand.targetIndex)","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"YuZizhen"},"content":"                \u0026\u0026 targetTags.equals(otherDeleteTagCommand.targetTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"YuZizhen"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"YuZizhen"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"YuZizhen"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"YuZizhen"},"content":"                .add(\"toDeleteTag\", targetIndex)","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"YuZizhen"},"content":"                .add(\"tag\", targetTags)","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"YuZizhen"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"YuZizhen"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Javiery3889":1,"YuZizhen":134}},{"path":"src/main/java/seedu/findvisor/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_NUMBER] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"KohGuanZeh"},"content":"        // Fields that EditCommand does not change should remain","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        Optional\u003cMeeting\u003e meeting \u003d personToEdit.getMeeting();","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d personToEdit.getRemark();","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"KohGuanZeh"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, meeting, remark);","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"KohGuanZeh":23,"Javiery3889":1,"Dethada":2,"-":220}},{"path":"src/main/java/seedu/findvisor/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"KohGuanZeh":2,"-":17}},{"path":"src/main/java/seedu/findvisor/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":" * Finds persons based on search criteria of the specified category.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":" * Only exactly one category of the following can be specified: name, email, phone, address,","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":" * meeting date, remark, meeting remark and tags.","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":" * For meeting date inputs, user input will be validated to match date format.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose information matches \"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"            + \"the specified keywords (case-insensitive) of the specified category \"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_NAME + \"NAME|\"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_EMAIL + \"EMAIL|\"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_PHONE + \"PHONE_NUMBER|\"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_ADDRESS + \"ADDRESS|\"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_REMARK + \"REMARK|\"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_MEETING + \"MEETING_DATE|\"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_MEETING_REMARK + \"MEETING_REMARK|\"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/PRUActiveCash t/friends\";","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_FIND_COMMAND_RESULT \u003d \"%1$d persons listed with %2$s!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    private final PersonPredicate predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"     * @param predicate The {@link PersonPredicate} associated with the prefix specified.","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    public FindCommand(PersonPredicate predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        return new CommandResult(String.format(MESSAGE_FIND_COMMAND_RESULT,","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"                model.getFilteredPersonList().size(), predicate.getPredicateDescription()));","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"KohGuanZeh":3,"Javiery3889":37,"-":43}},{"path":"src/main/java/seedu/findvisor/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":2,"-":19}},{"path":"src/main/java/seedu/findvisor/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":3,"-":21}},{"path":"src/main/java/seedu/findvisor/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":" * Updates a remark to an existing person in the address book.","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates a remark of the person identified \"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"            + \"Existing values will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"            + \"r/ Plans to own a property by the age of 30\";","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Updated remark for %1$s to %2$s\";","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String MESSAGE_REMOVE_REMARK_SUCCESS \u003d \"Removed remark for %1$s\";","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"    private final Index index;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"    private final Optional\u003cRemark\u003e remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"     * @param remark new remark of the person","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"    public RemarkCommand(Index index, Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, remark);","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"KohGuanZeh"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"KohGuanZeh"},"content":"        String feedback \u003d remark.map(r -\u003e String.format(MESSAGE_ADD_REMARK_SUCCESS, personToEdit.getName(), r.value))","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"KohGuanZeh"},"content":"                .orElse(String.format(MESSAGE_REMOVE_REMARK_SUCCESS, personToEdit.getName()));","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"KohGuanZeh"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"     * edited with {@code updatedRemark}.","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"    private static Person createEditedPerson(Person personToEdit, Optional\u003cRemark\u003e updatedRemark) {","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"KohGuanZeh"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"KohGuanZeh"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"KohGuanZeh"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"KohGuanZeh"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cMeeting\u003e meeting \u003d personToEdit.getMeeting();","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"        return new Person(name, phone, email, address, tags, meeting, updatedRemark);","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"KohGuanZeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"KohGuanZeh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"KohGuanZeh"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"KohGuanZeh"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand otherRemarkCommand \u003d (RemarkCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"KohGuanZeh"},"content":"        return index.equals(otherRemarkCommand.index) \u0026\u0026 remark.equals(otherRemarkCommand.remark);","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"KohGuanZeh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"KohGuanZeh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"KohGuanZeh"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"KohGuanZeh"},"content":"                .add(\"remark\", remark.map(r -\u003e r.value).orElse(\"\"))","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"KohGuanZeh"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"KohGuanZeh":117}},{"path":"src/main/java/seedu/findvisor/logic/commands/RescheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_CANNOT_SCHEDULE_MEETING_IN_THE_PAST;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":" * Reschedules a meeting with a person.","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"public class RescheduleCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    public static final String COMMAND_WORD \u003d \"reschedule\";","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Reschedules a meeting with the person identified \"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"            + \"[\" + PREFIX_START_DATETIME + \"START_DATETIME] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"            + \"[\" + PREFIX_END_DATETIME + \"END_DATETIME] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"            + \"[\" + PREFIX_MEETING_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"            + PREFIX_END_DATETIME + \"22-02-2024T16:00 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            + PREFIX_MEETING_REMARK + \"Extended by one hour\";","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_RESCHEDULE_SUCCESS \u003d \"Rescheduled meeting with %1$s.\\n%2$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_CANNOT_RESCHEDULE_NON_EXISTENT_MEETING \u003d \"To reschedule a meeting\"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"            + \" you must first schedule a meeting with the contact!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"     * Creates an RescheduleCommand to reschedule a meeting with the specified {@code Person}","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"    public RescheduleCommand(Index targetIndex, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        this.editMeetingDescriptor \u003d editMeetingDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        if (personToEdit.getMeeting().isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(MESSAGE_CANNOT_RESCHEDULE_NON_EXISTENT_MEETING);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"        if (editMeetingDescriptor.getStart().isPresent()","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 !DateTimeUtil.isAfterCurrentDateTime(editMeetingDescriptor.getStart().get())) {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(MESSAGE_CANNOT_SCHEDULE_MEETING_IN_THE_PAST);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editMeetingDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"        return new CommandResult(String.format(MESSAGE_RESCHEDULE_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"                editedPerson.getName(),","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"                Messages.format(editedPerson.getMeeting().get())));","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"     * Creates and returns a {@code Person} with the same details of {@code personToEdit}","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"     * with the meeting details edited.","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"     * @param personToEdit Person to edit. Must have a meeting scheduled.","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"     * @param editMeetingDescriptor Details to edit the meeting with.","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"     * @return Person with the meeting details edited.","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"    private static Person createEditedPerson(Person personToEdit, EditMeetingDescriptor editMeetingDescriptor)","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"            throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"        assert personToEdit !\u003d null \u0026\u0026 editMeetingDescriptor !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"        Optional\u003cRemark\u003e remark \u003d personToEdit.getRemark();","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"        // We should only reach this point if the person has a meeting scheduled.","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"        assert personToEdit.getMeeting().isPresent();","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        Meeting currentMeeting \u003d personToEdit.getMeeting().get();","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"        LocalDateTime start \u003d editMeetingDescriptor.getStart().orElse(currentMeeting.getStart());","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"        LocalDateTime end \u003d editMeetingDescriptor.getEnd().orElse(currentMeeting.getEnd());","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"        String remarkString \u003d editMeetingDescriptor.getRemark().orElse(currentMeeting.getRemark());","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"        if (!Meeting.isValidDateTime(start, end)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(Meeting.MESSAGE_DATETIME_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"        if (!Meeting.isValidRemark(remarkString)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(Meeting.MESSAGE_REMARK_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d new Meeting(start, end, remarkString);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"        return new Person(name, phone, email, address, tags, Optional.of(meeting), remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"Dethada"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"Dethada"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"Dethada"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"Dethada"},"content":"        if (!(other instanceof RescheduleCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand otherScheduleCommand \u003d (RescheduleCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"Dethada"},"content":"        return targetIndex.equals(otherScheduleCommand.targetIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(otherScheduleCommand.editMeetingDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"Dethada"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"Dethada"},"content":"                .add(\"toReschedule\", targetIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"Dethada"},"content":"                .add(\"editMeetingDescriptor\", editMeetingDescriptor)","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"Dethada"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"Dethada"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"Dethada"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"Dethada"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"Dethada"},"content":"        private LocalDateTime start;","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"Dethada"},"content":"        private LocalDateTime end;","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"Dethada"},"content":"        private String remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"Dethada"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"Dethada"},"content":"        /**","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"Dethada"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"Dethada"},"content":"         */","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"Dethada"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"Dethada"},"content":"            setStart(toCopy.start);","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"Dethada"},"content":"            setEnd(toCopy.end);","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"Dethada"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"Dethada"},"content":"        /**","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"Dethada"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"Dethada"},"content":"         */","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"Dethada"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"Dethada"},"content":"            return CollectionUtil.isAnyNonNull(start, end, remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"Dethada"},"content":"        public void setStart(LocalDateTime start) {","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"Dethada"},"content":"            this.start \u003d start;","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"Dethada"},"content":"        public Optional\u003cLocalDateTime\u003e getStart() {","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"Dethada"},"content":"            return Optional.ofNullable(start);","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"Dethada"},"content":"        public void setEnd(LocalDateTime end) {","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"Dethada"},"content":"            this.end \u003d end;","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"Dethada"},"content":"        public Optional\u003cLocalDateTime\u003e getEnd() {","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"Dethada"},"content":"            return Optional.ofNullable(end);","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"Dethada"},"content":"        public void setRemark(String remark) {","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"Dethada"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"Dethada"},"content":"        public Optional\u003cString\u003e getRemark() {","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"Dethada"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"Dethada"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"Dethada"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"Dethada"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"Dethada"},"content":"                return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"Dethada"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"Dethada"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"Dethada"},"content":"                return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"Dethada"},"content":"            EditMeetingDescriptor otherEditMeetingDescriptor \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"Dethada"},"content":"            boolean startEquals \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"Dethada"},"content":"            if (start !\u003d null \u0026\u0026 otherEditMeetingDescriptor.start !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"Dethada"},"content":"                startEquals \u003d DateTimeUtil.isEqualsDateTimeMinutes(start, otherEditMeetingDescriptor.start);","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"Dethada"},"content":"            boolean endEquals \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"Dethada"},"content":"            if (end !\u003d null \u0026\u0026 otherEditMeetingDescriptor.end !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"Dethada"},"content":"                endEquals \u003d DateTimeUtil.isEqualsDateTimeMinutes(end, otherEditMeetingDescriptor.end);","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"Dethada"},"content":"            return startEquals \u0026\u0026 endEquals","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"Dethada"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditMeetingDescriptor.remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"Dethada"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"Dethada"},"content":"        public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"Dethada"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"Dethada"},"content":"                    .add(\"start\", start)","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"Dethada"},"content":"                    .add(\"end\", end)","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"Dethada"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"Dethada"},"content":"                    .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Javiery3889":2,"Dethada":240}},{"path":"src/main/java/seedu/findvisor/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"//@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_CANNOT_SCHEDULE_MEETING_IN_THE_PAST;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import java.util.List;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import java.util.Set;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":" * Schedules a meeting with a person.","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedules a meeting with the person identified \"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"            + PREFIX_START_DATETIME + \"START_DATETIME \"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            + PREFIX_END_DATETIME + \"END_DATETIME \"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"            + \"[\" + PREFIX_MEETING_REMARK + \"MEETING_REMARK\" + \"]\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"            + PREFIX_START_DATETIME + \"22-02-2024T14:00 \"","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"            + PREFIX_END_DATETIME + \"22-02-2024T15:00 \";","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_SCHEDULE_SUCCESS \u003d \"Scheduled meeting with %1$s from %2$s to %3$s\";","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_CANNOT_SCHEDULE_MULTIPLE_MEETINGS \u003d \"Cannot schedule more than 1\"","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"            + \" meeting with a contact!\";","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    private final Meeting meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"     * Creates an ScheduleCommand to schedule a meeting with the specified {@code Person}","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    public ScheduleCommand(Index targetIndex, Meeting meeting) {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        if (personToEdit.getMeeting().isPresent()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(MESSAGE_CANNOT_SCHEDULE_MULTIPLE_MEETINGS);","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, meeting);","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"        if (!DateTimeUtil.isAfterCurrentDateTime(meeting.start)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(MESSAGE_CANNOT_SCHEDULE_MEETING_IN_THE_PAST);","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        return new CommandResult(String.format(MESSAGE_SCHEDULE_SUCCESS,","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"                editedPerson.getName(),","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"                meeting.getStartString(),","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"                meeting.getEndString()));","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"     * Creates and returns a {@code Person} with the same details of {@code personToEdit}","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"     * with the meeting scheduled.","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"    private static Person createEditedPerson(Person personToEdit, Meeting meeting) {","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"        Optional\u003cRemark\u003e remark \u003d personToEdit.getRemark();","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        return new Person(name, phone, email, address, tags, Optional.of(meeting), remark);","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"            return true;","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"        if (!(other instanceof ScheduleCommand)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand otherScheduleCommand \u003d (ScheduleCommand) other;","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"        return targetIndex.equals(otherScheduleCommand.targetIndex)","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 meeting.equals(otherScheduleCommand.meeting);","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"                .add(\"toSchedule\", targetIndex)","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"                .add(\"meeting\", meeting)","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"                .toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"//@@ author","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":130,"-":1}},{"path":"src/main/java/seedu/findvisor/logic/commands/UnscheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":" * Unschedules a meeting with a person.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"public class UnscheduleCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public static final String COMMAND_WORD \u003d \"unschedule\";","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Unschedules a meeting with the person identified \"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_UNSCHEDULE_SUCCESS \u003d \"Unscheduled meeting with %1$s\";","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_NO_MEETING_TO_UNSCHEDULE \u003d \"No scheduled meeting with %1$s!\";","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"     * Creates an UnscheduleCommand to unschedule a meeting with the person at the specified {@code Index}","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    public UnscheduleCommand(Index targetIndex) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        if (personToEdit.getMeeting().isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"            throw new CommandException(String.format(MESSAGE_NO_MEETING_TO_UNSCHEDULE, personToEdit.getName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        return new CommandResult(String.format(MESSAGE_UNSCHEDULE_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"     * Creates and returns a copy of {@code personToEdit} with meeting unscheduled.","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    private static Person createEditedPerson(Person personToEdit) {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d personToEdit.getRemark();","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"        return new Person(name, phone, email, address, tags, Optional.empty(), remark);","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"        if (!(other instanceof UnscheduleCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand otherScheduleCommand \u003d (UnscheduleCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"        return targetIndex.equals(otherScheduleCommand.targetIndex);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"                .add(\"toUnschedule\", targetIndex)","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"KohGuanZeh":3,"Dethada":101}},{"path":"src/main/java/seedu/findvisor/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"KohGuanZeh":1,"-":16}},{"path":"src/main/java/seedu/findvisor/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"KohGuanZeh":15,"-":46}},{"path":"src/main/java/seedu/findvisor/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arixeyeion"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.commands.AddTagCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Arixeyeion"},"content":" * Parses input arguments and creates a new AddtagCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Arixeyeion"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"     * Parses the given {@code String} of arguments in the context of the AddtagCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Arixeyeion"},"content":"     * and returns an AddtagCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Arixeyeion"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Arixeyeion"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Arixeyeion"},"content":"        Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Arixeyeion"},"content":"        Set\u003cTag\u003e newTags;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Arixeyeion"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Arixeyeion"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Arixeyeion"},"content":"        if (!argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Arixeyeion"},"content":"            //if there is not at least 1 tag present, throw exception","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Arixeyeion"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Arixeyeion"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Arixeyeion"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"            newTags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"                    AddTagCommand.MESSAGE_TAG_CONSTRAINTS_VIOLATED), pe);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Arixeyeion"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Arixeyeion"},"content":"        return new AddTagCommand(index, newTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Arixeyeion":48}},{"path":"src/main/java/seedu/findvisor/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.commands.AddTagCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.Command;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.DeleteTagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.FindCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.ListCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.UnscheduleCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"Arixeyeion"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Arixeyeion"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        case RescheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"            return new RescheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        case UnscheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"            return new UnscheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"YuZizhen"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"YuZizhen"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Arixeyeion":4,"KohGuanZeh":18,"YuZizhen":4,"Dethada":8,"-":76}},{"path":"src/main/java/seedu/findvisor/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"     * Verifies that no value associated with the given {@code prefix} in the {@code argMultimap} is blank.","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"     * A {@code prefix} value is blank if it is empty or has only whitespace.","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"     * @throws ParseException if any of the values associated with the {@code prefix}","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"    public void verifyNoBlankPrefixValueFor(Prefix prefix) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"        List\u003cString\u003e prefixValues \u003d argMultimap.get(prefix);","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"        boolean hasBlankPrefixValue \u003d prefixValues.stream().anyMatch(String::isBlank);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"        if (hasBlankPrefixValue) {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_EMPTY_FIELD, prefix.getPrefix()));","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"KohGuanZeh":3,"Javiery3889":13,"-":75}},{"path":"src/main/java/seedu/findvisor/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"KohGuanZeh":1,"-":147}},{"path":"src/main/java/seedu/findvisor/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public static final Prefix PREFIX_MEETING \u003d new Prefix(\"m/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    public static final Prefix PREFIX_START_DATETIME \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    public static final Prefix PREFIX_END_DATETIME \u003d new Prefix(\"e/\");","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    public static final Prefix PREFIX_MEETING_REMARK \u003d new Prefix(\"mr/\");","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KohGuanZeh":2,"Javiery3889":2,"Dethada":2,"-":14}},{"path":"src/main/java/seedu/findvisor/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KohGuanZeh":5,"-":24}},{"path":"src/main/java/seedu/findvisor/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuZizhen"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"YuZizhen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"YuZizhen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.DeleteTagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"YuZizhen"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"YuZizhen"},"content":" * Parses input arguments and creates a new DeleteTagCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"YuZizhen"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"YuZizhen"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"YuZizhen"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"YuZizhen"},"content":"     * DeleteTagCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"YuZizhen"},"content":"     * and returns a DeleteTagCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"YuZizhen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"YuZizhen"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"YuZizhen"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"YuZizhen"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"YuZizhen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"YuZizhen"},"content":"        Index index;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"YuZizhen"},"content":"        Set\u003cTag\u003e targetTags;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"YuZizhen"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"YuZizhen"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"YuZizhen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"YuZizhen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"YuZizhen"},"content":"        if (!argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"YuZizhen"},"content":"            // if there is not at least 1 tag present, throw exception","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"YuZizhen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"YuZizhen"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"YuZizhen"},"content":"            targetTags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"YuZizhen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"YuZizhen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"YuZizhen"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"YuZizhen"},"content":"        return new DeleteTagCommand(index, targetTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"YuZizhen"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"YuZizhen":51}},{"path":"src/main/java/seedu/findvisor/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(Messages.MESSAGE_REQUIRE_AT_LEAST_ONE_FIELD);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KohGuanZeh":12,"Dethada":2,"-":72}},{"path":"src/main/java/seedu/findvisor/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.FindCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonAddressPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonEmailPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonMeetingPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonMeetingRemarkPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonNamePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPhonePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonRemarkPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.tag.PersonTagsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"    private final Prefix[] searchPrefixes \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        PREFIX_ADDRESS, PREFIX_MEETING, PREFIX_REMARK, PREFIX_MEETING_REMARK, PREFIX_TAG};","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, searchPrefixes);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        // Check if there is any text preceding valid prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_MEETING_REMARK, PREFIX_MEETING);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        Prefix presentPrefix \u003d findSinglePresentPrefixType(argMultimap, searchPrefixes);","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        argMultimap.verifyNoBlankPrefixValueFor(presentPrefix);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        return prepareFindCommand(argMultimap, presentPrefix);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"     * Checks through the {@link ArgumentMultimap} to identify the single prefix type.","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"     * It is expected that exactly one prefix is present based on the given prefixes;","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"     * otherwise, a {@link ParseException} is thrown.","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"     * @param argMultimap The {@link ArgumentMultimap} to check for the presence of prefixes types.","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"     * @param prefixes The prefixes to search for.","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"     * @return The single present {@link Prefix} type.","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"     * @throws ParseException if none or more than one prefix is present.","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"    private Prefix findSinglePresentPrefixType(ArgumentMultimap argMultimap, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"        assert argMultimap !\u003d null \u0026\u0026 prefixes !\u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        Prefix[] presentPrefixes \u003d Stream.of(prefixes)","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"                .filter(prefix -\u003e argMultimap.getValue(prefix).isPresent())","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        if (presentPrefixes.length !\u003d 1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        return presentPrefixes[0];","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"     * Creates a {@link FindCommand} based on the given prefix and its value in {@link ArgumentMultimap}.","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"     * @param argMultimap The {@link ArgumentMultimap} containing the prefixes and corresponding values.","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"     * @param prefix The detected prefix to define the search type.","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"     * @return The {@link FindCommand} created for the detected prefix.","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"    private FindCommand prepareFindCommand(ArgumentMultimap argMultimap, Prefix prefix) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"        assert argMultimap !\u003d null \u0026\u0026 prefix !\u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"        if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"            List\u003cString\u003e tagsKeywords \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"            return new FindCommand(new PersonTagsPredicate(tagsKeywords));","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"        String userKeyword \u003d argMultimap.getValue(prefix).get();","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"        if (prefix.equals(PREFIX_MEETING)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"            LocalDate meetingDate \u003d ParserUtil.parseMeetingDate(userKeyword);","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"            return new FindCommand(new PersonMeetingPredicate(meetingDate));","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"            return new FindCommand(new PersonNamePredicate(userKeyword));","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"        if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"            return new FindCommand(new PersonPhonePredicate(userKeyword));","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"        if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"            return new FindCommand(new PersonEmailPredicate(userKeyword));","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"        if (prefix.equals(PREFIX_REMARK)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"            return new FindCommand(new PersonRemarkPredicate(userKeyword));","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"        if (prefix.equals(PREFIX_MEETING_REMARK)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"            return new FindCommand(new PersonMeetingRemarkPredicate(userKeyword));","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"        return new FindCommand(new PersonAddressPredicate(userKeyword));","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KohGuanZeh":4,"Javiery3889":95,"-":19}},{"path":"src/main/java/seedu/findvisor/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.Command;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"KohGuanZeh":3,"-":13}},{"path":"src/main/java/seedu/findvisor/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"Arixeyeion"},"content":"        String trimmedName \u003d name.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"Arixeyeion"},"content":"        String trimmedPhone \u003d phone.trim().replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"Javiery3889"},"content":"     * Validates and parses the meeting date string to a {@code LocalDate} object.","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"Javiery3889"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"Javiery3889"},"content":"     * @param meetingDate The date string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"Javiery3889"},"content":"     * @return Parsed {@code LocalDate} object.","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"Javiery3889"},"content":"     * @throws ParseException If the given {@code meetingDate} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"Javiery3889"},"content":"    public static LocalDate parseMeetingDate(String meetingDate) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"Javiery3889"},"content":"        requireNonNull(meetingDate);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"Javiery3889"},"content":"        String trimmedMeetingDate \u003d meetingDate.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"Javiery3889"},"content":"        if (!DateTimeUtil.isValidDate(trimmedMeetingDate)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"Javiery3889"},"content":"            throw new ParseException(Meeting.MESSAGE_DATE_CONSTRAINT);","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"Javiery3889"},"content":"        return DateTimeUtil.parseDateString(trimmedMeetingDate);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"KohGuanZeh"},"content":"     * Parses a {@code String remark} into a {@code Optional\u003cRemark\u003e}.","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"KohGuanZeh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"KohGuanZeh"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"KohGuanZeh"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"KohGuanZeh"},"content":"    public static Optional\u003cRemark\u003e parseRemark(String remark) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"KohGuanZeh"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"KohGuanZeh"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"KohGuanZeh"},"content":"        if (trimmedRemark.isBlank()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"KohGuanZeh"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"KohGuanZeh"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"KohGuanZeh"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"KohGuanZeh"},"content":"        return Optional.of(new Remark(trimmedRemark));","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"Dethada"},"content":"     * Parses the given meeting date and time into a {@code LocalDateTime} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"Dethada"},"content":"     * @param dateTime The meeting date and time string to parse.","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"Dethada"},"content":"     * @return Parsed {@code LocalDateTime} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"Dethada"},"content":"     * @throws ParseException if the dateTime is invalid.","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"Dethada"},"content":"    public static LocalDateTime parseMeetingDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"Dethada"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"Dethada"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"Dethada"},"content":"        if (!DateTimeUtil.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(Meeting.MESSAGE_DATETIME_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"Dethada"},"content":"        return DateTimeUtil.parseDateTimeString(trimmedDateTime);","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"Dethada"},"content":"     * Parses the given meeting remark into a {@code String} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"Dethada"},"content":"     * Leading and trailing whitespaces for meeting remark will be trimmed.","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"Dethada"},"content":"     * @param remark The meeting remark to parse.","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"Dethada"},"content":"     * @return The parsed meeting remark.","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"Dethada"},"content":"     * @throws ParseException if the meeting remark is invalid.","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":191,"author":{"gitId":"Dethada"},"content":"    public static String parseMeetingRemark(String remark) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"Dethada"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"Dethada"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"Dethada"},"content":"        if (!Meeting.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(Meeting.MESSAGE_REMARK_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"Dethada"},"content":"        return trimmedRemark;","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":200,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":201,"author":{"gitId":"Dethada"},"content":"     * Parses the given start, end datetimes and remark into a {@code Meeting} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":202,"author":{"gitId":"Dethada"},"content":"     * Leading and trailing whitespaces for meeting remark will be trimmed.","lastModifiedDate":"2024-04-01"},{"lineNumber":203,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"Dethada"},"content":"     * @return The parsed {@code Meeting} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"Dethada"},"content":"     * @throws ParseException if the dateTime or remark is invalid.","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"Dethada"},"content":"    public static Meeting parseMeeting(LocalDateTime startDateTime, LocalDateTime endDateTime, String remark)","lastModifiedDate":"2024-04-01"},{"lineNumber":208,"author":{"gitId":"Dethada"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":209,"author":{"gitId":"Dethada"},"content":"        requireAllNonNull(startDateTime, endDateTime, remark);","lastModifiedDate":"2024-04-01"},{"lineNumber":210,"author":{"gitId":"Dethada"},"content":"        String parsedRemark \u003d parseMeetingRemark(remark);","lastModifiedDate":"2024-04-01"},{"lineNumber":211,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":212,"author":{"gitId":"Dethada"},"content":"        if (!Meeting.isValidDateTime(startDateTime, endDateTime)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":213,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(Meeting.MESSAGE_DATETIME_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":214,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":215,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":216,"author":{"gitId":"Dethada"},"content":"        return new Meeting(startDateTime, endDateTime, parsedRemark);","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Arixeyeion":2,"KohGuanZeh":29,"Javiery3889":20,"Dethada":54,"-":113}},{"path":"src/main/java/seedu/findvisor/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"KohGuanZeh":1,"-":41}},{"path":"src/main/java/seedu/findvisor/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"     * Parses the given {@code String} of arguments in the context of RemarkCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"     * and returns a RemarkCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"     * @throws ParseException if the user does not conform to the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        Index index;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_REMARK);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"KohGuanZeh":45}},{"path":"src/main/java/seedu/findvisor/logic/parser/RescheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand.EditMeetingDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":" * Parses input arguments and creates a new RescheduleCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"public class RescheduleCommandParser implements Parser\u003cRescheduleCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * Parses the given {@code String} of arguments in the context of the RescheduleCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * and returns an RescheduleCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public RescheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_START_DATETIME, PREFIX_END_DATETIME, PREFIX_MEETING_REMARK);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RescheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_START_DATETIME, PREFIX_END_DATETIME, PREFIX_MEETING_REMARK);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        if (argMultimap.getValue(PREFIX_START_DATETIME).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            LocalDateTime start \u003d ParserUtil.parseMeetingDateTime(argMultimap.getValue(PREFIX_START_DATETIME).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"            editMeetingDescriptor.setStart(start);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        if (argMultimap.getValue(PREFIX_END_DATETIME).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"            LocalDateTime end \u003d ParserUtil.parseMeetingDateTime(argMultimap.getValue(PREFIX_END_DATETIME).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"            editMeetingDescriptor.setEnd(end);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_REMARK).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"            String remark \u003d ParserUtil.parseMeetingRemark(argMultimap.getValue(PREFIX_MEETING_REMARK).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"            editMeetingDescriptor.setRemark(remark);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(Messages.MESSAGE_REQUIRE_AT_LEAST_ONE_FIELD);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        return new RescheduleCommand(index, editMeetingDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Dethada":64}},{"path":"src/main/java/seedu/findvisor/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"//@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * and returns an ScheduleCommand object for execution.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_START_DATETIME, PREFIX_END_DATETIME, PREFIX_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        Index index;","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_START_DATETIME, PREFIX_END_DATETIME);","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        if (!(argMultimap.getValue(PREFIX_START_DATETIME).isPresent()","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_END_DATETIME).isPresent())) {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        LocalDateTime startDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        LocalDateTime endDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"            startDateTime \u003d DateTimeUtil.parseDateTimeString(argMultimap.getValue(PREFIX_START_DATETIME).get());","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"            endDateTime \u003d DateTimeUtil.parseDateTimeString(argMultimap.getValue(PREFIX_END_DATETIME).get());","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"        } catch (DateTimeParseException pe) {","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_MEETING_REMARK).orElse(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d ParserUtil.parseMeeting(startDateTime, endDateTime, remark);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        return new ScheduleCommand(index, meeting);","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"//@@author","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":64,"-":1}},{"path":"src/main/java/seedu/findvisor/logic/parser/UnscheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.UnscheduleCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" * Parses input arguments and creates a new UnscheduleCommand object","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"public class UnscheduleCommandParser implements Parser\u003cUnscheduleCommand\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"     * Parses the given {@code String} of arguments in the context of the UnscheduleCommand","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     * and returns a UnscheduleCommand object for execution.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    public UnscheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"            return new UnscheduleCommand(index);","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnscheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Dethada":29}},{"path":"src/main/java/seedu/findvisor/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"KohGuanZeh":2,"-":15}},{"path":"src/main/java/seedu/findvisor/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.UniquePersonList;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":4,"-":126}},{"path":"src/main/java/seedu/findvisor/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"    /** Returns an unmodifiable view of the list of persons with today\u0027s meetings */","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"    ObservableList\u003cPerson\u003e getTodaysMeetingPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KohGuanZeh":6,"-":84}},{"path":"src/main/java/seedu/findvisor/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.PersonTodayMeetingsPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"    private final FilteredList\u003cPerson\u003e todaysMeetingPersons;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        todaysMeetingPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"        todaysMeetingPersons.setPredicate(new PersonTodayMeetingsPredicate());","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"KohGuanZeh"},"content":"    public ObservableList\u003cPerson\u003e getTodaysMeetingPersonList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"KohGuanZeh"},"content":"        return todaysMeetingPersons;","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"KohGuanZeh"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"KohGuanZeh"},"content":"                \u0026\u0026 todaysMeetingPersons.equals(otherModelManager.todaysMeetingPersons);","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":16,"-":142}},{"path":"src/main/java/seedu/findvisor/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":2,"-":15}},{"path":"src/main/java/seedu/findvisor/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"KohGuanZeh":2,"-":14}},{"path":"src/main/java/seedu/findvisor/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":2,"-":86}},{"path":"src/main/java/seedu/findvisor/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    private static final String SPECIAL_CHARACTERS_PATTERN \u003d \"#\\\\-\\\\(\\\\),\"; // escaped for regex","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    private static final String SPECIAL_CHARACTERS_STRING \u003d SPECIAL_CHARACTERS_PATTERN.replace(\"\\\\\", \"\");","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses should only contain alphanumeric characters,\"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"            + \"spaces and these special characters, excluding the parentheses, (\"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"            + SPECIAL_CHARACTERS_STRING + \").\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"            + \"Addresses should not be blank as well.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    private static final String ALPHANUMERIC_AND_SPACE_PATTERN \u003d \"a-zA-Z0-9\\\\s\";","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    private static final String VALIDATION_REGEX \u003d \"[^\\\\s][\" + ALPHANUMERIC_AND_SPACE_PATTERN","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"            + SPECIAL_CHARACTERS_PATTERN + \"]*\";","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":2,"Javiery3889":9,"-":61}},{"path":"src/main/java/seedu/findvisor/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":2,"-":77}},{"path":"src/main/java/seedu/findvisor/model/person/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"//@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.StringUtil.isSafeString;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_SAFE_STRING_INPUT_CHARACTERS;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" * Represents a meeting with a Person in the address book.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(LocalDateTime, LocalDateTime)}","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"public class Meeting {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    public static final int MAX_REMARK_LENGTH \u003d 200;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_DATETIME_CONSTRAINTS \u003d \"Meetings consist of 2 datetimes, the start datetime and \"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"            + \"end date time.\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"            + \"Each input string for datetime must be in the format dd-MM-yyyy\u0027T\u0027HH:mm, for example 23-02-2024T16:00.\\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"            + \"The start datetime must be before the end date time.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_DATE_CONSTRAINT \u003d \"Meeting date is specified in the following format: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"            + DateTimeUtil.DATE_PATTERN;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public static final String MESSAGE_REMARK_CONSTRAINTS \u003d \"Remark is at most \"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"            + MAX_REMARK_LENGTH + \" characters long and can only contain \" + MESSAGE_SAFE_STRING_INPUT_CHARACTERS;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    public final LocalDateTime start;","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    public final LocalDateTime end;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    public final String remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"     * Constructs an {@code Meeting}.","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"     * @param start The start datetime of the meeting.","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"     * @param end The end datetime of the meeting.","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"    public Meeting(LocalDateTime start, LocalDateTime end, String remark) {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        requireAllNonNull(start, end, remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        checkArgument(isValidDateTime(start, end), MESSAGE_DATETIME_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_REMARK_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"     * Returns true if the given start and end datetimes are valid.","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"     * The start and end datetime are valid if the start is before the end datetime.","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    public static boolean isValidDateTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"        return start.isBefore(end);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"     * Returns true if the given remark is valid.","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"     * The remark is valid if it is at most {@code MAX_REMARK_LENGTH} characters long and contains only safe characters.","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    public static boolean isValidRemark(String remark) {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        boolean validLength \u003d remark.length() \u003c\u003d MAX_REMARK_LENGTH;","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        return validLength \u0026\u0026 isSafeString(remark);","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        return start;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        return end;","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    public String getRemark() {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"        return remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"    public String getStartString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"        return DateTimeUtil.dateTimeToString(start);","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"    public String getEndString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"        return DateTimeUtil.dateTimeToString(end);","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"                .add(\"Start Datetime\", getStartString())","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"                .add(\"End Datetime\", getEndString())","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"                .add(\"Remark\", remark)","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"                .toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"            return true;","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"        // We only need to compare up to minutes, comparing seconds and nanos is unnecessary and can cause issues.","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"        return DateTimeUtil.isEqualsDateTimeMinutes(start, otherMeeting.start)","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 DateTimeUtil.isEqualsDateTimeMinutes(end, otherMeeting.end)","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 remark.equals(otherMeeting.remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"        return Objects.hash(start, end);","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"//@@author","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Dethada":118,"-":2}},{"path":"src/main/java/seedu/findvisor/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":2,"-":65}},{"path":"src/main/java/seedu/findvisor/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Optional\u003cMeeting\u003e meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"    private final Optional\u003cRemark\u003e remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.meeting \u003d Optional.empty();","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"        this.remark \u003d Optional.empty();","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"                  Optional\u003cMeeting\u003e meeting, Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"        requireAllNonNull(name, phone, email, address, tags, meeting, remark);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Optional\u003cMeeting\u003e getMeeting() {","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"    public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"        return remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"KohGuanZeh"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 meeting.equals(otherPerson.meeting)","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"KohGuanZeh"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark)","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"KohGuanZeh"},"content":"        return Objects.hash(name, phone, email, address, tags, meeting, remark);","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"meeting\", meeting)","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"KohGuanZeh"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":18,"-":131}},{"path":"src/main/java/seedu/findvisor/model/person/PersonAddressPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s address contains (case-insensitive) a given keyword.","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" * This is used to filter for persons based on their address attribute.","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"public class PersonAddressPredicate implements PersonPredicate {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code PersonAddressPredicate} with the specified keyword.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * @param keyword The keyword to be matched against the person\u0027s address. The match is case-insensitive.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    public PersonAddressPredicate(String keyword) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the address keyword criteria.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Address containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        return StringUtil.containsIgnoreCase(person.getAddress().value, keyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonAddressPredicate)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate otherPersonAddressPredicate \u003d (PersonAddressPredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        return keyword.equals(otherPersonAddressPredicate.keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"address\", keyword).toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Javiery3889":55}},{"path":"src/main/java/seedu/findvisor/model/person/PersonEmailPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s email contains (case-insensitive) a given keyword.","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" * This is used to filter for persons based on their email attribute.","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"public class PersonEmailPredicate implements PersonPredicate {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code PersonEmailPredicate} with the specified keyword.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * @param keyword The keyword to be matched against the person\u0027s email. The match is case-insensitive.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    public PersonEmailPredicate(String keyword) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the email keyword criteria.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Email containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        return StringUtil.containsIgnoreCase(person.getEmail().value, keyword);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonEmailPredicate)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate otherPersonEmailPredicate \u003d (PersonEmailPredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        return keyword.equals(otherPersonEmailPredicate.keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"email\", keyword).toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":55}},{"path":"src/main/java/seedu/findvisor/model/person/PersonMeetingPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s meeting\u0027s start date or end date matches with the specified date.","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"public class PersonMeetingPredicate implements PersonPredicate {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code PersonMeetingPredicate} with the specified keyword.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     * @param date The {@link LocalDate} to be used to lookup against the person\u0027s meeting. The match is OR-based.","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    public PersonMeetingPredicate(LocalDate date) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the meeting date search criteria.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Meeting on \\\"%1$s\\\"\", DateTimeUtil.dateToString(date));","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        if (person.getMeeting().isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        Meeting meeting \u003d person.getMeeting().get();","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        LocalDate meetingStartDate \u003d meeting.start.toLocalDate();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        LocalDate meetingEndDate \u003d meeting.end.toLocalDate();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        return DateTimeUtil.isSameDate(date, meetingStartDate) || DateTimeUtil.isSameDate(date, meetingEndDate);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonMeetingPredicate)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate otherPersonMeetingPredicate \u003d (PersonMeetingPredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        return date.equals(otherPersonMeetingPredicate.date);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"meeting\", date).toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Javiery3889":63}},{"path":"src/main/java/seedu/findvisor/model/person/PersonMeetingRemarkPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s meeting remark contains (case-insensitive) a given keyword.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"public class PersonMeetingRemarkPredicate implements PersonPredicate {","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    private final String keyword;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code PersonAddressPredicate} with the specified keyword.","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * @param keyword The keyword to be matched against the person\u0027s meeting remark. The match is case-insensitive.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    public PersonMeetingRemarkPredicate(String keyword) {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the meeting remark keyword criteria.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Meeting remark containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        if (person.getMeeting().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        Meeting personMeeting \u003d person.getMeeting().get();","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        return StringUtil.containsIgnoreCase(personMeeting.getRemark(), keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonMeetingRemarkPredicate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate otherPersonMeetingRemarkPredicate \u003d (PersonMeetingRemarkPredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        return keyword.equals(otherPersonMeetingRemarkPredicate.keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"meeting remark\", keyword).toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"Javiery3889":58}},{"path":"src/main/java/seedu/findvisor/model/person/PersonNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s name contains (case-insensitive) a given keyword.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" * This is used to filter for persons based on their name attribute.","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"public class PersonNamePredicate implements PersonPredicate {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code PersonNamePredicate} with the specified keyword.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * @param keyword The keyword to be used to lookup against the person\u0027s name. The match is case-insensitive.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    public PersonNamePredicate(String keyword) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the name keyword criteria.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Name containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        return StringUtil.containsIgnoreCase(person.getName().fullName, keyword);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonNamePredicate)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate otherPersonNamePredicate \u003d (PersonNamePredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        return keyword.equals(otherPersonNamePredicate.keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"name\", keyword).toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":55}},{"path":"src/main/java/seedu/findvisor/model/person/PersonPhonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s phone contains a given keyword.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * This is used to filter for persons based on their phone attribute.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"public class PersonPhonePredicate implements PersonPredicate {","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code PersonPhonePredicate} with the specified keyword.","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * @param keyword The keyword to be used to lookup against the person\u0027s phone.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    public PersonPhonePredicate(String keyword) {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the phone keyword criteria.","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Phone containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        String personPhoneString \u003d person.getPhone().value;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        return personPhoneString.contains(keyword);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonPhonePredicate)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate otherPersonPhonePredicate \u003d (PersonPhonePredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        return keyword.equals(otherPersonPhonePredicate.keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"phone\", keyword).toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":55}},{"path":"src/main/java/seedu/findvisor/model/person/PersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":" * Represents a Predicate that is able to evaluate a {@code Person} field.","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"public interface PersonPredicate extends Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"     * Returns a description of the predicate condition.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     * @return a String representing the description of the predicate condition.","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription();","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Javiery3889":17}},{"path":"src/main/java/seedu/findvisor/model/person/PersonRemarkPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s remark contains (case-insensitive) a given keyword.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"public class PersonRemarkPredicate implements PersonPredicate {","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    private final String keyword;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code PersonRemarkPredicate} with the specified keyword.","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * @param keyword The keyword to be matched against the person\u0027s remark. The match is case-insensitive.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    public PersonRemarkPredicate(String keyword) {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the remark keyword criteria.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Person remark containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        if (person.getRemark().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        String personRemark \u003d person.getRemark().get().value;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        return StringUtil.containsIgnoreCase(personRemark, keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonRemarkPredicate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate otherPersonRemarkPredicate \u003d (PersonRemarkPredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        return keyword.equals(otherPersonRemarkPredicate.keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"person remark\", keyword).toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"Javiery3889":58}},{"path":"src/main/java/seedu/findvisor/model/person/PersonTodayMeetingsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":" * A predicate for evaluating if a {@link Person}\u0027s scheduled meeting at the current date.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":" * This is used to filter for persons with meetings today.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"public class PersonTodayMeetingsPredicate implements PersonPredicate {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"    private final LocalDate todaysDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"     * Constructs an {@code PersonTodayMeetingsPredicate} with the today\u0027s date.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"    public PersonTodayMeetingsPredicate() {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"        this.todaysDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"     * Returns the description of this predicate, indicating the meetings occurring on the current system\u0027s date.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"     * @return A string describing the predicate","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"        return String.format(\"Today\u0027s meeting on \\\"%1$s\\\"\", DateTimeUtil.dateToString(todaysDate));","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cMeeting\u003e personMeeting \u003d person.getMeeting();","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"        return personMeeting.map(meeting -\u003e meeting.start.toLocalDate().equals(todaysDate)).orElse(false);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"        if (!(other instanceof PersonTodayMeetingsPredicate)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"        PersonTodayMeetingsPredicate otherPersonTodayMeetingsPredicate \u003d (PersonTodayMeetingsPredicate) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"        return todaysDate.equals(otherPersonTodayMeetingsPredicate.todaysDate);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"        return new ToStringBuilder(this).add(\"date\", DateTimeUtil.dateToString(todaysDate)).toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KohGuanZeh":57}},{"path":"src/main/java/seedu/findvisor/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"            \"Phone numbers should only contain numbers or spaces, and it should be a valid Singaporean mobile number.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"                    + \"Valid examples: 91234567 or 8123 4567. Do note that the spaces will be trimmed.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"    public static final String VALIDATION_REGEX \u003d \"[89]\\\\d{7}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Arixeyeion":3,"KohGuanZeh":2,"-":57}},{"path":"src/main/java/seedu/findvisor/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_SAFE_STRING_INPUT_CHARACTERS;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":" * Represents the remark about a Person in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":" * Guarantees: immutable; a remark value is as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"public class Remark {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark should only contain \"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"            + MESSAGE_SAFE_STRING_INPUT_CHARACTERS + \".\";","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"    public final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"    public Remark(String remark) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        value \u003d remark;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"     * Returns true if a given string is a valid remark.","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"     * A valid remark is one that is safe to accept as input.","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        return StringUtil.isSafeString(test);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"        return value;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"        return value.equals(otherRemark.value);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"KohGuanZeh":64}},{"path":"src/main/java/seedu/findvisor/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":4,"-":146}},{"path":"src/main/java/seedu/findvisor/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"KohGuanZeh":1,"-":10}},{"path":"src/main/java/seedu/findvisor/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"KohGuanZeh":1,"-":5}},{"path":"src/main/java/seedu/findvisor/model/tag/PersonTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":" * A predicate for evaluating if a {@link Person}\u0027s tags contains (case-insensitive) any of the given keywords.","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":" * This is used to filter for persons based on their tags attribute.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"public class PersonTagsPredicate implements PersonPredicate {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an {@code TagsContainsKeywordsPredicate} with the specified keyword.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     * @param keywords The keywords to be used to lookup against the person\u0027s tags.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    public PersonTagsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     * Returns the description of this predicate, indicating the tags keywords criteria.","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @return A string describing the predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    public String getPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        String tagsString \u003d keywords.stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"                .map(tag -\u003e \"\\\"\" + tag + \"\\\"\")","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"Tags containing %1$s\", tagsString);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        return keywords.stream().anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"                .anyMatch(tag -\u003e StringUtil.containsIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        if (!(other instanceof PersonTagsPredicate)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate otherPersonTagsPredicate \u003d (PersonTagsPredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        return keywords.equals(otherPersonTagsPredicate.keywords);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        return new ToStringBuilder(this).add(\"tags\", keywords).toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":65}},{"path":"src/main/java/seedu/findvisor/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KohGuanZeh":2,"-":60}},{"path":"src/main/java/seedu/findvisor/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":"            new Person(new Name(\"Bernard Tan\"), new Phone(\"88812457\"), new Email(\"BerTan@gmail.com\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Arixeyeion"},"content":"                new Address(\"124 Bukit Merah Lane 1, #01-13\"), getTagSet(\"PRUInsure\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Arixeyeion"},"content":"                Optional.of(new Meeting(LocalDateTime.now().plusHours(1), LocalDateTime.now().plusHours(2),","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"                        \"Online Meeting\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"                Optional.of(new Remark(\"Wants to fund his new business\"))),","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Arixeyeion"},"content":"            new Person(new Name(\"Holly Low\"), new Phone(\"93232689\"), new Email(\"LowHolly122@gmail.com\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Arixeyeion"},"content":"                new Address(\"211 Hougang Street 21, #01-28\"), getTagSet(\"PRUHealth\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Arixeyeion"},"content":"                Optional.of(new Meeting(LocalDateTime.now().plusHours(4), LocalDateTime.now().plusHours(5),","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Arixeyeion"},"content":"                        \"Physical meeting at a cafe in Nex\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Arixeyeion"},"content":"                Optional.of(new Remark(\"Wants to find out how much she can claim for her recent hospitalization\"))),","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@gmail.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Arixeyeion"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"LimFamily\", \"Father\", \"PRUGrowth\",","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"                    \"PRUtravelsafe\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"                convertToMeeting(\"23-05-2024T16:00\", \"23-05-2024T18:00\", \"Online Meeting\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"                Optional.of(new Remark(\"Wants to move to the new house by next January\"))),","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"            new Person(new Name(\"Elizabeth Yeoh\"), new Phone(\"89334567\"), new Email(\"elyyeoh@gmail.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"                getTagSet(\"Mother\", \"LimFamily\", \"PRUGrowth\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Arixeyeion"},"content":"        Optional.empty(), Optional.empty()),","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"            new Person(new Name(\"Don Yeoh\"), new Phone(\"99126297\"), new Email(\"donyeoh@gmail.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"                getTagSet(\"LimFamily\", \"Child\", \"PRUGrowth\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Arixeyeion"},"content":"        Optional.empty(), Optional.of(new Remark(\"Still schooling\"))),","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@hotmail.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"Arixeyeion"},"content":"                getTagSet(\"DavidGirlfriend\", \"PRUgain365\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Arixeyeion"},"content":"                convertToMeeting(\"16-04-2024T13:00\", \"16-04-2024T15:00\",","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Arixeyeion"},"content":"                    \"Physical meeting at Serangoon Gardens\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Arixeyeion"},"content":"                Optional.of(new Remark(\"Working as SWE, wants to BTO with David\"))),","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Arixeyeion"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@hotmail.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"Arixeyeion"},"content":"                getTagSet(\"BerniceBoyfriend\", \"PRUgain365\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Arixeyeion"},"content":"                convertToMeeting(\"16-04-2024T13:00\", \"16-04-2024T15:00\",","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Arixeyeion"},"content":"                    \"Physical meeting at Serangoon Gardens\"), Optional.empty())","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"Arixeyeion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Arixeyeion"},"content":"     * Returns a meeting object based on strings given.","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Arixeyeion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Arixeyeion"},"content":"    public static Optional\u003cMeeting\u003e convertToMeeting(String startDateTimeString, String endDateTimeString,","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Arixeyeion"},"content":"        String meetingRemarkString) {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Arixeyeion"},"content":"        LocalDateTime startDateTime \u003d DateTimeUtil.parseDateTimeString(startDateTimeString);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Arixeyeion"},"content":"        LocalDateTime endDateTime \u003d DateTimeUtil.parseDateTimeString(endDateTimeString);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"Arixeyeion"},"content":"        String meetingRemark \u003d meetingRemarkString;","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"Arixeyeion"},"content":"        return Optional.of(new Meeting(startDateTime, endDateTime, meetingRemark));","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Arixeyeion":49,"KohGuanZeh":9,"-":36}},{"path":"src/main/java/seedu/findvisor/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":" * Represents a storage for {@link seedu.findvisor.model.AddressBook}.","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KohGuanZeh":4,"-":41}},{"path":"src/main/java/seedu/findvisor/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"//@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    private final String start;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    private final String end;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private final String remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given {@code start} and {@code end}.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    @JsonCreator","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"start\") String start,","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"            @JsonProperty(\"end\") String end, @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"     * Converts a given {@code Optional\u003cMeeting\u003e} into this class for Jackson use.","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    public JsonAdaptedMeeting(Optional\u003cMeeting\u003e source) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        start \u003d source.map(meeting -\u003e DateTimeUtil.dateTimeToInputString(meeting.start)).orElse(\"\");","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        end \u003d source.map(meeting -\u003e DateTimeUtil.dateTimeToInputString(meeting.end)).orElse(\"\");","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        remark \u003d source.map(meeting -\u003e meeting.remark).orElse(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"     *      meeting.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"    public Optional\u003cMeeting\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        if (start \u003d\u003d \"\" || end \u003d\u003d \"\") {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"            return Optional.empty();","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"            LocalDateTime start \u003d DateTimeUtil.parseDateTimeString(this.start);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"            LocalDateTime end \u003d DateTimeUtil.parseDateTimeString(this.end);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"            if (!Meeting.isValidDateTime(start, end)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"                throw new IllegalValueException(Meeting.MESSAGE_DATETIME_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"            if (!Meeting.isValidRemark(remark)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"                throw new IllegalValueException(Meeting.MESSAGE_REMARK_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"            return Optional.of(new Meeting(start, end, remark));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"            throw new IllegalValueException(Meeting.MESSAGE_DATETIME_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        if (!(other instanceof JsonAdaptedMeeting)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting otherMeeting \u003d (JsonAdaptedMeeting) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"        return start.equals(otherMeeting.start) \u0026\u0026 end.equals(otherMeeting.end) \u0026\u0026 remark.equals(otherMeeting.remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"//@@author","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Dethada":82,"-":2}},{"path":"src/main/java/seedu/findvisor/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.ParserUtil;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final JsonAdaptedMeeting meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"    private final String remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"            @JsonProperty(\"meeting\") JsonAdaptedMeeting meeting, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        meeting \u003d new JsonAdaptedMeeting(source.getMeeting());","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"        remark \u003d source.getRemark().map(remark -\u003e remark.value).orElse(\"\");","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (meeting \u003d\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Meeting.class.getSimpleName()));","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"KohGuanZeh"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"KohGuanZeh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"KohGuanZeh"},"content":"        final Optional\u003cRemark\u003e modelRemark \u003d ParserUtil.parseRemark(remark);","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"KohGuanZeh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"KohGuanZeh"},"content":"                modelTags, meeting.toModelType(), modelRemark);","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KohGuanZeh":23,"Dethada":1,"-":107}},{"path":"src/main/java/seedu/findvisor/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KohGuanZeh":3,"-":45}},{"path":"src/main/java/seedu/findvisor/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.FileUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.JsonUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KohGuanZeh":7,"-":73}},{"path":"src/main/java/seedu/findvisor/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KohGuanZeh":5,"-":55}},{"path":"src/main/java/seedu/findvisor/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.JsonUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KohGuanZeh":5,"-":42}},{"path":"src/main/java/seedu/findvisor/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KohGuanZeh":5,"-":27}},{"path":"src/main/java/seedu/findvisor/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":6,"-":72}},{"path":"src/main/java/seedu/findvisor/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":" * Represents a storage for {@link seedu.findvisor.model.UserPrefs}.","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"     * Saves the given {@link seedu.findvisor.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KohGuanZeh":6,"-":30}},{"path":"src/main/java/seedu/findvisor/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"         * @see seedu.findvisor.logic.Logic#execute(String)","lastModifiedDate":"2024-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"KohGuanZeh":5,"-":80}},{"path":"src/main/java/seedu/findvisor/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.stage.Screen;","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.AddCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.AddTagCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.ClearCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.DeleteTagCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.EditCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.FindCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.ListCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.RemarkCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.UnscheduleCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103-f15-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"YuZizhen"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL + \"\\n\\n\";","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"YuZizhen"},"content":"    //@@author YuZizhen","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"YuZizhen"},"content":"    public static final String CLEAR_COMMAND_MESSAGE \u003d \"Clear all the contacts in FINDvisor.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"YuZizhen"},"content":"    public static final String EXIT_COMMAND_MESSAGE \u003d \"Exit FINDvisor.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"YuZizhen"},"content":"    public static final String LIST_COMMAND_MESSAGE \u003d \"List all persons in FINDvisor.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"YuZizhen"},"content":"    public static final String HELP_COMMAND_MESSAGE \u003d \"Shows program usage instructions.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"YuZizhen"},"content":"    public static final String ADD_COMMAND_MESSAGE \u003d \"Adds a person to FINDvisor.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"YuZizhen"},"content":"    public static final String DELETE_COMMAND_MESSAGE \u003d \"Deletes the person identified\"","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"YuZizhen"},"content":"                + \" by the index number used in the displayed person list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"YuZizhen"},"content":"    public static final String FIND_COMMAND_MESSAGE \u003d \"Finds all persons whose information matches \"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"YuZizhen"},"content":"                + \"the specified keywords (case-insensitive) of the specified category and \"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"YuZizhen"},"content":"                + \"displays them as a list with index numbers.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"YuZizhen"},"content":"    public static final String EDIT_COMMAND_MESSAGE \u003d \"Edits the details of the person identified \"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"YuZizhen"},"content":"                + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"YuZizhen"},"content":"                + \"Existing values will be overwritten by the input values.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"YuZizhen"},"content":"    public static final String ADD_TAG_COMMAND_MESSAGE \u003d \"Adds new tags to the person identified\"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"YuZizhen"},"content":"                + \" by the index number used in the displayed person list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"YuZizhen"},"content":"    public static final String DELETE_TAG_COMMAND_MESSAGE \u003d \"Deletes the tag associated with \"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"YuZizhen"},"content":"                + \"a person identified by the index number used in the displayed person list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"YuZizhen"},"content":"    public static final String SCHEDULE_COMMAND_MESSAGE \u003d \"Schedules a meeting with the person \"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"YuZizhen"},"content":"                + \"identified by the index number used in the displayed person list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"YuZizhen"},"content":"    public static final String UNSCHEDULE_COMMAND_MESSAGE \u003d \"Unschedules a meeting with the person \"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"YuZizhen"},"content":"                + \"identified by the index number used in the displayed person list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"YuZizhen"},"content":"    public static final String RESCHEDULE_COMMAND_MESSAGE \u003d \"Reschedules a meeting with the person \"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"YuZizhen"},"content":"                + \"identified by the index number used in the displayed person list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"YuZizhen"},"content":"    public static final String REMARK_COMMAND_MESSAGE \u003d \"Updates a remark of the person identified \"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"YuZizhen"},"content":"                + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"YuZizhen"},"content":"                + \"Existing values will be overwritten by the input.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"YuZizhen"},"content":"    //@@author","lastModifiedDate":"2024-04-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"KohGuanZeh"},"content":"    private boolean hasNotShownOnce \u003d true;","lastModifiedDate":"2024-04-08"},{"lineNumber":73,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"    private Label userGuideMessage;","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"    private GridPane helpTable;","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"        root.setMaxHeight(Screen.getPrimary().getVisualBounds().getHeight());","lastModifiedDate":"2024-04-08"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"        if (root.getMinHeight() \u003e root.getMaxHeight()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"            root.setMinHeight(root.getMaxHeight());","lastModifiedDate":"2024-04-08"},{"lineNumber":93,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"        userGuideMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createHeaderLabel(\"Command\"), createHeaderLabel(\"Description\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(AddCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(ADD_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(ListCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(LIST_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(EditCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(EDIT_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(FindCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(FIND_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(DeleteCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(DELETE_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(ScheduleCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(SCHEDULE_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(UnscheduleCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(UNSCHEDULE_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(RescheduleCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(RESCHEDULE_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(RemarkCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(REMARK_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(AddTagCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(ADD_TAG_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(DeleteTagCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(DELETE_TAG_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(ClearCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(CLEAR_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i++, createCommandLabel(ExitCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(EXIT_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"KohGuanZeh"},"content":"        helpTable.addRow(i, createCommandLabel(HelpCommand.COMMAND_WORD),","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"KohGuanZeh"},"content":"                createDescriptionLabel(HELP_COMMAND_MESSAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":135,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"KohGuanZeh"},"content":"     * Creates a {@code Label} with text wrap based on {@code text}","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"KohGuanZeh"},"content":"    private Label createTextWrapLabel(String text) {","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"KohGuanZeh"},"content":"        Label label \u003d new Label(text);","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"KohGuanZeh"},"content":"        label.setWrapText(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"KohGuanZeh"},"content":"        label.getStyleClass().add(\"cell\");","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"KohGuanZeh"},"content":"        return label;","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"KohGuanZeh"},"content":"     * Creates a header {@code Label} based on {@code header}","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"KohGuanZeh"},"content":"    private Label createHeaderLabel(String header) {","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"KohGuanZeh"},"content":"        Label label \u003d createTextWrapLabel(header);","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"KohGuanZeh"},"content":"        label.getStyleClass().add(\"header-cell\");","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"KohGuanZeh"},"content":"        return label;","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"KohGuanZeh"},"content":"     * Creates a command {@code Label} based on {@code command}","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"KohGuanZeh"},"content":"    private Label createCommandLabel(String command) {","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"KohGuanZeh"},"content":"        Label label \u003d createTextWrapLabel(command);","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"KohGuanZeh"},"content":"        label.getStyleClass().add(\"command-cell\");","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"KohGuanZeh"},"content":"        return label;","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"KohGuanZeh"},"content":"     * Creates a description {@code Label} based on {@code description}","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"KohGuanZeh"},"content":"    private Label createDescriptionLabel(String description) {","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"KohGuanZeh"},"content":"        Label label \u003d createTextWrapLabel(description);","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"KohGuanZeh"},"content":"        label.getStyleClass().add(\"description-cell\");","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"KohGuanZeh"},"content":"        return label;","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":177,"author":{"gitId":"YuZizhen"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"YuZizhen"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":192,"author":{"gitId":"KohGuanZeh"},"content":"        getRoot().show();","lastModifiedDate":"2024-04-08"},{"lineNumber":193,"author":{"gitId":"KohGuanZeh"},"content":"        if (hasNotShownOnce) {","lastModifiedDate":"2024-04-08"},{"lineNumber":194,"author":{"gitId":"KohGuanZeh"},"content":"            // Required for bug: https://bugs.openjdk.org/browse/JDK-8187899","lastModifiedDate":"2024-04-08"},{"lineNumber":195,"author":{"gitId":"KohGuanZeh"},"content":"            if (getRoot().getHeight() \u003e getRoot().getMaxHeight()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":196,"author":{"gitId":"KohGuanZeh"},"content":"                getRoot().setHeight(getRoot().getMaxHeight());","lastModifiedDate":"2024-04-08"},{"lineNumber":197,"author":{"gitId":"KohGuanZeh"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":198,"author":{"gitId":"KohGuanZeh"},"content":"            hasNotShownOnce \u003d false;","lastModifiedDate":"2024-04-08"},{"lineNumber":199,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KohGuanZeh":89,"Javiery3889":4,"YuZizhen":49,"-":92}},{"path":"src/main/java/seedu/findvisor/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.control.SplitPane;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"    private SplitPane splitPane;","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"    private VBox meetingList;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"    private VBox mainAppView;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"        setDefaultGuiSettings(logic.getGuiSettings());","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"        SplitPane.setResizableWithParent(meetingList, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"        SplitPane.setResizableWithParent(mainAppView, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"KohGuanZeh"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getTodaysMeetingPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"KohGuanZeh"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"KohGuanZeh"},"content":"    private void setDefaultGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"KohGuanZeh"},"content":"        primaryStage.setMaximized(guiSettings.getIsMaximized());","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"KohGuanZeh"},"content":"        Platform.runLater(() -\u003e splitPane.setDividerPosition(0, guiSettings.getDividerPosition()));","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"KohGuanZeh"},"content":"        boolean isMaximized \u003d primaryStage.isMaximized();","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"KohGuanZeh"},"content":"        if (isMaximized) {","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"KohGuanZeh"},"content":"            // Minimize window to restore previous width and height","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"KohGuanZeh"},"content":"            primaryStage.setMaximized(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"KohGuanZeh"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), isMaximized, splitPane.getDividerPositions()[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"KohGuanZeh"},"content":"     * @see seedu.findvisor.logic.Logic#execute(String)","lastModifiedDate":"2024-03-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KohGuanZeh":39,"-":181}},{"path":"src/main/java/seedu/findvisor/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":" * An UI component that displays brief information of a {@code Person} that has a meeting today.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"    public final Person person;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"    private Label name;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"    private Label phone;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"    private Label meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"     * Creates a {@code MeetingCard} with the given {@code Person} information.","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"    public MeetingCard(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"        super(FXML);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        meeting.setText(person.getMeeting().map(Messages::format).orElse(\"No Scheduled Meeting\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KohGuanZeh":38}},{"path":"src/main/java/seedu/findvisor/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":" * Panel containing the list of persons with meeting today.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"    private ListView\u003cPerson\u003e meetingListView;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"    public MeetingListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"        super(FXML);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        meetingListView.setItems(personList);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListCell());","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code MeetingCard}.","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"    class MeetingListCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"                setText(null);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"                setGraphic(new MeetingCard(person).getRoot());","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KohGuanZeh":49}},{"path":"src/main/java/seedu/findvisor/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"    private Label remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"    @FXML","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        meeting.setText(person.getMeeting().map(Messages::format).orElse(\"No Scheduled Meeting\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"        remark.setText(person.getRemark().map(Messages::format).orElse(\"-\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KohGuanZeh":5,"Dethada":1,"-":60}},{"path":"src/main/java/seedu/findvisor/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KohGuanZeh":3,"-":46}},{"path":"src/main/java/seedu/findvisor/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KohGuanZeh":1,"-":27}},{"path":"src/main/java/seedu/findvisor/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":1,"-":27}},{"path":"src/main/java/seedu/findvisor/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KohGuanZeh":1,"-":12}},{"path":"src/main/java/seedu/findvisor/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.StringUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/findvisor.png\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KohGuanZeh":5,"Javiery3889":1,"-":82}},{"path":"src/main/java/seedu/findvisor/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KohGuanZeh":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":".label-header-medium {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"KohGuanZeh":7,"-":352}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"#copyButton, #userGuideMessage {","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"#userGuideMessage {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":".scroll-pane, .scroll-pane \u003e .viewport {","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":".label {","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":".cell {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-padding: 7.5;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-min-width: 100;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":".header-cell {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":".command-cell {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-max-width: 150;","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":".description-cell {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"    -fx-max-width: 800;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KohGuanZeh":26,"Javiery3889":6,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" minWidth\u003d\"603\" minHeight\u003d\"603\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cScrollPane fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        \u003cBorderPane fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"          \u003ctop\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"              \u003cLabel fx:id\u003d\"userGuideMessage\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"                  \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"              \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"                  \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"          \u003c/top\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"          \u003ccenter\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"              \u003cGridPane fx:id\u003d\"helpTable\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"          \u003c/center\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        \u003c/BorderPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"KohGuanZeh":7,"Javiery3889":17,"-":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"         title\u003d\"FINDvisor\" minWidth\u003d\"580\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    \u003cImage url\u003d\"@/images/findvisor.png\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        \u003cSplitPane fx:id\u003d\"splitPane\" orientation\u003d\"HORIZONTAL\" dividerPositions\u003d\"0.25\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"          \u003cVBox fx:id\u003d\"meetingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"            \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"          \u003cVBox fx:id\u003d\"mainAppView\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                       minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"KohGuanZeh":12,"Javiery3889":1,"-":58}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cLabel fx:id\u003d\"meeting\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meeting\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KohGuanZeh":26}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"  \u003cStackPane VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"    \u003cLabel VBox.vgrow\u003d\"NEVER\" text\u003d\"Today\u0027s Meetings\" styleClass\u003d\"label-header-medium\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"  \u003c/StackPane\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"  \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KohGuanZeh":17}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cLabel fx:id\u003d\"meeting\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" text\u003d\"\\$meeting\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":6,"-":32}},{"path":"src/test/java/seedu/findvisor/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"KohGuanZeh":1,"-":88}},{"path":"src/test/java/seedu/findvisor/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"KohGuanZeh":1,"-":26}},{"path":"src/test/java/seedu/findvisor/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(100, 100, 20, 20, true, 0.5);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(guiSettings.equals(guiSettings));","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(guiSettings.equals(new GuiSettings(100, 100, 20, 20, true, 0.5)));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(guiSettings.equals(10));","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(guiSettings.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(guiSettings.equals(new GuiSettings(100, 100, 20, 20, false, 0.5)));","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(guiSettings.equals(new GuiSettings(5, 6, 7, 8, true, 0.1)));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"                + guiSettings.getWindowCoordinates() + \", isMaximized\u003d\" + guiSettings.getIsMaximized()","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"                + \", dividerPosition\u003d\" + guiSettings.getDividerPosition() + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"KohGuanZeh":26,"-":14}},{"path":"src/test/java/seedu/findvisor/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":2,"-":133}},{"path":"src/test/java/seedu/findvisor/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.core.index;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"KohGuanZeh":2,"-":65}},{"path":"src/test/java/seedu/findvisor/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"        assertNotNull(AppUtil.getImage(\"/images/findvisor.png\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"KohGuanZeh":2,"Javiery3889":1,"-":33}},{"path":"src/test/java/seedu/findvisor/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"KohGuanZeh":3,"-":105}},{"path":"src/test/java/seedu/findvisor/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.Config;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KohGuanZeh":4,"-":112}},{"path":"src/test/java/seedu/findvisor/commons/util/DateTimeUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"public class DateTimeUtilTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    public void parseDateTimeString_validString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 29, 14, 0), DateTimeUtil.parseDateTimeString(\"29-01-2024T14:00\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    public void parseDateTimeString_invalidString_throwsDateTimeParseException() {","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseDateTimeString(\"INVALID STRING\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        // Invalid date","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseDateTimeString(\"31-04-2024T14:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"        // Invalid date leap year","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseDateTimeString(\"29-02-2025T14:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    public void isValidDate_invalidString_returnsFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        // Invalid string","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"Invalid String\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        // Invalid date format","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"2024/10/12\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    public void isValidDate_validString_returnsTrue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(DateTimeUtil.isValidDate(\"10-12-2024\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(DateTimeUtil.isValidDate(\"01-01-2024\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    public void isValidDateTime_invalidString_returnsFalse() {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        // Invalid string","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        assertFalse(DateTimeUtil.isValidDateTime(\"Invalid String\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        // Invalid date format","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        assertFalse(DateTimeUtil.isValidDateTime(\"2024/10/12\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    public void isValidDateTime_validString_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        assertTrue(DateTimeUtil.isValidDateTime(\"10-12-2024T14:00\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        assertTrue(DateTimeUtil.isValidDateTime(\"01-01-2024T14:00\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    public void parseDateString_validString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(LocalDate.of(2024, 12, 31), DateTimeUtil.parseDateString(\"31-12-2024\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    public void parseDateString_invalidString_throwsDateTimeParseException() {","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseDateString(\"INVALID STRING\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        // Invalid date","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseDateString(\"31-04-2024\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        // Invalid date leap year","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseDateString(\"29-02-2025\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"    public void parseDateString_invalidDateFormat_throwsDateTimeParseException() {","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseDateString(\"2024-10-10\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"    public void dateTimeToInputString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        assertEquals(\"29-01-2024T14:00\", DateTimeUtil.dateTimeToInputString(LocalDateTime.of(2024, 1, 29, 14, 0)));","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"    public void dateTimeToString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"        assertEquals(\"29-01-2024 14:00\", DateTimeUtil.dateTimeToString(LocalDateTime.of(2024, 1, 29, 14, 0)));","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"    public void dateToString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(\"24-07-2024\", DateTimeUtil.dateToString(LocalDate.of(2024, 07, 24)));","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"    public void isAfterCurrentDateTime() {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        assertTrue(DateTimeUtil.isAfterCurrentDateTime(LocalDateTime.now().plusMinutes(5)));","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"    public void isSameDate_equalDates_returnsTrue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(DateTimeUtil.isSameDate(LocalDate.of(2024, 12, 31), LocalDate.of(2024, 12, 31)));","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"    public void isSameDate_differentDates_returnsFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(DateTimeUtil.isSameDate(LocalDate.of(2024, 12, 31), LocalDate.of(2024, 12, 30)));","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Javiery3889":42,"Dethada":71}},{"path":"src/test/java/seedu/findvisor/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":2,"-":21}},{"path":"src/test/java/seedu/findvisor/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.SerializableTestClass;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.TestUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":3,"-":42}},{"path":"src/test/java/seedu/findvisor/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"    //---------------- Tests for isSafeString --------------------------------------","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"    public void isSafeString_nullString_throwsNullPointerException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"        Assertions.assertThrows(NullPointerException.class, () -\u003e StringUtil.isSafeString(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"    public void isSafeString_emptyString_returnsTrue() {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"    public void isSafeString_onlyValidCharacterStrings_returnsTrue() {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"        // Alphabetical characters","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"alphabetsOnly\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"        // Numerical characters","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"98765\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"        // Alphanumeric characters","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"alphanumeric 01234\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        // Only white space","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"  \"));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        // Allowed special characters","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"_\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"\\\\\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"$()[]{}\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"!-+_\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"        // Mix","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"test string with 2 special characters::\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(StringUtil.isSafeString(\"test string with 7 special characters:\\\\^\u0026.?\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"    public void isSafeString_containsInvalidCharacters_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"        // Contains forward slash \"/\"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(StringUtil.isSafeString(\"/\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(StringUtil.isSafeString(\"test /\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(StringUtil.isSafeString(\"↑\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"        // Contains foreign characters","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(StringUtil.isSafeString(\"华文字体\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":175,"author":{"gitId":"Javiery3889"},"content":"    //---------------- Tests for containsIgnoreCase --------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":176,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"Javiery3889"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"Javiery3889"},"content":"     * Invalid equivalence partitions for substring: null, empty","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"Javiery3889"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"Javiery3889"},"content":"     * The three test cases below test one invalid input at a time.","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"Javiery3889"},"content":"    public void containsIgnoreCase_nullSubString_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIgnoreCase(","lastModifiedDate":"2024-03-15"},{"lineNumber":186,"author":{"gitId":"Javiery3889"},"content":"                \"typical sentence\", null));","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"Javiery3889"},"content":"    public void containsIgnoreCase_emptySubString_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":191,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(IllegalArgumentException.class, \"subString parameter cannot be empty\", ()","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"Javiery3889"},"content":"                -\u003e StringUtil.containsIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"Javiery3889"},"content":"    public void containsIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIgnoreCase(null, \"abc\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"Javiery3889"},"content":"    public void containsIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"Javiery3889"},"content":"        // Empty sentence","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2024-03-15"},{"lineNumber":204,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"Javiery3889"},"content":"        // Sentence does not fully contain substring","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":209,"author":{"gitId":"Javiery3889"},"content":"        // Sentence contains substring, but does not start with substring","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":212,"author":{"gitId":"Javiery3889"},"content":"        // Matches substring starting in the sentence, different upper/lower case letters","lastModifiedDate":"2024-03-14"},{"lineNumber":213,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"aaa bBb ccc\", \"aaa\")); // First word (boundary case)","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"aaa bbb ccc\", \"  aaa  \")); // Leading/trailing spaces","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":217,"author":{"gitId":"Javiery3889"},"content":"        // Sentence matches multiple words in substring","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"AAA bBb ccc  bbb\", \"AAA bBb\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"KohGuanZeh":51,"Javiery3889":46,"-":141}},{"path":"src/test/java/seedu/findvisor/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.ListCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.storage.StorageManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"    public void getTodaysMeetingPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getTodaysMeetingPersonList().remove(0));","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KohGuanZeh":28,"-":152}},{"path":"src/test/java/seedu/findvisor/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_NO_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_WITH_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"public class MessagesTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    public void formatMeeting_noRemark() {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d VALID_MEETING_NO_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"        String expected \u003d String.format(\"Meeting Start: %s; End: %s\",","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"                meeting.getStartString(), meeting.getEndString());","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"        assertEquals(expected, Messages.format(meeting));","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    public void formatMeeting_withRemark() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d VALID_MEETING_WITH_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        String expected \u003d String.format(\"Meeting Start: %s; End: %s\\nMeeting Remark: %s\",","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"                meeting.getStartString(), meeting.getEndString(), meeting.remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"        assertEquals(expected, Messages.format(meeting));","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"    public void formatRemark() {","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"        Remark remark \u003d new Remark(REMARK);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"        String expected \u003d String.format(\"Remark: %s\", REMARK);","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(expected, Messages.format(remark));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"KohGuanZeh":9,"Dethada":28}},{"path":"src/test/java/seedu/findvisor/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"KohGuanZeh":10,"-":38}},{"path":"src/test/java/seedu/findvisor/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"KohGuanZeh"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"KohGuanZeh"},"content":"        public ObservableList\u003cPerson\u003e getTodaysMeetingPersonList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"KohGuanZeh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"KohGuanZeh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"KohGuanZeh":17,"-":192}},{"path":"src/test/java/seedu/findvisor/logic/commands/AddTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Arixeyeion"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Arixeyeion"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Arixeyeion"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ARRAY_OF_MULTIPLE_VALID_TAG_STRINGS;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ARRAY_OF_SINGLE_VALID_TAG_STRING;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.SET_OF_VALID_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.SET_OF_VALID_TAGS;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Arixeyeion"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Arixeyeion"},"content":"public class AddTagCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Arixeyeion"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Arixeyeion"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(null, SET_OF_VALID_TAGS));","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"    public void constructor_nullTag_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Arixeyeion"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"    public void execute_validIndexUnfilteredListAddMultipleTags_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"        Person personToAddTagTo \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Arixeyeion"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(personToAddTagTo).addTags(ARRAY_OF_MULTIPLE_VALID_TAG_STRINGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Arixeyeion"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Arixeyeion"},"content":"        String expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAGS_TO_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Arixeyeion"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Arixeyeion"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Arixeyeion"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Arixeyeion"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Arixeyeion"},"content":"    public void execute_validIndexFilteredListAddMultipleTags_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Arixeyeion"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Arixeyeion"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Arixeyeion"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).addTags(","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Arixeyeion"},"content":"                ARRAY_OF_MULTIPLE_VALID_TAG_STRINGS).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Arixeyeion"},"content":"        String expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAGS_TO_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Arixeyeion"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Arixeyeion"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Arixeyeion"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Arixeyeion"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Arixeyeion"},"content":"    public void execute_validIndexUnfilteredListAddSingleTag_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Arixeyeion"},"content":"        Person personToAddTagTo \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"Arixeyeion"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(personToAddTagTo).addTags(ARRAY_OF_SINGLE_VALID_TAG_STRING);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"Arixeyeion"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Arixeyeion"},"content":"        String expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAGS_TO_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"Arixeyeion"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"Arixeyeion"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"Arixeyeion"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"Arixeyeion"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"Arixeyeion"},"content":"    public void execute_validIndexFilteredListAddSingleTag_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"Arixeyeion"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"Arixeyeion"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"Arixeyeion"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).addTags(","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"Arixeyeion"},"content":"                ARRAY_OF_SINGLE_VALID_TAG_STRING).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"Arixeyeion"},"content":"        String expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAGS_TO_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"Arixeyeion"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"Arixeyeion"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"Arixeyeion"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"Arixeyeion"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"Arixeyeion"},"content":"    public void execute_filteredListIndexOutOfBounds_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"Arixeyeion"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_THIRD_PERSON, SET_OF_VALID_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"Arixeyeion"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"Arixeyeion"},"content":"        assertCommandFailure(addTagCommand, model, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"Arixeyeion"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"Arixeyeion"},"content":"        final AddTagCommand standardAddTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"Arixeyeion"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommandWithSameValues \u003d new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"Arixeyeion"},"content":"        assertTrue(standardAddTagCommand.equals(addTagCommandWithSameValues));","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"Arixeyeion"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"Arixeyeion"},"content":"        assertTrue(standardAddTagCommand.equals(standardAddTagCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"Arixeyeion"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"Arixeyeion"},"content":"        assertFalse(standardAddTagCommand.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"Arixeyeion"},"content":"        // different command type -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"Arixeyeion"},"content":"        assertFalse(standardAddTagCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"Arixeyeion"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"Arixeyeion"},"content":"        assertFalse(standardAddTagCommand.equals(new AddTagCommand(INDEX_SECOND_PERSON, SET_OF_VALID_TAGS)));","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"Arixeyeion"},"content":"        // different tag set -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"Arixeyeion"},"content":"        assertFalse(standardAddTagCommand.equals(new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAG)));","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"Arixeyeion"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"Arixeyeion"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"Arixeyeion"},"content":"        Set\u003cTag\u003e setOfTags \u003d SET_OF_VALID_TAGS;","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(index, setOfTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"Arixeyeion"},"content":"        String expected \u003d AddTagCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", tags\u003d\" + setOfTags + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"Arixeyeion"},"content":"        assertEquals(expected, addTagCommand.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"Arixeyeion"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Arixeyeion":156}},{"path":"src/test/java/seedu/findvisor/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"KohGuanZeh":7,"-":25}},{"path":"src/test/java/seedu/findvisor/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"KohGuanZeh":1,"-":62}},{"path":"src/test/java/seedu/findvisor/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.commons.util.DateTimeUtil.parseDateString;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.DateTimeUtil.parseDateTimeString;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPhonePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91234567\";","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"    public static final String VALID_PHONE_BOB \u003d \"81234567\";","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"    public static final String VALID_TAG_FINANCIAL_PLAN \u003d \"PRUTravellerProtect\";","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    public static final String VALID_MEETING_REMARK \u003d \"Meeting with someone\";","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    public static final String VALID_MEETING_START_STR \u003d \"12-02-2024T12:00\";","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    public static final String VALID_MEETING_END_STR \u003d \"12-02-2024T13:00\";","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String REMARK \u003d \"Wants to migrate to England\";","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    public static final String VALID_DATE_STRING \u003d \"05-10-2024\";","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"    public static final LocalDate VALID_DATE \u003d parseDateString(VALID_DATE_STRING);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"Arixeyeion"},"content":"    public static final String TAG_DESC_SET \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND + \" \"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Arixeyeion"},"content":"            + PREFIX_TAG + VALID_TAG_FINANCIAL_PLAN;","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String REMARK_DESC \u003d \" \" + PREFIX_REMARK + REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"    public static final String MEETING_REMARK_DESC \u003d \" \" + PREFIX_MEETING_REMARK + VALID_MEETING_REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"    public static final String MEETING_DATE_DESC \u003d \" \" + PREFIX_MEETING + VALID_DATE_STRING;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"    public static final String EMPTY_NAME_DESC \u003d \" \" + PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"    public static final String EMPTY_PHONE_DESC \u003d \" \" + PREFIX_PHONE;","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"    public static final String EMPTY_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"    public static final String EMPTY_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"    public static final String EMPTY_TAG_DESC \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"    public static final String INCOMPLETE_TAG_DESC \u003d \" \" + PREFIX_TAG + \" \" + PREFIX_TAG + \"friends\";","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Arixeyeion"},"content":"    public static final String INVALID_TAG_DESC_SPACE \u003d \" \" + PREFIX_TAG + \"hub by\"; // \u0027 \u0027 not allowed in tags","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"Arixeyeion"},"content":"    public static final String INVALID_TAG_DESC_EMPTY \u003d \" \" + PREFIX_TAG + \"\"; // empty tag not allowed","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"    public static final String INVALID_MEETING_REMARK \u003d \"INVALID MEETING REMARK\".repeat(100);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"    public static final String INVALID_MEETING_START_STR \u003d \"INVALID MEETING START\";","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    public static final String INVALID_MEETING_END_STR \u003d \"INVALID MEETING END\";","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"    public static final String INVALID_DATE_STR \u003d \"2024/10/22\";","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_MEETING","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"            + INVALID_DATE_STR; // correct format is dd-MM-yyyy","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"    public static final Meeting VALID_MEETING_NO_REMARK \u003d new Meeting(parseDateTimeString(VALID_MEETING_START_STR),","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"                parseDateTimeString(VALID_MEETING_END_STR), \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"    public static final Meeting VALID_MEETING_WITH_REMARK \u003d new Meeting(parseDateTimeString(VALID_MEETING_START_STR),","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"                parseDateTimeString(VALID_MEETING_END_STR), VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"Arixeyeion"},"content":"    public static final String[] ARRAY_OF_MULTIPLE_VALID_TAG_STRINGS \u003d {VALID_TAG_FRIEND, VALID_TAG_FINANCIAL_PLAN};","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"Arixeyeion"},"content":"    public static final String[] ARRAY_OF_SINGLE_VALID_TAG_STRING \u003d {VALID_TAG_FINANCIAL_PLAN};","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"Arixeyeion"},"content":"    public static final Set\u003cTag\u003e SET_OF_VALID_TAGS \u003d SampleDataUtil.getTagSet(ARRAY_OF_MULTIPLE_VALID_TAG_STRINGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"Arixeyeion"},"content":"    public static final Set\u003cTag\u003e SET_OF_VALID_TAG \u003d SampleDataUtil.getTagSet(ARRAY_OF_SINGLE_VALID_TAG_STRING);","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"     * Creates a valid meeting that is in the future","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"    public static Meeting createValidMeeting() {","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"        return new Meeting(LocalDateTime.now().plusDays(1),","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"                LocalDateTime.now().plusDays(1).plusHours(1), \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"Javiery3889"},"content":"     * Creates a valid meeting that is in the future that is between two days","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"Javiery3889"},"content":"    public static Meeting createValidLongMeeting() {","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"Javiery3889"},"content":"        return new Meeting(LocalDateTime.now().plusDays(1),","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"Javiery3889"},"content":"                LocalDateTime.now().plusDays(2), \"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"Dethada"},"content":"     * Creates a valid meeting that is in the future with a non-empty remark","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"Dethada"},"content":"    public static Meeting createValidMeetingNonEmptyRemark() {","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"Dethada"},"content":"        return new Meeting(LocalDateTime.now().plusDays(1),","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"Dethada"},"content":"                LocalDateTime.now().plusDays(1).plusHours(1), VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"Dethada"},"content":"     * Creates a meeting that is in the past","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"Dethada"},"content":"    public static Meeting createOldMeeting() {","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"Dethada"},"content":"        return new Meeting(LocalDateTime.now().minusDays(1),","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"Dethada"},"content":"                LocalDateTime.now().minusDays(1).plusHours(1), VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":201,"author":{"gitId":"Javiery3889"},"content":"        // Use person\u0027s phone to identify","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"Javiery3889"},"content":"        String phone \u003d person.getPhone().value;","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"Javiery3889"},"content":"        model.updateFilteredPersonList(new PersonPhonePredicate(phone));","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Arixeyeion":14,"KohGuanZeh":16,"Javiery3889":29,"Dethada":37,"-":112}},{"path":"src/test/java/seedu/findvisor/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"KohGuanZeh":13,"-":107}},{"path":"src/test/java/seedu/findvisor/logic/commands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuZizhen"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"YuZizhen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"YuZizhen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"YuZizhen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"YuZizhen"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"YuZizhen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"YuZizhen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"YuZizhen"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"YuZizhen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"YuZizhen"},"content":" * {@code DeleteTagCommand}.","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"YuZizhen"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"YuZizhen"},"content":"public class DeleteTagCommandTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"YuZizhen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"YuZizhen"},"content":"    private Tag friendsTag \u003d new Tag(\"friends\");","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"YuZizhen"},"content":"    private Tag validTag \u003d new Tag(\"valid\");","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"YuZizhen"},"content":"    private Set\u003cTag\u003e targetTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"YuZizhen"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"YuZizhen"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(friendsTag);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, targetTag);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"YuZizhen"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, targetTag,","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"YuZizhen"},"content":"                personToEdit.getName());","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"YuZizhen"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(personToEdit).withTags();","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"YuZizhen"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"YuZizhen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"YuZizhen"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"YuZizhen"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"YuZizhen"},"content":"    public void execute_validIndexUnfilteredList_invalidTag() {","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"YuZizhen"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(validTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_THIRD_PERSON, targetTag);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"YuZizhen"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_CANNOT_FIND_TAG, targetTag,","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"YuZizhen"},"content":"                personToEdit.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"YuZizhen"},"content":"        assertCommandFailure(deleteTagCommand, model, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"YuZizhen"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"YuZizhen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(friendsTag);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, targetTag);","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"YuZizhen"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"YuZizhen"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"YuZizhen"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"YuZizhen"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(friendsTag);","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, targetTag);","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"YuZizhen"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, targetTag,","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"YuZizhen"},"content":"                personToEdit.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"YuZizhen"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(personToEdit).withTags();","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"YuZizhen"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"YuZizhen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"YuZizhen"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"YuZizhen"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"YuZizhen"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"YuZizhen"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(friendsTag);","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"YuZizhen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"YuZizhen"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"YuZizhen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, targetTag);","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"YuZizhen"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"YuZizhen"},"content":"    public void equals() {","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(friendsTag);","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteFirstCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, targetTag);","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteSecondCommand \u003d new DeleteTagCommand(INDEX_SECOND_PERSON, targetTag);","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"YuZizhen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"YuZizhen"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"YuZizhen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteFirstCommandCopy \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, targetTag);","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"YuZizhen"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"YuZizhen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"YuZizhen"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"YuZizhen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"YuZizhen"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"YuZizhen"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"YuZizhen"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"YuZizhen"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(friendsTag);","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, targetTag);","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"YuZizhen"},"content":"        System.out.println(deleteTagCommand.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"YuZizhen"},"content":"        String expected \u003d DeleteTagCommand.class.getCanonicalName() + \"{toDeleteTag\u003d\" + INDEX_FIRST_PERSON","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"YuZizhen"},"content":"                + \", tag\u003d\" + targetTag + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"YuZizhen"},"content":"        assertEquals(expected, deleteTagCommand.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"YuZizhen"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"YuZizhen":147}},{"path":"src/test/java/seedu/findvisor/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"Dethada"},"content":"     * Ensure that the meeting details are copied over when a person is edited.","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"Dethada"},"content":"    public void execute_copyMeetingDetails_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"Dethada"},"content":"        // The person at the third index of the unfiltered list has a non-empty meeting object","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"Dethada"},"content":"        Person personWithMeeting \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"Dethada"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personWithMeeting);","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"Dethada"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"Dethada"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"Dethada"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"Dethada"},"content":"        expectedModel.setPerson(personWithMeeting, editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"Dethada"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"KohGuanZeh"},"content":"     * Ensure that the remarks are copied over when a person is edited.","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"KohGuanZeh"},"content":"    public void execute_copyRemarks_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"KohGuanZeh"},"content":"        // The person at the second index of the unfiltered list has a non-empty meeting object","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"KohGuanZeh"},"content":"        Person personWithRemark \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"KohGuanZeh"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personWithRemark);","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"KohGuanZeh"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"KohGuanZeh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"KohGuanZeh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"KohGuanZeh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"KohGuanZeh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"KohGuanZeh"},"content":"        expectedModel.setPerson(personWithRemark, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"KohGuanZeh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"KohGuanZeh":43,"Dethada":22,"-":162}},{"path":"src/test/java/seedu/findvisor/logic/commands/EditMeetingDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand.EditMeetingDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"public class EditMeetingDescriptorTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meeting).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"        assertTrue(descriptor.equals(descriptor));","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"        assertFalse(descriptor.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        assertFalse(descriptor.equals(5));","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor editedDescriptor \u003d new EditMeetingDescriptorBuilder(descriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"                .withRemark(\"Different remark\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        assertFalse(descriptor.equals(editedDescriptor));","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        // different start -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        editedDescriptor \u003d new EditMeetingDescriptorBuilder(descriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"                .withStart(meeting.getStart().plusDays(1)).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        assertFalse(descriptor.equals(editedDescriptor));","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        // different end -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        editedDescriptor \u003d new EditMeetingDescriptorBuilder(descriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"                .withEnd(meeting.getEnd().plusDays(1)).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        assertFalse(descriptor.equals(editedDescriptor));","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        String expected \u003d EditMeetingDescriptor.class.getCanonicalName() + \"{start\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"                + editMeetingDescriptor.getStart().orElse(null) + \", end\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"                + editMeetingDescriptor.getEnd().orElse(null) + \", remark\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"                + editMeetingDescriptor.getRemark().orElse(null) + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        assertEquals(expected, editMeetingDescriptor.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":53}},{"path":"src/test/java/seedu/findvisor/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"KohGuanZeh":10,"-":61}},{"path":"src/test/java/seedu/findvisor/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"KohGuanZeh":5,"-":15}},{"path":"src/test/java/seedu/findvisor/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_DATE_STRING;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonAddressPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonEmailPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonMeetingPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonMeetingRemarkPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonNamePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPhonePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonRemarkPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.tag.PersonTagsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate firstNamePredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"                new PersonNamePredicate(VALID_NAME_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate secondNamePredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"                new PersonNamePredicate(VALID_NAME_BOB);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate firstEmailPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"                new PersonEmailPredicate(VALID_EMAIL_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate secondEmailPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"                new PersonEmailPredicate(VALID_EMAIL_BOB);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate firstPhonePredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"                new PersonPhonePredicate(VALID_PHONE_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate secondPhonePredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"                new PersonPhonePredicate(VALID_PHONE_BOB);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate firstTagsPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"                new PersonTagsPredicate(Arrays.asList(VALID_TAG_HUSBAND));","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate secondTagsPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"                new PersonTagsPredicate(Arrays.asList(VALID_TAG_FRIEND));","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        testCommandEquality(firstNamePredicate, secondNamePredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        testCommandEquality(firstEmailPredicate, secondEmailPredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        testCommandEquality(firstPhonePredicate, secondPhonePredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        testCommandEquality(firstTagsPredicate, secondTagsPredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"    // Helper method to test equality of FindCommand objects","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"    private void testCommandEquality(PersonPredicate firstPredicate, PersonPredicate secondPredicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"    public void execute_nonExistentName_noPersonFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Name containing \\\"%1$s\\\"\", VALID_NAME_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 0, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate namePredicate \u003d new PersonNamePredicate(VALID_NAME_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(namePredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"    public void execute_nonExistentPhone_noPersonFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Phone containing \\\"%1$s\\\"\", VALID_PHONE_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 0, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate phonePredicate \u003d new PersonPhonePredicate(VALID_PHONE_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"        Command command \u003d new FindCommand(phonePredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(phonePredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"Javiery3889"},"content":"    public void execute_nonExistentEmail_noPersonFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Email containing \\\"%1$s\\\"\", VALID_EMAIL_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 0, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate predicate \u003d new PersonEmailPredicate(VALID_EMAIL_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":136,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"Javiery3889"},"content":"    public void execute_nonExistentAddress_noPersonFound() {","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Address containing \\\"%1$s\\\"\", VALID_ADDRESS_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 0, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate predicate \u003d new PersonAddressPredicate(VALID_ADDRESS_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"Javiery3889"},"content":"    public void execute_nonExistentMeetingDate_noPersonFound() {","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Meeting on \\\"%1$s\\\"\", VALID_DATE_STRING);","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 0, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate predicate \u003d new PersonMeetingPredicate(VALID_DATE);","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"Javiery3889"},"content":"    public void execute_nonExistentRemark_noPersonFound() {","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Person remark containing \\\"%1$s\\\"\", REMARK);","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 0, expectedSearchString);","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate predicate \u003d new PersonRemarkPredicate(REMARK);","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":170,"author":{"gitId":"Javiery3889"},"content":"    public void execute_nonExistentTag_noPersonFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Tags containing \\\"%1$s\\\"\", VALID_TAG_HUSBAND);","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 0, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate tagsPredicate \u003d new PersonTagsPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"Javiery3889"},"content":"            Arrays.asList(new String[]{VALID_TAG_HUSBAND}));","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"Javiery3889"},"content":"        Command command \u003d new FindCommand(tagsPredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(tagsPredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"Javiery3889"},"content":"    public void execute_existingName_personFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Name containing \\\"%1$s\\\"\", ALICE.getName().fullName);","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 1, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate predicate \u003d new PersonNamePredicate(ALICE.getName().fullName);","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":189,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":192,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"Javiery3889"},"content":"    public void execute_existingPhone_personFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Phone containing \\\"%1$s\\\"\", BENSON.getPhone().value);","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 1, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate predicate \u003d new PersonPhonePredicate(BENSON.getPhone().value);","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"Javiery3889"},"content":"    public void execute_existingEmail_personFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Email containing \\\"%1$s\\\"\", CARL.getEmail().value);","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 1, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate predicate \u003d new PersonEmailPredicate(CARL.getEmail().value);","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":209,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":212,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":213,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":214,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"Javiery3889"},"content":"    public void execute_existingAddress_personFound() {","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Address containing \\\"%1$s\\\"\", BENSON.getAddress().value);","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 1, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate predicate \u003d new PersonAddressPredicate(BENSON.getAddress().value);","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"Javiery3889"},"content":"    public void execute_existingMeetingDate_personFound() {","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"Javiery3889"},"content":"        Meeting existingMeeting \u003d CARL.getMeeting().get();","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"Javiery3889"},"content":"        LocalDate existingMeetingStartDate \u003d existingMeeting.start.toLocalDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Meeting on \\\"%1$s\\\"\",","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"Javiery3889"},"content":"                existingMeetingStartDate.format(DateTimeUtil.DATE_FORMAT));","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 1, expectedSearchString);","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate predicate \u003d new PersonMeetingPredicate(existingMeetingStartDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"Javiery3889"},"content":"    public void execute_existingMeetingRemark_personFound() {","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"Javiery3889"},"content":"        Meeting existingMeeting \u003d CARL.getMeeting().get();","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Meeting remark containing \\\"%1$s\\\"\",","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"Javiery3889"},"content":"                existingMeeting.getRemark());","lastModifiedDate":"2024-04-01"},{"lineNumber":245,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":246,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 1, expectedSearchString);","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate predicate \u003d new PersonMeetingRemarkPredicate(existingMeeting.getRemark());","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":251,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":252,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":253,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":254,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"Javiery3889"},"content":"    public void execute_existingTags_personFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"Javiery3889"},"content":"        String expectedSearchString \u003d String.format(\"Tags containing \\\"%1$s\\\"\", VALID_TAG_FRIEND);","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FIND_COMMAND_RESULT, 3, expectedSearchString);","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate predicate \u003d new PersonTagsPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"Javiery3889"},"content":"            Arrays.asList(new String[]{VALID_TAG_FRIEND}));","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"Javiery3889"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"Javiery3889"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"Javiery3889"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate predicate \u003d new PersonNamePredicate(\"keyword\");","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KohGuanZeh":7,"Javiery3889":207,"-":59}},{"path":"src/test/java/seedu/findvisor/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"KohGuanZeh":5,"-":15}},{"path":"src/test/java/seedu/findvisor/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KohGuanZeh":8,"-":31}},{"path":"src/test/java/seedu/findvisor/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"    public void constructor_nullRemark_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RemarkCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"    public void execute_nonEmptyRemark_updateRemarkSuccess() {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d Optional.of(new Remark(REMARK));","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, remark);","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"        Person targetPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(targetPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"        Person editedPerson \u003d personInList.withRemark(remark).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"                targetPerson.getName(), REMARK);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"    public void execute_emptyRemark_removeRemarkSuccess() {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e emptyRemark \u003d Optional.empty();","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"        // Second person has a remark","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_SECOND_PERSON, emptyRemark);","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"        Person targetPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(targetPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"        Person editedPerson \u003d personInList.withRemark(emptyRemark).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_REMOVE_REMARK_SUCCESS, targetPerson.getName());","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(1), editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"KohGuanZeh"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"KohGuanZeh"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"KohGuanZeh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d Optional.of(new Remark(REMARK));","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, remark);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"KohGuanZeh"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"KohGuanZeh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"KohGuanZeh"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, Optional.of(new Remark(REMARK)));","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"KohGuanZeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d Optional.of(new Remark(REMARK));","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON, remark);","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"KohGuanZeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON, remark)));","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"KohGuanZeh"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"KohGuanZeh"},"content":"                Optional.of(new Remark(\"Different Remark\")))));","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"KohGuanZeh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"KohGuanZeh"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d Optional.of(new Remark(REMARK));","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(index, remark);","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"KohGuanZeh"},"content":"        String expected \u003d RemarkCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", remark\u003d\"","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"KohGuanZeh"},"content":"                + remark.map(r -\u003e r.value).orElse(\"\") + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(expected, remarkCommand.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"KohGuanZeh":116}},{"path":"src/test/java/seedu/findvisor/logic/commands/RescheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeetingNonEmptyRemark;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand.EditMeetingDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.MeetingBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"public class RescheduleCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    private Meeting meetingNoRemark \u003d createValidMeeting();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    private Meeting meetingWithRemark \u003d createValidMeetingNonEmptyRemark();","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meetingWithRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand editCommand \u003d new RescheduleCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList()","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"                .get(INDEX_THIRD_PERSON.getZeroBased()))","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"                .withMeeting(Optional.of(meetingWithRemark)).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(RescheduleCommand.MESSAGE_RESCHEDULE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"                editedPerson.getName(), Messages.format(editedPerson.getMeeting().get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased()), editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder()","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"                .withEnd(MeetingBuilder.DEFAULT_END).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand editCommand \u003d new RescheduleCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(personToEdit.getMeeting().get())","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"                .withEnd(MeetingBuilder.DEFAULT_END).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).withMeeting(Optional.of(editedMeeting)).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(RescheduleCommand.MESSAGE_RESCHEDULE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"                editedPerson.getName(), Messages.format(editedPerson.getMeeting().get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased()), editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meetingWithRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand editCommand \u003d new RescheduleCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"    public void execute_rescheduleEmptyMeeting_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meetingNoRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand editCommand \u003d new RescheduleCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(editCommand, model, RescheduleCommand.MESSAGE_CANNOT_RESCHEDULE_NON_EXISTENT_MEETING);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    public void execute_rescheduleMeetingToThePast_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meetingNoRemark)","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"                .withStart(LocalDateTime.now().minusDays(1)).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand editCommand \u003d new RescheduleCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_CANNOT_SCHEDULE_MEETING_IN_THE_PAST);","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        final EditMeetingDescriptor standardDescriptor \u003d new EditMeetingDescriptorBuilder(meetingNoRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"        final RescheduleCommand standardCommand \u003d new RescheduleCommand(INDEX_THIRD_PERSON, standardDescriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor copyDescriptor \u003d new EditMeetingDescriptorBuilder(meetingNoRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand commandWithSameValues \u003d new RescheduleCommand(INDEX_THIRD_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand commandWithDifferentIndex \u003d new RescheduleCommand(INDEX_FIRST_PERSON, standardDescriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(commandWithDifferentIndex));","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor editedDescriptor \u003d new EditMeetingDescriptorBuilder(meetingWithRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand commandWithDifferentDescriptor \u003d new RescheduleCommand(INDEX_THIRD_PERSON, editedDescriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(commandWithDifferentDescriptor));","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meetingWithRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand command \u003d new RescheduleCommand(index, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"        String expected \u003d RescheduleCommand.class.getCanonicalName() + \"{toReschedule\u003d\" + index","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"                + \", editMeetingDescriptor\u003d\" + descriptor.toString() + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"Dethada"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":135}},{"path":"src/test/java/seedu/findvisor/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"//@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createOldMeeting;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeetingNonEmptyRemark;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    public void constructor_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    public void execute_okayMeeting_scheduleSuccessful() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        Person targetPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(targetPerson).withMeeting(Optional.of(meeting));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.MESSAGE_SCHEDULE_SUCCESS, targetPerson.getName(),","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"                meeting.getStartString(), meeting.getEndString());","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    public void execute_multipleMeeting_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        Person targetPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(targetPerson).withMeeting(Optional.of(meeting));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        model.setPerson(targetPerson, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(scheduleCommand, model, ScheduleCommand.MESSAGE_CANNOT_SCHEDULE_MULTIPLE_MEETINGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"    public void execute_meetingTimeInPast_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createOldMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_CANNOT_SCHEDULE_MEETING_IN_THE_PAST);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"    public void execute_meetingRemarkPresent_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeetingNonEmptyRemark();","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, meeting);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        Person targetPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(targetPerson).withMeeting(Optional.of(meeting));","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.MESSAGE_SCHEDULE_SUCCESS, targetPerson.getName(),","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"                meeting.getStartString(), meeting.getEndString());","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"        final Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"        final ScheduleCommand standardCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand commandWithSameValues \u003d new ScheduleCommand(INDEX_FIRST_PERSON, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"Dethada"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"Dethada"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"Dethada"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(new ScheduleCommand(INDEX_SECOND_PERSON, meeting)));","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"Dethada"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"Dethada"},"content":"        assertFalse(standardCommand.equals(new ScheduleCommand(INDEX_FIRST_PERSON, createOldMeeting())));","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"Dethada"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"Dethada"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand editCommand \u003d new ScheduleCommand(index, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"Dethada"},"content":"        String expected \u003d ScheduleCommand.class.getCanonicalName() + \"{toSchedule\u003d\" + index + \", meeting\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"Dethada"},"content":"                + meeting + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"Dethada"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"Dethada"},"content":"//@@author","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":157}},{"path":"src/test/java/seedu/findvisor/logic/commands/UnscheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":" * {@code UnscheduleCommand}.","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"public class UnscheduleCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        Person personToUnschedule \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleCommand \u003d new UnscheduleCommand(INDEX_THIRD_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(personToUnschedule).withMeeting(Optional.empty());","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(UnscheduleCommand.MESSAGE_UNSCHEDULE_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"                personToUnschedule.getName());","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        expectedModel.setPerson(personToUnschedule, editedPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        assertCommandSuccess(unscheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleCommand \u003d new UnscheduleCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(unscheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        Person personToUnschedule \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleCommand \u003d new UnscheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(personToUnschedule).withMeeting(Optional.empty());","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        Person editedPerson \u003d personBuilder.build();","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(UnscheduleCommand.MESSAGE_UNSCHEDULE_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"                personToUnschedule.getName());","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        expectedModel.setPerson(personToUnschedule, editedPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        assertCommandSuccess(unscheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleCommand \u003d new UnscheduleCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(unscheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    public void execute_noMeetingToUnschedule_throwsCommandException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleCommand \u003d new UnscheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"        assertCommandFailure(unscheduleCommand, model, String.format(UnscheduleCommand.MESSAGE_NO_MEETING_TO_UNSCHEDULE,","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"                model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleFirstCommand \u003d new UnscheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleSecondCommand \u003d new UnscheduleCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"        assertTrue(unscheduleFirstCommand.equals(unscheduleFirstCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleFirstCommandCopy \u003d new UnscheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"        assertTrue(unscheduleFirstCommand.equals(unscheduleFirstCommandCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"        assertFalse(unscheduleFirstCommand.equals(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        assertFalse(unscheduleFirstCommand.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"        assertFalse(unscheduleFirstCommand.equals(unscheduleSecondCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand unscheduleCommand \u003d new UnscheduleCommand(targetIndex);","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"        String expected \u003d UnscheduleCommand.class.getCanonicalName() + \"{toUnschedule\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"        assertEquals(expected, unscheduleCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Dethada":127}},{"path":"src/test/java/seedu/findvisor/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"KohGuanZeh":43,"-":153}},{"path":"src/test/java/seedu/findvisor/logic/parser/AddTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Arixeyeion"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_TAG_DESC_EMPTY;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_TAG_DESC_SPACE;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.SET_OF_VALID_TAGS;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.TAG_DESC_SET;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Arixeyeion"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.commands.AddTagCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Arixeyeion"},"content":"public class AddTagCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Arixeyeion"},"content":"            AddTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"    private static final String MESSAGE_INVALID_TAG \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Arixeyeion"},"content":"            AddTagCommand.MESSAGE_TAG_CONSTRAINTS_VIOLATED);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Arixeyeion"},"content":"    private AddTagCommandParser parser \u003d new AddTagCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Arixeyeion"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Arixeyeion"},"content":"        // no index specified, 1 valid tag","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, VALID_TAG_HUSBAND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Arixeyeion"},"content":"        // no tag specified","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Arixeyeion"},"content":"        // no index and no tag specified","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Arixeyeion"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"                AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Arixeyeion"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Arixeyeion"},"content":"        // negative index","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"-5\" + VALID_TAG_HUSBAND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Arixeyeion"},"content":"        // zero index","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"0\" + VALID_TAG_HUSBAND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Arixeyeion"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Arixeyeion"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Arixeyeion"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Arixeyeion"},"content":"        //invalid tag input, non-alphanumeric characters","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, MESSAGE_INVALID_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Arixeyeion"},"content":"        //invalid tag input, tag contains space","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC_SPACE, MESSAGE_INVALID_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Arixeyeion"},"content":"        //invalid tag input, tag is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Arixeyeion"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC_EMPTY, MESSAGE_INVALID_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Arixeyeion"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Arixeyeion"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Arixeyeion"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_SET;","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(targetIndex, SET_OF_VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Arixeyeion"},"content":"        assertParseSuccess(parser, userInput, addTagCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Arixeyeion"},"content":"    public void parse_multipleRepeatedTags_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Arixeyeion"},"content":"        //adding duplicate tags will not do anything to the tags as they are contained in a set","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Arixeyeion"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Arixeyeion"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_SET + TAG_DESC_SET + TAG_DESC_SET;","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(targetIndex, SET_OF_VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"Arixeyeion"},"content":"        assertParseSuccess(parser, userInput, addTagCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Arixeyeion"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Arixeyeion":89}},{"path":"src/test/java/seedu/findvisor/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.DateTimeUtil.dateTimeToInputString;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.SET_OF_VALID_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_FINANCIAL_PLAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeetingNonEmptyRemark;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.logic.commands.AddTagCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.FindCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.ListCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand.EditMeetingDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.UnscheduleCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonEmailPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonNamePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPhonePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.tag.PersonTagsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.MeetingUtil;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"        // Find using name","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"        FindCommand findNameCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME + VALID_NAME_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(new FindCommand(new PersonNamePredicate(VALID_NAME_AMY)), findNameCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"        // Find using email","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"        FindCommand findEmailCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(new FindCommand(new PersonEmailPredicate(VALID_EMAIL_AMY)), findEmailCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"        // Find using phone","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"        FindCommand findPhoneCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_PHONE + VALID_PHONE_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(new FindCommand(new PersonPhonePredicate(VALID_PHONE_AMY)), findPhoneCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"        // Find using tags","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"        FindCommand findTagsCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"                FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"Javiery3889"},"content":"                + PREFIX_TAG + VALID_TAG_FRIEND + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"Javiery3889"},"content":"                + PREFIX_TAG + VALID_TAG_HUSBAND);","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(new FindCommand(new PersonTagsPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"                Arrays.asList(new String[]{VALID_TAG_FRIEND, VALID_TAG_HUSBAND}))), findTagsCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"Dethada"},"content":"    public void parseCommand_schedule() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand command \u003d (ScheduleCommand) parser.parseCommand(","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"Dethada"},"content":"                ScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"Dethada"},"content":"                + PREFIX_START_DATETIME + dateTimeToInputString(meeting.start) + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"Dethada"},"content":"                + PREFIX_END_DATETIME + dateTimeToInputString(meeting.end));","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"Dethada"},"content":"        assertEquals(new ScheduleCommand(INDEX_FIRST_PERSON, meeting), command);","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"Dethada"},"content":"        meeting \u003d createValidMeetingNonEmptyRemark();","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"Dethada"},"content":"        command \u003d (ScheduleCommand) parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"Dethada"},"content":"                ScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"Dethada"},"content":"                + PREFIX_START_DATETIME + dateTimeToInputString(meeting.start) + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"Dethada"},"content":"                + PREFIX_END_DATETIME + dateTimeToInputString(meeting.end) + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"Dethada"},"content":"                + PREFIX_MEETING_REMARK + VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"Dethada"},"content":"        assertEquals(new ScheduleCommand(INDEX_FIRST_PERSON, meeting), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"Dethada"},"content":"    public void parseCommand_reschedule() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meeting).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand command \u003d (RescheduleCommand) parser.parseCommand(","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"Dethada"},"content":"                RescheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"Dethada"},"content":"                + MeetingUtil.getEditMeetingDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"Dethada"},"content":"        assertEquals(new RescheduleCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"Dethada"},"content":"    public void parseCommand_unschedule() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"Dethada"},"content":"        UnscheduleCommand command \u003d (UnscheduleCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Dethada"},"content":"                UnscheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"Dethada"},"content":"        assertEquals(new UnscheduleCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"KohGuanZeh"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"KohGuanZeh"},"content":"                RemarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"KohGuanZeh"},"content":"                        + PREFIX_REMARK + REMARK);","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, ParserUtil.parseRemark(REMARK)), command);","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"Arixeyeion"},"content":"    public void parseCommand_addTag() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"Arixeyeion"},"content":"        AddTagCommand command \u003d (AddTagCommand) parser.parseCommand(AddTagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"Arixeyeion"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_TAG + VALID_TAG_FINANCIAL_PLAN);","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"Arixeyeion"},"content":"        assertEquals(new AddTagCommand(INDEX_FIRST_PERSON, SET_OF_VALID_TAG), command);","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Arixeyeion":12,"KohGuanZeh":30,"Javiery3889":37,"Dethada":47,"-":69}},{"path":"src/test/java/seedu/findvisor/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"KohGuanZeh":1,"-":149}},{"path":"src/test/java/seedu/findvisor/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.Command;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"KohGuanZeh":3,"-":36}},{"path":"src/test/java/seedu/findvisor/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"KohGuanZeh":6,"-":26}},{"path":"src/test/java/seedu/findvisor/logic/parser/DeleteTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuZizhen"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"YuZizhen"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"YuZizhen"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"YuZizhen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"YuZizhen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.logic.commands.DeleteTagCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"YuZizhen"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"YuZizhen"},"content":"public class DeleteTagCommandParserTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"YuZizhen"},"content":"    private static final String TAGNAME \u003d \"friends\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"YuZizhen"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"YuZizhen"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"YuZizhen"},"content":"    private DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"YuZizhen"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"YuZizhen"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"YuZizhen"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"YuZizhen"},"content":"                DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuZizhen"},"content":"    public void parse_validArgs_returnsDeleteTagCommand() {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"YuZizhen"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"YuZizhen"},"content":"        Set\u003cTag\u003e targetTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"YuZizhen"},"content":"        Tag tag \u003d new Tag(TAGNAME);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"YuZizhen"},"content":"        targetTag.add(tag);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"YuZizhen"},"content":"        DeleteTagCommand expectedDeleteTagCommand \u003d new DeleteTagCommand(targetIndex, targetTag);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"YuZizhen"},"content":"        assertParseSuccess(parser, targetIndex.getOneBased() + \" \" + PREFIX_TAG + TAGNAME, expectedDeleteTagCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"YuZizhen"},"content":"    public void parse_invalidArgs_returnsIndexError() {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"YuZizhen"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"YuZizhen"},"content":"    public void parse_invalidArgs_returnsTagError() {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"YuZizhen"},"content":"        assertParseFailure(parser, \"1 t/-something\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"YuZizhen"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"YuZizhen"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"YuZizhen"},"content":"    public void parse_invalidArgs_returnsTagMissing() {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"YuZizhen"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"YuZizhen"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"YuZizhen"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"YuZizhen":55}},{"path":"src/test/java/seedu/findvisor/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"1\", Messages.MESSAGE_REQUIRE_AT_LEAST_ONE_FIELD);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"KohGuanZeh":42,"Dethada":1,"-":165}},{"path":"src/test/java/seedu/findvisor/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMPTY_ADDRESS_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMPTY_EMAIL_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMPTY_NAME_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMPTY_PHONE_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.EMPTY_TAG_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INCOMPLETE_TAG_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.MEETING_DATE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.MEETING_REMARK_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_REMARK;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.FindCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonAddressPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonEmailPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonMeetingPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonMeetingRemarkPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonNamePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonPhonePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonRemarkPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.tag.PersonTagsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"  \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        // parse name","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"                new FindCommand(new PersonNamePredicate(\"Bob Choo\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        // multiple whitespaces before and after name keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"        String paddedKeyword \u003d \"\\n \\t \" + NAME_DESC_BOB + \"\\n \\t\";","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, paddedKeyword, expectedFindCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"        // parse email","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"        expectedFindCommand \u003d new FindCommand(new PersonEmailPredicate(\"amy@example.com\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, EMAIL_DESC_AMY, expectedFindCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"        // parse phone","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        expectedFindCommand \u003d new FindCommand(new PersonPhonePredicate(\"81234567\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, PHONE_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        // parse address","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        expectedFindCommand \u003d new FindCommand(new PersonAddressPredicate(\"Block 123, Bobby Street 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, ADDRESS_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"        // parse meeting date","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"        expectedFindCommand \u003d new FindCommand(new PersonMeetingPredicate(VALID_DATE));","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, MEETING_DATE_DESC, expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"        // parse remark","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"        expectedFindCommand \u003d new FindCommand(new PersonRemarkPredicate(REMARK));","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, REMARK_DESC, expectedFindCommand);","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"        // parse meeting remark","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"        expectedFindCommand \u003d new FindCommand(new PersonMeetingRemarkPredicate(VALID_MEETING_REMARK));","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, MEETING_REMARK_DESC, expectedFindCommand);","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"        // parse multiple tags","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"        expectedFindCommand \u003d new FindCommand(new PersonTagsPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"                Arrays.asList(new String[]{\"friend\", \"husband\"})));","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND, expectedFindCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NAME_DESC_AMY,","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + EMAIL_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"        // Empty string","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"        // Whitespaces only","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, \"     \", expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"Javiery3889"},"content":"        // Invalid prefix","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, \"@/test\", expectedMessage);","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"        // Invalid and valid prefix","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, \"@/test \" + NAME_DESC_AMY, expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"Javiery3889"},"content":"        // Multiple valid prefixes","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + \" \" + NAME_DESC_AMY, expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"Javiery3889"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"Javiery3889"},"content":"        // Empty name prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, EMPTY_NAME_DESC, String.format(Messages.MESSAGE_EMPTY_FIELD, PREFIX_NAME));","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"Javiery3889"},"content":"        // Empty email prefix","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, EMPTY_EMAIL_DESC, String.format(Messages.MESSAGE_EMPTY_FIELD, PREFIX_EMAIL));","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"Javiery3889"},"content":"        // Empty phone prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, EMPTY_PHONE_DESC, String.format(Messages.MESSAGE_EMPTY_FIELD, PREFIX_PHONE));","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"Javiery3889"},"content":"        // Empty address prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, EMPTY_ADDRESS_DESC, String.format(Messages.MESSAGE_EMPTY_FIELD, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"Javiery3889"},"content":"        // Empty tag prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, EMPTY_TAG_DESC, String.format(Messages.MESSAGE_EMPTY_FIELD, PREFIX_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"Javiery3889"},"content":"        // One empty tag prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"Javiery3889"},"content":"        // Empty tag prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"Javiery3889"},"content":"        assertParseFailure(parser, INCOMPLETE_TAG_DESC, String.format(Messages.MESSAGE_EMPTY_FIELD, PREFIX_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"KohGuanZeh":5,"Javiery3889":125,"-":22}},{"path":"src/test/java/seedu/findvisor/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"    private static final String INVALID_DATE_STRING \u003d \"10/12/2012\";","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    private static final String INVALID_DATETIME_STRING \u003d \"INVALID DATETIME STRING\";","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"    private static final String INVALID_REMARK \u003d \"/r is ♀\";","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"Arixeyeion"},"content":"    private static final String VALID_NAME_EXTENDED \u003d \"Rachel Lee Walker\";","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"    private static final String VALID_NAME_WITH_BIG_SPACE_IN_BETWEEN \u003d \"Rachel       Walker\";","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Arixeyeion"},"content":"    private static final String VALID_NAME_WITH_DIFFERING_SPACES \u003d \"Rachel  Lee  Walker\";","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Arixeyeion"},"content":"    private static final String VALID_PHONE \u003d \"99123456\";","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"    private static final String VALID_PHONE_WITH_SPACE_BETWEEN \u003d \"9912           3456\";","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    private static final String VALID_DATE_STRING \u003d \"10-12-2024\";","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    private static final String VALID_DATETIME_STRING \u003d \"10-12-2024T14:00\";","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"    private static final String VALID_REMARK \u003d \"Wants to own 2 luxury cars worth $3 million each\";","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    private static final LocalDateTime START_DATETIME \u003d LocalDateTime.of(2024, 12, 1, 13, 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    private static final LocalDateTime END_DATETIME \u003d LocalDateTime.of(2024, 12, 1, 14, 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Arixeyeion"},"content":"    public void parseName_validValueWithBigSpaceInBetween_returnsTrimmedName() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Arixeyeion"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Arixeyeion"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME_WITH_BIG_SPACE_IN_BETWEEN));","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Arixeyeion"},"content":"    public void parseName_validValueWithDifferingSpaces_returnsTrimmedName() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Arixeyeion"},"content":"        Name expectedName \u003d new Name(VALID_NAME_EXTENDED);","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Arixeyeion"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME_WITH_DIFFERING_SPACES));","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"Arixeyeion"},"content":"    public void parsePhone_validValueWithWhitespaceInBetween_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"Arixeyeion"},"content":"        String phoneWithWhitespaceInBetween \u003d VALID_PHONE_WITH_SPACE_BETWEEN;","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"Arixeyeion"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"Arixeyeion"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespaceInBetween));","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":235,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"Javiery3889"},"content":"    public void parseMeetingDate_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeetingDate((String) null));","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"Javiery3889"},"content":"    public void parseMeetingDate_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingDate(INVALID_DATE_STRING));","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"Javiery3889"},"content":"    public void parseMeetingDate_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"Javiery3889"},"content":"        LocalDate expectedMeetingDate \u003d LocalDate.parse(VALID_DATE_STRING, DateTimeUtil.DATE_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expectedMeetingDate, ParserUtil.parseMeetingDate(VALID_DATE_STRING));","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"Javiery3889"},"content":"    public void parseMeetingDate_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"Javiery3889"},"content":"        String meetingDateWithWhitespace \u003d WHITESPACE + VALID_DATE_STRING + WHITESPACE;","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"Javiery3889"},"content":"        LocalDate expectedMeetingDate \u003d LocalDate.parse(VALID_DATE_STRING, DateTimeUtil.DATE_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expectedMeetingDate, ParserUtil.parseMeetingDate(meetingDateWithWhitespace));","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":259,"author":{"gitId":"KohGuanZeh"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":260,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":261,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":262,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":263,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":264,"author":{"gitId":"KohGuanZeh"},"content":"    public void parseRemark_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":265,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRemark(INVALID_REMARK));","lastModifiedDate":"2024-03-31"},{"lineNumber":266,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":267,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":268,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":269,"author":{"gitId":"KohGuanZeh"},"content":"    public void parseRemark_valueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2024-03-31"},{"lineNumber":270,"author":{"gitId":"KohGuanZeh"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2024-03-31"},{"lineNumber":271,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK).get());","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"KohGuanZeh"},"content":"    public void parseRemark_valueWithWhitespace_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"KohGuanZeh"},"content":"        String remarkWithWhitespace \u003d WHITESPACE + VALID_REMARK + WHITESPACE;","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"KohGuanZeh"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2024-03-31"},{"lineNumber":278,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(remarkWithWhitespace).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":279,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":280,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"KohGuanZeh"},"content":"    public void parseRemark_emptyValue_returnsOptionalEmpty() throws Exception {","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(Optional.empty(), ParserUtil.parseRemark(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":285,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":286,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":287,"author":{"gitId":"Dethada"},"content":"    public void parseMeetingDateTime_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":288,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeetingDateTime(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":289,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":290,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":291,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":292,"author":{"gitId":"Dethada"},"content":"    public void parseMeetingDateTime_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":293,"author":{"gitId":"Dethada"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingDateTime(INVALID_DATETIME_STRING));","lastModifiedDate":"2024-04-01"},{"lineNumber":294,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":295,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":296,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":297,"author":{"gitId":"Dethada"},"content":"    public void parseMeetingDateTime_validValue_returnsLocalDateTime() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":298,"author":{"gitId":"Dethada"},"content":"        assertEquals(DateTimeUtil.parseDateTimeString(VALID_DATETIME_STRING),","lastModifiedDate":"2024-04-01"},{"lineNumber":299,"author":{"gitId":"Dethada"},"content":"                ParserUtil.parseMeetingDateTime(VALID_DATETIME_STRING));","lastModifiedDate":"2024-04-01"},{"lineNumber":300,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":301,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":302,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":303,"author":{"gitId":"Dethada"},"content":"    public void parseMeetingRemark_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeetingRemark(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":305,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":306,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":307,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":308,"author":{"gitId":"Dethada"},"content":"    public void parseMeetingRemark_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":309,"author":{"gitId":"Dethada"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingRemark(INVALID_REMARK));","lastModifiedDate":"2024-04-01"},{"lineNumber":310,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":311,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":312,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":313,"author":{"gitId":"Dethada"},"content":"    public void parseMeetingRemark_validValue_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":314,"author":{"gitId":"Dethada"},"content":"        assertEquals(VALID_REMARK, ParserUtil.parseMeetingRemark(VALID_REMARK));","lastModifiedDate":"2024-04-01"},{"lineNumber":315,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":316,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":317,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":318,"author":{"gitId":"Dethada"},"content":"    public void parseMeeting_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":319,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeeting(null, null, null));","lastModifiedDate":"2024-04-01"},{"lineNumber":320,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeeting(START_DATETIME, null, null));","lastModifiedDate":"2024-04-01"},{"lineNumber":321,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeeting(START_DATETIME, END_DATETIME, null));","lastModifiedDate":"2024-04-01"},{"lineNumber":322,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":323,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":324,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":325,"author":{"gitId":"Dethada"},"content":"    public void parseMeeting_invalidRemark_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":326,"author":{"gitId":"Dethada"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeeting(START_DATETIME, END_DATETIME, INVALID_REMARK));","lastModifiedDate":"2024-04-01"},{"lineNumber":327,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":328,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":329,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":330,"author":{"gitId":"Dethada"},"content":"    public void parseMeeting_invalidDateTimes_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":331,"author":{"gitId":"Dethada"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeeting(END_DATETIME, START_DATETIME, VALID_REMARK));","lastModifiedDate":"2024-04-01"},{"lineNumber":332,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":333,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":334,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":335,"author":{"gitId":"Dethada"},"content":"    public void parseMeeting_validMeeting_returnsMeeting() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":336,"author":{"gitId":"Dethada"},"content":"        assertEquals(new Meeting(START_DATETIME, END_DATETIME, VALID_REMARK),","lastModifiedDate":"2024-04-01"},{"lineNumber":337,"author":{"gitId":"Dethada"},"content":"                ParserUtil.parseMeeting(START_DATETIME, END_DATETIME, VALID_REMARK));","lastModifiedDate":"2024-04-01"},{"lineNumber":338,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Arixeyeion":24,"KohGuanZeh":42,"Javiery3889":28,"Dethada":60,"-":185}},{"path":"src/test/java/seedu/findvisor/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.REMARK_DESC;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"        // no index specified","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, REMARK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        // negative index","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"-5\" + REMARK_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        // zero index","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"0\" + REMARK_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"        // invalid prefix being parsed as preamble given the expected prefix is r/","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"    public void parse_missingPrefix_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"1\", String.format(","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"    public void parse_duplicatedPrefix_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"1 r/first remark r/second remark\",","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REMARK));","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"                RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"KohGuanZeh"},"content":"    public void parse_validArgs_returnsRemarkCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"KohGuanZeh"},"content":"        Optional\u003cRemark\u003e remark \u003d Optional.of(new Remark(REMARK));","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"KohGuanZeh"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"KohGuanZeh"},"content":"        RemarkCommand expectedRemarkCommand \u003d new RemarkCommand(targetIndex, remark);","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"KohGuanZeh"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"KohGuanZeh"},"content":"                targetIndex.getOneBased() + \" \" + REMARK_DESC,","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"                expectedRemarkCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"KohGuanZeh":77}},{"path":"src/test/java/seedu/findvisor/logic/parser/RescheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.DateTimeUtil.dateTimeToString;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeetingNonEmptyRemark;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand.EditMeetingDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.testutil.MeetingUtil;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"public class RescheduleCommandParserTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RescheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    private RescheduleCommandParser parser \u003d new RescheduleCommandParser();","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    private Meeting meetingNoRemark \u003d createValidMeeting();","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    private Meeting meetingWithRemark \u003d createValidMeetingNonEmptyRemark();","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        // no index specified","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, dateTimeToString(meetingNoRemark.start), MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        // no field specified","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"1\", Messages.MESSAGE_REQUIRE_AT_LEAST_ONE_FIELD);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        // invalid index","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"a\" + \" \" + dateTimeToString(meetingNoRemark.start), MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        // invalid index","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"-1\" + \" \" + dateTimeToString(meetingNoRemark.start), MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        // invalid start datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"1\" + \" \" + \"22-02-1922T14:00\" + \" \" + dateTimeToString(meetingNoRemark.end),","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        // invalid end datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"1\" + \" \" + dateTimeToString(meetingNoRemark.start) + \" \" + \"22-02-1922T15:00\",","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        // invalid start and end datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"1\" + \" \" + \"22-02-1922T18:00\" + \" \" + \"22-02-1922T15:00\",","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meetingWithRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand expectedCommand \u003d new RescheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        // start datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withStart(meetingNoRemark.start).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        RescheduleCommand expectedCommand \u003d new RescheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"        // end datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withEnd(meetingNoRemark.end).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"        expectedCommand \u003d new RescheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"        // remark","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withRemark(meetingWithRemark.remark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"        expectedCommand \u003d new RescheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"        // multiple all fields","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meetingWithRemark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"                + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"                    PREFIX_START_DATETIME, PREFIX_END_DATETIME, PREFIX_MEETING_REMARK));","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"        // multiple start datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withStart(meetingNoRemark.start).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"                + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_DATETIME));","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"        // multiple end datetime","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withEnd(meetingNoRemark.end).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"                + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END_DATETIME));","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"        // multiple remark","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withRemark(meetingWithRemark.remark).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"                + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEETING_REMARK));","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":129}},{"path":"src/test/java/seedu/findvisor/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"//@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.DateTimeUtil.dateTimeToInputString;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeetingNonEmptyRemark;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"                    ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    public void parse_validArgs_returnsScheduleCommand() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeeting();","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand expectedScheduleCommand \u003d new ScheduleCommand(targetIndex, meeting);","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"                targetIndex.getOneBased() + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"                + PREFIX_START_DATETIME + \" \" + dateTimeToInputString(meeting.start) + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"                + PREFIX_END_DATETIME + \" \" + dateTimeToInputString(meeting.end),","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"                expectedScheduleCommand);","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    public void parse_invalidDatetimeFormat_throwsParseException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"                INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"                + PREFIX_START_DATETIME + \"2024-02-22 14:00 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"                + PREFIX_END_DATETIME + \"2024-02-22 15:00\",","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    public void parse_validRemark_returnsScheduleCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d createValidMeetingNonEmptyRemark();","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        ScheduleCommand expectedScheduleCommand \u003d new ScheduleCommand(targetIndex, meeting);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        System.out.println(dateTimeToInputString(meeting.start) + \" \" + dateTimeToInputString(meeting.end));","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"                targetIndex.getOneBased() + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"                + PREFIX_START_DATETIME + \" \" + dateTimeToInputString(meeting.start) + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"                + PREFIX_END_DATETIME + \" \" + dateTimeToInputString(meeting.end) + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"                + PREFIX_MEETING_REMARK + \" \" + meeting.remark,","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"                expectedScheduleCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"//@@author","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":67}},{"path":"src/test/java/seedu/findvisor/logic/parser/UnscheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.UnscheduleCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":" * outside of the UnscheduleCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" * same path through the UnscheduleCommand, and therefore we test only one of them.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"public class UnscheduleCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private UnscheduleCommandParser parser \u003d new UnscheduleCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    public void parse_validArgs_returnsUnscheduleCommand() {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        assertParseSuccess(parser, \"1\", new UnscheduleCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnscheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Dethada":32}},{"path":"src/test/java/seedu/findvisor/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"KohGuanZeh":9,"-":99}},{"path":"src/test/java/seedu/findvisor/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.model.person.PersonNamePredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, false, 5));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, false, 5);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"KohGuanZeh"},"content":"    public void getTodaysMeetingPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"KohGuanZeh"},"content":"                modelManager.getTodaysMeetingPersonList().remove(0));","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d ALICE.getName().fullName;","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"Javiery3889"},"content":"        modelManager.updateFilteredPersonList(new PersonNamePredicate(keyword));","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"KohGuanZeh":15,"Javiery3889":3,"-":119}},{"path":"src/test/java/seedu/findvisor/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"KohGuanZeh":2,"-":19}},{"path":"src/test/java/seedu/findvisor/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        // spaces only","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(Address.isValidAddress(\"     \"));","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        // invalid special characters","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        // valid special characters","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, 22 Apple Road, #01-355, S(123456)\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        // one character","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(Address.isValidAddress(\"-\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        // long address","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc, 1234 Market St, #13-21, Singapore 212351, Singapore\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KohGuanZeh":2,"Javiery3889":10,"-":51}},{"path":"src/test/java/seedu/findvisor/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KohGuanZeh":2,"-":86}},{"path":"src/test/java/seedu/findvisor/model/person/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"//@@author Dethada","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"public class MeetingTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    private static final LocalDateTime START \u003d LocalDateTime.of(2024, 1, 1, 12, 0);","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    private static final LocalDateTime END \u003d LocalDateTime.of(2024, 1, 1, 13, 0);","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Meeting(null, null, VALID_MEETING_REMARK));","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Meeting(START, null, VALID_MEETING_REMARK));","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Meeting(null, END, VALID_MEETING_REMARK));","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Meeting(START, END, null));","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public void constructor_invalidMeetingDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Meeting(END, START, VALID_MEETING_REMARK));","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    public void constructor_invalidMeetingRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Meeting(START, END, INVALID_MEETING_REMARK));","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    public void isValidMeeting() {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        // null meeting","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e Meeting.isValidDateTime(null, null));","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e Meeting.isValidDateTime(START, null));","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e Meeting.isValidDateTime(null, END));","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        // invalid meeting","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        assertFalse(Meeting.isValidDateTime(END, START));","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        // valid meeting","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        assertTrue(Meeting.isValidDateTime(START, END));","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    public void isValidMeetingRemark() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        // null meeting remark","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e Meeting.isValidRemark(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        // meeting remark too long","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        assertFalse(Meeting.isValidRemark(INVALID_MEETING_REMARK));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        // contains invalid character","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        assertFalse(Meeting.isValidRemark(\"A/B\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        assertFalse(Meeting.isValidRemark(\"Emoji ❤️\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        assertFalse(Meeting.isValidRemark(\"不能使用华文字体\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        // valid meeting remark","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        assertTrue(Meeting.isValidRemark(\"\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        assertTrue(Meeting.isValidRemark(VALID_MEETING_REMARK));","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        assertTrue(Meeting.isValidRemark(\"Owes $100\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d new Meeting(START, END, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        assertTrue(meeting.equals(new Meeting(START, END, VALID_MEETING_REMARK)));","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"        assertTrue(meeting.equals(meeting));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(LocalDateTime.now()));","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(new Meeting(LocalDateTime.now(),","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"                LocalDateTime.now().plusHours(1), VALID_MEETING_REMARK)));","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(new Meeting(START, END, \"Different remark\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"//@@author","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":93}},{"path":"src/test/java/seedu/findvisor/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KohGuanZeh":2,"-":58}},{"path":"src/test/java/seedu/findvisor/model/person/PersonAddressPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public class PersonAddressPredicateTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"        String firstPredicateKeyword \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"        String secondPredicateKeyword \u003d \"Block 123, Bobby Ave 3\";","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate firstPredicate \u003d new PersonAddressPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate secondPredicate \u003d new PersonAddressPredicate(secondPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate firstPredicateCopy \u003d new PersonAddressPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    public void test_addressEmpty_exceptionThrown() {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        // empty address -\u003e exception thrown","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate predicate \u003d new PersonAddressPredicate(\" \");","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        IllegalArgumentException exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            predicate.test(new PersonBuilder().withAddress(\"Alice\").build());","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        });","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(\"subString parameter cannot be empty\", exception.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"    public void test_addressContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        // different case","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate predicate \u003d new PersonAddressPredicate(\"30 charlie street\");","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"30 Charlie Street\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        // Exact word","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonAddressPredicate(\"12 Bun Ave\");","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"12 Bun Ave\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        // address contains keyword","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonAddressPredicate(\"Apple\");","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"30 Apple Street\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"    public void test_addressDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate predicate \u003d new PersonAddressPredicate(\"Apple\");","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"30 Charlie Street\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"        // Reversed keyword","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonAddressPredicate(\"Street Charlie 30\");","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"30 Charlie Street\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        // Keywords match phone, but does not match address","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonAddressPredicate(\"SixthStreet\");","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"91002921\")","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"MainStreet\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"30 Apple Ave\";","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate predicate \u003d new PersonAddressPredicate(keyword);","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Address containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"30 Apple Ave\";","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"        PersonAddressPredicate predicate \u003d new PersonAddressPredicate(keyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonAddressPredicate.class.getCanonicalName() + \"{address\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Javiery3889":97}},{"path":"src/test/java/seedu/findvisor/model/person/PersonEmailPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"public class PersonEmailPredicateTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        String firstPredicateKeyword \u003d \"example1@example.com\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"        String secondPredicateKeyword \u003d \"example2@example.com\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate firstPredicate \u003d new PersonEmailPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate secondPredicate \u003d new PersonEmailPredicate(secondPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate firstPredicateCopy \u003d new PersonEmailPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    public void test_emailContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        // Exact match","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate predicate \u003d new PersonEmailPredicate(\"example@example.com\");","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"        // Substring match","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonEmailPredicate(\"example\");","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        // Mixed-case keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonEmailPredicate(\"EXAmple@example.COM\");","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    public void test_emailDoesNotContainsKeyword_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate predicate \u003d new PersonEmailPredicate(\"example@example.com\");","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"123@example.com\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        // Reversed keyword","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonEmailPredicate(\"com@example.com\");","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        // Keywords match phone, but does not match email","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonEmailPredicate(\"91002921\");","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"91002921\")","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"MainStreet\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"example@example.com\";","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate predicate \u003d new PersonEmailPredicate(keyword);","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Email containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"example@example.com\";","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"        PersonEmailPredicate predicate \u003d new PersonEmailPredicate(keyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonEmailPredicate.class.getCanonicalName() + \"{email\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":86}},{"path":"src/test/java/seedu/findvisor/model/person/PersonMeetingPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createOldMeeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidLongMeeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"public class PersonMeetingPredicateTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        LocalDate firstPredicateKeyword \u003d LocalDate.of(2024, 12, 24);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        LocalDate secondPredicateKeyword \u003d LocalDate.of(2024, 12, 31);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate firstPredicate \u003d new PersonMeetingPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate secondPredicate \u003d new PersonMeetingPredicate(secondPredicateKeyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate firstPredicateCopy \u003d new PersonMeetingPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    public void test_meetingDateOnSpecifiedDate_returnsTrue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        LocalDate date \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        // Specified date is equal to start and end date","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate predicate \u003d new PersonMeetingPredicate(date);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMeeting(Optional.of(createValidMeeting())).build()));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        // Specified date is equal to start date","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMeeting(Optional.of(createValidLongMeeting())).build()));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        // Specified date is equal to end date","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        date \u003d LocalDate.now().plusDays(2);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonMeetingPredicate(date);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMeeting(Optional.of(createValidLongMeeting())).build()));","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    public void test_dateNotOnMeetingDate_returnsFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        LocalDate date \u003d LocalDate.now().plusDays(2);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"        // Specified date is after meeting start and end date","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate predicate \u003d new PersonMeetingPredicate(date);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMeeting(Optional.of(createOldMeeting())).build()));","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        LocalDate date \u003d LocalDate.of(2024, 12, 24);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate predicate \u003d new PersonMeetingPredicate(date);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Meeting on \\\"%1$s\\\"\", date.format(DateTimeUtil.DATE_FORMAT));","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        LocalDate date \u003d LocalDate.of(2024, 12, 24);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingPredicate predicate \u003d new PersonMeetingPredicate(date);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonMeetingPredicate.class.getCanonicalName() + \"{meeting\u003d\" + date + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Javiery3889":86}},{"path":"src/test/java/seedu/findvisor/model/person/PersonMeetingRemarkPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"public class PersonMeetingRemarkPredicateTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    private String meetingRemarkString \u003d \"Physical meeting at Serangoon Gardens\";","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    private Optional\u003cMeeting\u003e meeting \u003d Optional.of(new Meeting(LocalDateTime.now(),","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"            LocalDateTime.now().plusDays(1), meetingRemarkString));","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        String firstPredicateKeyword \u003d \"Physical meeting at Serangoon Gardens\";","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        String secondPredicateKeyword \u003d \"Online Meeting\";","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate firstPredicate \u003d new PersonMeetingRemarkPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate secondPredicate \u003d new PersonMeetingRemarkPredicate(secondPredicateKeyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate firstPredicateCopy \u003d new PersonMeetingRemarkPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    public void test_remarkContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        // Exact match","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate predicate \u003d new PersonMeetingRemarkPredicate(meetingRemarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMeeting(meeting).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        // Substring match","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonMeetingRemarkPredicate(\"Serangoon Gardens\");","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMeeting(meeting).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        // Mixed-case keyword","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonMeetingRemarkPredicate(\"serangoon gardens\");","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMeeting(meeting).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"    public void test_remarkDoesNotContainsKeyword_returnsFalse() {","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate predicate \u003d new PersonMeetingRemarkPredicate(\"Online\");","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMeeting(meeting).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonMeetingRemarkPredicate(\"Online meeting\");","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMeeting(meeting).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate predicate \u003d new PersonMeetingRemarkPredicate(meetingRemarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Meeting remark containing \\\"%1$s\\\"\", meetingRemarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        PersonMeetingRemarkPredicate predicate \u003d new PersonMeetingRemarkPredicate(meetingRemarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonMeetingRemarkPredicate.class.getCanonicalName()","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"                + \"{meeting remark\u003d\" + meetingRemarkString + \"}\";","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"Javiery3889":85}},{"path":"src/test/java/seedu/findvisor/model/person/PersonNamePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public class PersonNamePredicateTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate firstPredicate \u003d new PersonNamePredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate secondPredicate \u003d new PersonNamePredicate(secondPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate firstPredicateCopy \u003d new PersonNamePredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    public void test_nameEmpty_exceptionThrown() {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        // empty name -\u003e exception thrown","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate predicate \u003d new PersonNamePredicate(\" \");","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        IllegalArgumentException exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            predicate.test(new PersonBuilder().withName(\"Alice\").build());","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(\"subString parameter cannot be empty\", exception.getMessage());","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"    public void test_nameContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        // One keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate predicate \u003d new PersonNamePredicate(\"Alice\");","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Tan\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        // Exact word","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonNamePredicate(\"Alice Tan Li Li\");","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Tan Li Li\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        // Name contains keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonNamePredicate(\"Ali\");","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        // Mixed-case keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonNamePredicate(\"aLIce\");","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Yeoh\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"    public void test_nameDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate predicate \u003d new PersonNamePredicate(\"Carol\");","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Tan\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        // Reversed keyword","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonNamePredicate(\"Tan Alex\");","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alex Tan\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        // Keywords match phone, but does not match name","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonNamePredicate(\"91002921\");","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"91002921\")","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"MainStreet\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"Alice\";","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate predicate \u003d new PersonNamePredicate(keyword);","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Name containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"Alice\";","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"        PersonNamePredicate predicate \u003d new PersonNamePredicate(keyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonNamePredicate.class.getCanonicalName() + \"{name\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":101}},{"path":"src/test/java/seedu/findvisor/model/person/PersonPhonePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"public class PersonPhonePredicateTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        String firstPredicateKeyword \u003d \"91234567\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"        String secondPredicateKeyword \u003d \"84382123\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate firstPredicate \u003d new PersonPhonePredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate secondPredicate \u003d new PersonPhonePredicate(secondPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate firstPredicateCopy \u003d new PersonPhonePredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        // different phone number -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    public void test_phoneContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        // Exact match","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate predicate \u003d new PersonPhonePredicate(\"91234567\");","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonPhonePredicate(\"9123\");","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    public void test_phoneDoesNotContainsKeyword_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate predicate \u003d new PersonPhonePredicate(\"91234567\");","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"84382123\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"91234567\";","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate predicate \u003d new PersonPhonePredicate(keyword);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Phone containing \\\"%1$s\\\"\", keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"        String keyword \u003d \"91234567\";","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"        PersonPhonePredicate predicate \u003d new PersonPhonePredicate(keyword);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonPhonePredicate.class.getCanonicalName() + \"{phone\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":71}},{"path":"src/test/java/seedu/findvisor/model/person/PersonRemarkPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"public class PersonRemarkPredicateTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    private String remarkString \u003d \"Working as SWE, wants to BTO with David\";","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    private Optional\u003cRemark\u003e remark \u003d Optional.of(new Remark(remarkString));","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        String firstPredicateKeyword \u003d \"Working as SWE, wants to BTO with David\";","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"        String secondPredicateKeyword \u003d \"Wants to move to the new house by next January\";","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate firstPredicate \u003d new PersonRemarkPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate secondPredicate \u003d new PersonRemarkPredicate(secondPredicateKeyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate firstPredicateCopy \u003d new PersonRemarkPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"    public void test_remarkContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"        // Exact match","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate predicate \u003d new PersonRemarkPredicate(remarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(remark).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        // Substring match","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonRemarkPredicate(\"SWE\");","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(remark).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        // Mixed-case keyword","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonRemarkPredicate(\"bto with David\");","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(remark).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"    public void test_remarkDoesNotContainsKeyword_returnsFalse() {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate predicate \u003d new PersonRemarkPredicate(\"Tom\");","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(remark).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonRemarkPredicate(\"Wants to fund his new business\");","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(remark).build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate predicate \u003d new PersonRemarkPredicate(remarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Person remark containing \\\"%1$s\\\"\", remarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        PersonRemarkPredicate predicate \u003d new PersonRemarkPredicate(remarkString);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonRemarkPredicate.class.getCanonicalName() + \"{person remark\u003d\" + remarkString + \"}\";","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"Javiery3889":82}},{"path":"src/test/java/seedu/findvisor/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.createValidMeeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"        // same phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"        // different phone number, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"        // different meetings -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMeeting(Optional.of(createValidMeeting())).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"KohGuanZeh"},"content":"        // different remarks -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"KohGuanZeh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRemark(Optional.of(new Remark(\"Wants to be a millionaire\"))).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", meeting\u003d\" + ALICE.getMeeting()","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"KohGuanZeh"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"KohGuanZeh":19,"Dethada":6,"-":77}},{"path":"src/test/java/seedu/findvisor/model/person/PersonTodayMeetingsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"public class PersonTodayMeetingsPredicateTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"        PersonTodayMeetingsPredicate predicate \u003d new PersonTodayMeetingsPredicate();","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"        PersonTodayMeetingsPredicate predicateCopy \u003d new PersonTodayMeetingsPredicate();","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(predicate.equals(predicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"        // This should always return true, unless test occurs in between 2 dates.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(predicate.equals(predicateCopy));","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(predicate.equals(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(predicate.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"    public void test_meetingStartDateIsToday_returnsTrue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        PersonTodayMeetingsPredicate predicate \u003d new PersonTodayMeetingsPredicate();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMeeting(","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"                Optional.of(new Meeting(LocalDateTime.now(), LocalDateTime.now().plusHours(1), \"\"))).build()));","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"    public void test_meetingStartDateIsNotToday_returnsFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"        PersonTodayMeetingsPredicate predicate \u003d new PersonTodayMeetingsPredicate();","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMeeting(","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"                Optional.of(new Meeting(LocalDateTime.now().minusDays(1), LocalDateTime.now(), \"\"))).build()));","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"        String dateString \u003d DateTimeUtil.dateToString(LocalDate.now());","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"        PersonTodayMeetingsPredicate predicate \u003d new PersonTodayMeetingsPredicate();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"        String expected \u003d String.format(\"Today\u0027s meeting on \\\"%1$s\\\"\", dateString);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"        String dateString \u003d DateTimeUtil.dateToString(LocalDate.now());","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"        PersonTodayMeetingsPredicate predicate \u003d new PersonTodayMeetingsPredicate();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"KohGuanZeh"},"content":"        String expected \u003d PersonTodayMeetingsPredicate.class.getCanonicalName() + \"{date\u003d\" + dateString + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"KohGuanZeh"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KohGuanZeh":66}},{"path":"src/test/java/seedu/findvisor/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"Arixeyeion"},"content":"        assertFalse(Phone.isValidPhone(\"9123456\")); // less than 8 numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"Arixeyeion"},"content":"        Phone phone \u003d new Phone(\"99912345\");","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"Arixeyeion"},"content":"        assertTrue(phone.equals(new Phone(\"99912345\")));","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"Arixeyeion"},"content":"        assertFalse(phone.equals(new Phone(\"88812345\")));","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Arixeyeion":4,"KohGuanZeh":2,"-":52}},{"path":"src/test/java/seedu/findvisor/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.Assert;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"public class RemarkTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"    public static final String REMARK_VALUE \u003d \"Wants to afford a car after 5 years of working\";","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"        String invalidRemark \u003d \"/\";","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"KohGuanZeh"},"content":"    public void isValidRemark() {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"KohGuanZeh"},"content":"        // null remark","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"KohGuanZeh"},"content":"        // invalid remarks","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(Remark.isValidRemark(\"first remark r/second remark\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(Remark.isValidRemark(\"♫☼ hello\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(Remark.isValidRemark(\"不能使用华文字体\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"KohGuanZeh"},"content":"        // valid remarks","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(Remark.isValidRemark(\"\")); // accept empty string, although remark will never be empty.","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(Remark.isValidRemark(\"this is a normal remark\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(Remark.isValidRemark(\"1\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(Remark.isValidRemark(\"%\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(Remark.isValidRemark(\"Mix of characters with 123 $%^\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"KohGuanZeh"},"content":"        Remark remark \u003d new Remark(REMARK_VALUE);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"KohGuanZeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(remark.equals(new Remark(REMARK_VALUE)));","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"KohGuanZeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"KohGuanZeh"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"KohGuanZeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(remark.equals(5.0f));","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"KohGuanZeh"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"KohGuanZeh"},"content":"        assertFalse(remark.equals(new Remark(\"Plans to start a family by age of 32\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"KohGuanZeh"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"KohGuanZeh":62}},{"path":"src/test/java/seedu/findvisor/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"KohGuanZeh":9,"-":166}},{"path":"src/test/java/seedu/findvisor/model/tag/PersonTagsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package seedu.findvisor.model.tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import seedu.findvisor.testutil.PersonBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"public class PersonTagsPredicateTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        List\u003cString\u003e firstPredicateKeywords \u003d Arrays.asList(new String[]{\"tag1\"});","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        List\u003cString\u003e secondPredicateKeywords \u003d Arrays.asList(new String[]{\"tag2\", \"tag3\"});","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate firstPredicate \u003d new PersonTagsPredicate(firstPredicateKeywords);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate secondPredicate \u003d new PersonTagsPredicate(secondPredicateKeywords);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate firstPredicateCopy \u003d new PersonTagsPredicate(firstPredicateKeywords);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        // different tags-\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        // single tag","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate predicate \u003d new PersonTagsPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"                Arrays.asList(new String[]{\"friends\"}));","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        // keyword is a substring","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonTagsPredicate(Arrays.asList(new String[]{\"pru\"}));","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"PRUActive\", \"PRUEssential\").build()));","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        // multiple tags","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        predicate \u003d new PersonTagsPredicate(Arrays.asList(new String[]{\"friends\", \"husband\"}));","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"husband\", \"wife\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"    public void test_tagsDoesNotContainsKeywords_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        // Non-matching keywords","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate predicate \u003d new PersonTagsPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"                Arrays.asList(new String[]{\"basketball\", \"football\"}));","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friends\", \"husband\", \"wife\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"    public void testGetPredicateDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(new String[]{\"exampleTag1\", \"exampleTag2\"});","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate predicate \u003d new PersonTagsPredicate(keywords);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d String.format(\"Tags containing \\\"%1$s\\\", \\\"%2$s\\\"\", \"exampleTag1\", \"exampleTag2\");","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.getPredicateDescription());","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(new String[]{\"exampleTag1, exampleTag2\"});","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        PersonTagsPredicate predicate \u003d new PersonTagsPredicate(keywords);","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        String expected \u003d PersonTagsPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"                + \"{tags\u003d\" + keywords.toString() + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Javiery3889":82}},{"path":"src/test/java/seedu/findvisor/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.model.tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"KohGuanZeh":2,"-":24}},{"path":"src/test/java/seedu/findvisor/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Arixeyeion"},"content":"package seedu.findvisor.model.util;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Arixeyeion"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_END_STR;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_REMARK;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_START_STR;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Arixeyeion"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_WITH_REMARK;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Arixeyeion"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Arixeyeion"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Arixeyeion"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Arixeyeion"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Arixeyeion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Arixeyeion"},"content":"    public void convertToMeeting_returnsOptionalMeeting() {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Arixeyeion"},"content":"        Optional\u003cMeeting\u003e validMeetingWithRemark \u003d Optional.of(VALID_MEETING_WITH_REMARK);","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Arixeyeion"},"content":"        Optional\u003cMeeting\u003e convertedStringArrayToMeeting \u003d SampleDataUtil.convertToMeeting(","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Arixeyeion"},"content":"            VALID_MEETING_START_STR, VALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Arixeyeion"},"content":"        assertTrue(validMeetingWithRemark.equals(convertedStringArrayToMeeting));","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Arixeyeion"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Arixeyeion":24}},{"path":"src/test/java/seedu/findvisor/storage/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.DateTimeUtil.parseDateTimeString;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_MEETING_END_STR;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_MEETING_START_STR;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_END_STR;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_START_STR;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    public void toModelType_validMeeting_returnsOptionalMeeting() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting jsonMeeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d new Meeting(parseDateTimeString(VALID_MEETING_START_STR),","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"                parseDateTimeString(VALID_MEETING_END_STR), VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        assertEquals(meeting, jsonMeeting.toModelType().get());","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    public void toModelType_invalidDateTimeFormat_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(INVALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"                INVALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d Meeting.MESSAGE_DATETIME_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR, INVALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        meeting \u003d new JsonAdaptedMeeting(INVALID_MEETING_START_STR, VALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    public void toModelType_endDateTimeBeforeStart_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_END_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_START_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d Meeting.MESSAGE_DATETIME_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    public void toModelType_emptyString_returnsEmptyOptionalMeeting() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(\"\", \"\", VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        assertEquals(meeting.toModelType(), Optional.empty());","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR, \"\", VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        assertEquals(meeting.toModelType(), Optional.empty());","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        meeting \u003d new JsonAdaptedMeeting(\"\", VALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        assertEquals(meeting.toModelType(), Optional.empty());","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    public void toModelType_validMeetingEmptyRemark_returnsOptionalMeeting() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting jsonMeeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d new Meeting(parseDateTimeString(VALID_MEETING_START_STR),","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"                parseDateTimeString(VALID_MEETING_END_STR), \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        assertEquals(meeting, jsonMeeting.toModelType().get());","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"    public void toModelType_invalidRemark_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, INVALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d Meeting.MESSAGE_REMARK_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"        assertThrows(NullPointerException.class, () -\u003e new JsonAdaptedMeeting((Optional\u003cMeeting\u003e) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"    public void constructor_emptyMeeting() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting jsonMeeting \u003d new JsonAdaptedMeeting(Optional.empty());","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting expectedJsonMeeting \u003d new JsonAdaptedMeeting(\"\", \"\", \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"        assertEquals(jsonMeeting, expectedJsonMeeting);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"    public void constructor_validMeeting() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"        Meeting meeting \u003d new Meeting(parseDateTimeString(VALID_MEETING_START_STR),","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"                parseDateTimeString(VALID_MEETING_END_STR), VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting jsonMeeting \u003d new JsonAdaptedMeeting(Optional.of(meeting));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting expectedJsonMeeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"        assertEquals(jsonMeeting, expectedJsonMeeting);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"        assertTrue(meeting.equals(new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, VALID_MEETING_REMARK)));","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"        assertTrue(meeting.equals(meeting));","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(new JsonAdaptedMeeting(\"12-02-2025T12:00\",","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"                \"12-02-2025T13:00\", VALID_MEETING_REMARK)));","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"        assertFalse(meeting.equals(new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, \"Different remark\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Dethada":132}},{"path":"src/test/java/seedu/findvisor/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.INVALID_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_END_STR;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_REMARK;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_START_STR;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final JsonAdaptedMeeting VALID_MEETING \u003d new JsonAdaptedMeeting(BENSON.getMeeting());","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"KohGuanZeh"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().map(remark -\u003e remark.value).orElse(\"\");","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"KohGuanZeh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"KohGuanZeh"},"content":"                        VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"KohGuanZeh"},"content":"                    VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"KohGuanZeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"KohGuanZeh"},"content":"                        VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"KohGuanZeh"},"content":"                    VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"KohGuanZeh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"KohGuanZeh"},"content":"                        VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"KohGuanZeh"},"content":"                    VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"KohGuanZeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"KohGuanZeh"},"content":"                        VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"KohGuanZeh"},"content":"                    VALID_MEETING, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"KohGuanZeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"KohGuanZeh"},"content":"                        VALID_MEETING, VALID_REMARK, invalidTags);","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"    public void toModelType_nullMeeting_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"KohGuanZeh"},"content":"                null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Meeting.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"Dethada"},"content":"    public void toModelType_invalidMeetingDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting invalidMeeting \u003d new JsonAdaptedMeeting(\"INVALID_START\",","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"                \"INVALID_END\", VALID_MEETING_REMARK);","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"KohGuanZeh"},"content":"                invalidMeeting, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d Meeting.MESSAGE_DATETIME_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"Dethada"},"content":"    public void toModelType_invalidMeetingRemark_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedMeeting invalidMeeting \u003d new JsonAdaptedMeeting(VALID_MEETING_START_STR,","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"Dethada"},"content":"                VALID_MEETING_END_STR, INVALID_MEETING_REMARK);","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"Dethada"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"KohGuanZeh"},"content":"                invalidMeeting, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"Dethada"},"content":"        String expectedMessage \u003d Meeting.MESSAGE_REMARK_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"Dethada"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"KohGuanZeh"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"KohGuanZeh"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":154,"author":{"gitId":"KohGuanZeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":155,"author":{"gitId":"KohGuanZeh"},"content":"                VALID_MEETING, null, VALID_TAGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":156,"author":{"gitId":"KohGuanZeh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"KohGuanZeh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KohGuanZeh":36,"Dethada":30,"-":94}},{"path":"src/test/java/seedu/findvisor/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KohGuanZeh":9,"-":101}},{"path":"src/test/java/seedu/findvisor/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.util.JsonUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.testutil.TypicalPersons;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KohGuanZeh":6,"-":41}},{"path":"src/test/java/seedu/findvisor/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"KohGuanZeh"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, false, 0.25));","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"KohGuanZeh"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, false, 0.25));","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"KohGuanZeh"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, true, 0.5));","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KohGuanZeh":8,"-":115}},{"path":"src/test/java/seedu/findvisor/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, true, 0.3));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":7,"-":61}},{"path":"src/test/java/seedu/findvisor/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":3,"-":31}},{"path":"src/test/java/seedu/findvisor/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"KohGuanZeh":1,"-":33}},{"path":"src/test/java/seedu/findvisor/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand.EditMeetingDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"    private EditMeetingDescriptor descriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * Initializes the EditMeetingDescriptorBuilder with the data of {@code descriptor}.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    public EditMeetingDescriptorBuilder(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"        this.descriptor \u003d new EditMeetingDescriptor(descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        descriptor.setStart(meeting.getStart());","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        descriptor.setEnd(meeting.getEnd());","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        descriptor.setRemark(meeting.getRemark());","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"     * Sets the {@code start} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"    public EditMeetingDescriptorBuilder withStart(LocalDateTime start) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        descriptor.setStart(start);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     * Sets the {@code end} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    public EditMeetingDescriptorBuilder withEnd(LocalDateTime end) {","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        descriptor.setEnd(end);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"     * Sets the {@code remark} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    public EditMeetingDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        descriptor.setRemark(remark);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    public EditMeetingDescriptor build() {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        return descriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":62}},{"path":"src/test/java/seedu/findvisor/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"KohGuanZeh":8,"-":79}},{"path":"src/test/java/seedu/findvisor/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"public class MeetingBuilder {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"    public static final LocalDateTime DEFAULT_START \u003d LocalDateTime.of(1990, 1, 1, 23, 59);","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"    public static final LocalDateTime DEFAULT_END \u003d LocalDateTime.of(2100, 12, 31, 23, 59);","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    public static final String DEFAULT_REMARK \u003d \"Meeting remark\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    private String remark;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"        start \u003d DEFAULT_START;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        end \u003d DEFAULT_END;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        remark \u003d DEFAULT_REMARK;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        this.start \u003d meetingToCopy.getStart();","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        this.end \u003d meetingToCopy.getEnd();","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        this.remark \u003d meetingToCopy.getRemark();","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"     * Sets the start datetime of the {@code Meeting} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"    public MeetingBuilder withStart(LocalDateTime start) {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     * Sets the end datetime of the {@code Meeting} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    public MeetingBuilder withEnd(LocalDateTime end) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"     * Sets the remark of the {@code Meeting} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    public MeetingBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    public Meeting build() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        return new Meeting(start, end, remark);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":64}},{"path":"src/test/java/seedu/findvisor/testutil/MeetingUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.commons.util.DateTimeUtil.dateTimeToInputString;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_MEETING_REMARK;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.logic.commands.RescheduleCommand.EditMeetingDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" * A utility class for Meeting.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"public class MeetingUtil {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"     * Returns the part of command string for the given {@code EditMeetingDescriptor}\u0027s details.","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    public static String getEditMeetingDescriptorDetails(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"        descriptor.getStart().ifPresent(start -\u003e sb.append(PREFIX_START_DATETIME)","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"                    .append(dateTimeToInputString(start)).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"        descriptor.getEnd().ifPresent(end -\u003e sb.append(PREFIX_END_DATETIME)","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"                    .append(dateTimeToInputString(end)).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_MEETING_REMARK)","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"                    .append(remark).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Dethada":27}},{"path":"src/test/java/seedu/findvisor/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Address;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cMeeting\u003e meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"KohGuanZeh"},"content":"    private Optional\u003cRemark\u003e remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        meeting \u003d Optional.empty();","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"KohGuanZeh"},"content":"        remark \u003d Optional.empty();","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        meeting \u003d personToCopy.getMeeting();","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"KohGuanZeh"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"Arixeyeion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"Arixeyeion"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and add it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"Arixeyeion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Arixeyeion"},"content":"    public PersonBuilder addTags(String ... tags) {","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Arixeyeion"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Arixeyeion"},"content":"        Set\u003cTag\u003e allTags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Arixeyeion"},"content":"        allTags.addAll(this.tags);","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Arixeyeion"},"content":"        allTags.addAll(tagsToAdd);","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"Arixeyeion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"Arixeyeion"},"content":"        this.tags \u003d allTags;","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"Arixeyeion"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"Arixeyeion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Sets the {@code Meeting} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public PersonBuilder withMeeting(Optional\u003cMeeting\u003e meeting) {","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"KohGuanZeh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"KohGuanZeh"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"KohGuanZeh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"KohGuanZeh"},"content":"    public PersonBuilder withRemark(Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"KohGuanZeh"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"KohGuanZeh"},"content":"        return this;","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"KohGuanZeh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"KohGuanZeh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":131,"author":{"gitId":"KohGuanZeh"},"content":"        return new Person(name, phone, email, address, tags, meeting, remark);","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Arixeyeion":12,"KohGuanZeh":22,"Dethada":1,"-":99}},{"path":"src/test/java/seedu/findvisor/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"KohGuanZeh":10,"-":52}},{"path":"src/test/java/seedu/findvisor/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":1,"-":71}},{"path":"src/test/java/seedu/findvisor/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KohGuanZeh":4,"-":51}},{"path":"src/test/java/seedu/findvisor/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"KohGuanZeh":2,"-":10}},{"path":"src/test/java/seedu/findvisor/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_MEETING_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.AddressBook;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import seedu.findvisor.model.person.Meeting;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.model.person.Remark;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"KohGuanZeh"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"KohGuanZeh"},"content":"            .withRemark(Optional.of(new Remark(\"Plans to retire by age of 45\")))","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"            .withMeeting(Optional.of(new Meeting(","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"                        LocalDateTime.of(2024, 3, 12, 14, 0, 0),","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"                        LocalDateTime.of(2024, 3, 12, 15, 0, 0),","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"                        VALID_MEETING_REMARK))).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"Arixeyeion"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822247\")","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"Arixeyeion"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824276\")","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"Arixeyeion"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824428\")","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"Arixeyeion"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824247\")","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"Arixeyeion"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821318\")","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Arixeyeion":5,"KohGuanZeh":16,"Dethada":9,"-":55}},{"path":"src/test/java/seedu/findvisor/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"KohGuanZeh":1,"-":44}},{"path":"src/test/java/seedu/findvisor/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KohGuanZeh"},"content":"package seedu.findvisor.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KohGuanZeh"},"content":"import static seedu.findvisor.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"KohGuanZeh"},"content":"import seedu.findvisor.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"KohGuanZeh":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"\u003c?import seedu.findvisor.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"KohGuanZeh":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"KohGuanZeh"},"content":"\u003cfx:root type\u003d\"seedu.findvisor.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"KohGuanZeh":1,"-":5}}]
