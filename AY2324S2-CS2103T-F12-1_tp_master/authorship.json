[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanjieling0"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103T-F12-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-F12-1/tp/actions/workflows/gradle.yml/badge.svg)","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F12-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S2-CS2103T-F12-1/tp)","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"tanjieling0"},"content":"# NetConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"tanjieling0"},"content":"## Introduction","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"NetConnect is a desktop app for managing contacts in SMEs, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It enables managers to efficiently manage their employees, clients, as well as suppliers, **all in one place** ‚òùüèª.","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tanjieling0"},"content":"## Features","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"tanjieling0"},"content":"1. Profile Management","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"tanjieling0"},"content":"    * Add a new profile: Easily create a new profile for an employee, client, or supplier. You can choose to tag them with a custom tag.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"tanjieling0"},"content":"    * Delete or Edit a profile: Remove a profile from the list or Edit their information via their ID.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"tanjieling0"},"content":"2. Category Management","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"tanjieling0"},"content":"    * Roles: Categorize your profiles into *Employees, Clients, or Suppliers*.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"tanjieling0"},"content":"3. Search","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"tanjieling0"},"content":"    * Search by name: Find a profile by their name.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"tanjieling0"},"content":"    * Search by contact: Find a profile by their contact number.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"tanjieling0"},"content":"## User-Friendly Commands","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"tanjieling0"},"content":"NetConnect uses simple CLI commands to make it easy for you to manage your contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"tanjieling0"},"content":"## Error Handling","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"With a robust error handling system, clear error and resolution messages will guide you through the process of managing your contacts seamlessly.","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"tanjieling0"},"content":"## Getting Started","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"tanjieling0"},"content":"To begin your journey with NetConnect, simply download the latest release from [here](https://github.com/AY2324S2-CS2103T-F12-1/tp/releases) and refer to the [User Guide](docs/UserGuide.md)","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"tanjieling0"},"content":"for detailed guidance in using the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"For the detailed documentation of this project, see the **[NetConnect Website](https://ay2324s2-cs2103t-f12-1.github.io/tp/)**.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"tanjieling0":24,"purivirakarin":10,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    archiveFileName \u003d \u0027netconnect.jar\u0027","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"purivirakarin":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"### Puri Virakarin","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"\u003cimg src\u003d\"images/purivirakarin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"[[github](https://github.com/purivirakarin)]","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"[[portfolio](team/purivirakarin.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"* Role: Developer","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"### Rungrawin Chowiwattana","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"\u003cimg src\u003d\"images/nuyer.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"[[github](http://github.com/nuyer)]","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"[[portfolio](team/nuyer.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"* Role: Developer","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"### Sia Zhong Qing","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"\u003cimg src\u003d\"images/starsia.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"[[github](http://github.com/starsia)]","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"[[portfolio](team/starsia.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"* Role: Team Lead","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"### Shaun Lee Xuan Wei","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"\u003cimg src\u003d\"images/shaunlxw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"[[github](http://github.com/shaunlxw)]","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"[[portfolio](team/shaunlxw.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"### Tan Jie Ling","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"\u003cimg src\u003d\"images/tanjieling0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"[[github](http://github.com/tanjieling0)]","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"[[portfolio](team/tanjieling0.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nuyer":27,"-":35}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test`‚Äâ‚Äî‚ÄâRuns all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test`‚Äâ‚Äî‚ÄâCleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2324S2-CS2103T-F12-1/tp/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"purivirakarin":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `NetConnectParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"* When called upon to parse a user command, the `NetConnectParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `NetConnectParser` returns back as a `Command` object.","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"**API** : [`Model.java`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"* stores the netconnect data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user‚Äôs preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `NetConnect`, which `Person` references. This allows `NetConnect` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/netconnect-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"* can save both netconnect data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"* inherits from both `NetConnectStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"Classes used by multiple components are in the `seedu.netconnect.commons` package.","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedNetConnect`. It extends `NetConnect` with an undo/redo history, stored internally as an `netConnectStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"* `VersionedNetConnect#commit()`‚Äâ‚Äî‚ÄâSaves the current netconnect state in its history.","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"purivirakarin"},"content":"* `VersionedNetConnect#undo()`‚Äâ‚Äî‚ÄâRestores the previous netconnect state from its history.","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"purivirakarin"},"content":"* `VersionedNetConnect#redo()`‚Äâ‚Äî‚ÄâRestores a previously undone netconnect state from its history.","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"These operations are exposed in the `Model` interface as `Model#commitNetConnect()`, `Model#undoNetConnect()` and `Model#redoNetConnect()` respectively.","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"purivirakarin"},"content":"Step 1. The user launches the application for the first time. The `VersionedNetConnect` will be initialized with the initial netconnect state, and the `currentStatePointer` pointing to that single netconnect state.","lastModifiedDate":"2024-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"purivirakarin"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the netconnect. The `delete` command calls `Model#commitNetConnect()`, causing the modified state of the netconnect after the `delete 5` command executes to be saved in the `netConnectStateList`, and the `currentStatePointer` is shifted to the newly inserted netconnect state.","lastModifiedDate":"2024-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"purivirakarin"},"content":"Step 3. The user executes `add n/David ‚Ä¶‚Äã` to add a new person. The `add` command also calls `Model#commitNetConnect()`, causing another modified netconnect state to be saved into the `netConnectStateList`.","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"purivirakarin"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitNetConnect()`, so the netconnect state will not be saved into the `netConnectStateList`.","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"purivirakarin"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoNetConnect()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous netconnect state, and restores the netconnect to that state.","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"purivirakarin"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial NetConnect state, then there are no previous NetConnect states to restore. The `undo` command uses `Model#canUndoNetConnect()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"purivirakarin"},"content":"The `redo` command does the opposite‚Äâ‚Äî‚Äâit calls `Model#redoNetConnect()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the netconnect to that state.","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"purivirakarin"},"content":"**Note:** If the `currentStatePointer` is at index `netConnectStateList.size() - 1`, pointing to the latest netconnect state, then there are no undone NetConnect states to restore. The `redo` command uses `Model#canRedoNetConnect()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"purivirakarin"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the netconnect, such as `list`, will usually not call `Model#commitNetConnect()`, `Model#undoNetConnect()` or `Model#redoNetConnect()`. Thus, the `netConnectStateList` remains unchanged.","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"purivirakarin"},"content":"Step 6. The user executes `clear`, which calls `Model#commitNetConnect()`. Since the `currentStatePointer` is not pointing at the end of the `netConnectStateList`, all netconnect states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David ‚Ä¶‚Äã` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"purivirakarin"},"content":"* **Alternative 1 (current choice):** Saves the entire netconnect.","lastModifiedDate":"2024-03-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2024-03-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-03-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-03-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2024-03-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2024-03-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2024-03-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2024-03-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2024-03-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2024-03-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"starsia"},"content":"Experienced managers who:","lastModifiedDate":"2024-03-07"},{"lineNumber":278,"author":{"gitId":"purivirakarin"},"content":"* oversees contact relations with suppliers, customers and employees","lastModifiedDate":"2024-03-15"},{"lineNumber":279,"author":{"gitId":"purivirakarin"},"content":"* has to manage a significant number of contacts","lastModifiedDate":"2024-03-15"},{"lineNumber":280,"author":{"gitId":"purivirakarin"},"content":"* works independently in a supervisory role","lastModifiedDate":"2024-03-15"},{"lineNumber":281,"author":{"gitId":"purivirakarin"},"content":"* has average IT skills","lastModifiedDate":"2024-03-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2024-03-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2024-03-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2024-03-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"starsia"},"content":"**Value proposition**: provides managers a platform to manage employee, client and partner contact information","lastModifiedDate":"2024-03-07"},{"lineNumber":288,"author":{"gitId":"starsia"},"content":"easily, and to keep track of past interactions.","lastModifiedDate":"2024-03-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"| Priority | As a ‚Ä¶‚Äã          | I want to ‚Ä¶‚Äã                               | So that I can‚Ä¶‚Äã                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"purivirakarin"},"content":"|----------|------------------|--------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2024-03-15"},{"lineNumber":297,"author":{"gitId":"starsia"},"content":"| `* * *`  | occasional user  | add a new person                           |                                                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":298,"author":{"gitId":"starsia"},"content":"| `* * *`  | occasional user  | delete a person                            | remove entries that I no longer need                                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":299,"author":{"gitId":"starsia"},"content":"| `* * *`  | occasional user  | find a person by name                      | quickly access their contact details                                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":300,"author":{"gitId":"starsia"},"content":"| `* * *`  | occasional user  | find a person by contact number            | see who contacted me                                                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":301,"author":{"gitId":"starsia"},"content":"| `* * *`  | occasional user  | tag members with custom tag                | see distinctions and manage using tags                               |","lastModifiedDate":"2024-03-07"},{"lineNumber":302,"author":{"gitId":"starsia"},"content":"| `* *`    | occasional user  | go back to the state from where i left off | avoid going back to the same page/state when I close the application |","lastModifiedDate":"2024-03-07"},{"lineNumber":303,"author":{"gitId":"starsia"},"content":"| `* *`    | occasional user  | edit person information                    | refer to accurate personal information in the future                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":304,"author":{"gitId":"starsia"},"content":"| `* *`    | experienced user | export contact lists to a CSV file         | create backups or use the data in other applications                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":305,"author":{"gitId":"starsia"},"content":"| `* *`    | new user         | see usage instructions                     | refer to instructions when I forget how to use the App               |","lastModifiedDate":"2024-03-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2024-03-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"shaunlxw"},"content":"(For all use cases below, the **System** is the `NetConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC01 - List All Persons**","lastModifiedDate":"2024-03-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"purivirakarin"},"content":"1. User requests to list all persons.","lastModifiedDate":"2024-03-15"},{"lineNumber":318,"author":{"gitId":"purivirakarin"},"content":"2. NetConnect shows the list of all persons.","lastModifiedDate":"2024-03-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"shaunlxw"},"content":"* 2a. The list of all persons is empty.","lastModifiedDate":"2024-03-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC02 - Find a List of Persons by Name**","lastModifiedDate":"2024-03-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":331,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":332,"author":{"gitId":"shaunlxw"},"content":"1. User requests for the list of persons matching a name.","lastModifiedDate":"2024-03-11"},{"lineNumber":333,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect shows a list of persons with matching name.","lastModifiedDate":"2024-03-11"},{"lineNumber":334,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":335,"author":{"gitId":"shaunlxw"},"content":"   Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":336,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":337,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":338,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":339,"author":{"gitId":"shaunlxw"},"content":"* 2a. There are no persons with a matching name.","lastModifiedDate":"2024-03-11"},{"lineNumber":340,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":341,"author":{"gitId":"shaunlxw"},"content":"  Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":342,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":343,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC03 - Find a Specific Person by Contact Number**","lastModifiedDate":"2024-03-11"},{"lineNumber":344,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":345,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":346,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":347,"author":{"gitId":"shaunlxw"},"content":"1. User requests for the person with the matching contact number.","lastModifiedDate":"2024-03-11"},{"lineNumber":348,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect shows the person with matching contact number.","lastModifiedDate":"2024-03-11"},{"lineNumber":349,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":350,"author":{"gitId":"shaunlxw"},"content":"   Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":351,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":352,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":353,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":354,"author":{"gitId":"shaunlxw"},"content":"* 2a. There is no person with a matching number.","lastModifiedDate":"2024-03-11"},{"lineNumber":355,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":356,"author":{"gitId":"shaunlxw"},"content":"  Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":357,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":358,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC04 - Add a New Person**","lastModifiedDate":"2024-03-11"},{"lineNumber":359,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":360,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":361,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":362,"author":{"gitId":"shaunlxw"},"content":"1.  User requests to add a new person with given information.","lastModifiedDate":"2024-03-11"},{"lineNumber":363,"author":{"gitId":"shaunlxw"},"content":"2.  NetConnect adds a new person to the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":364,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":365,"author":{"gitId":"shaunlxw"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":366,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":367,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":368,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":369,"author":{"gitId":"shaunlxw"},"content":"* 1a. Some given arguments are invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":370,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":371,"author":{"gitId":"shaunlxw"},"content":"    * 1a1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":372,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":373,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":374,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":375,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC05 - Delete a Person by UID**","lastModifiedDate":"2024-03-11"},{"lineNumber":376,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":377,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":378,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":379,"author":{"gitId":"shaunlxw"},"content":"1. User requests to delete a specific person by UID.","lastModifiedDate":"2024-03-11"},{"lineNumber":380,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect deletes the person.","lastModifiedDate":"2024-03-11"},{"lineNumber":381,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":382,"author":{"gitId":"shaunlxw"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":383,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":384,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":385,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":386,"author":{"gitId":"shaunlxw"},"content":"* 1a. There is no person with the provided UID.","lastModifiedDate":"2024-03-11"},{"lineNumber":387,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":388,"author":{"gitId":"shaunlxw"},"content":"    * 1a1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":389,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":390,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":391,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":392,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC06 - Delete a Person by Name**","lastModifiedDate":"2024-03-11"},{"lineNumber":393,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":394,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":395,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":396,"author":{"gitId":"shaunlxw"},"content":"1. User requests to delete a specific person by name.","lastModifiedDate":"2024-03-11"},{"lineNumber":397,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect deletes the person.","lastModifiedDate":"2024-03-11"},{"lineNumber":398,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":399,"author":{"gitId":"shaunlxw"},"content":"   Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":400,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":401,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":402,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":403,"author":{"gitId":"shaunlxw"},"content":"* 1a. There are no persons with the provided name.","lastModifiedDate":"2024-03-11"},{"lineNumber":404,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":405,"author":{"gitId":"shaunlxw"},"content":"    * 1a1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":406,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":407,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":408,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":409,"author":{"gitId":"shaunlxw"},"content":"* 1b. There are more than one person with the provided name.","lastModifiedDate":"2024-03-11"},{"lineNumber":410,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":411,"author":{"gitId":"shaunlxw"},"content":"    * 1b1. NetConnect !!list the persons with matching name (UC2)!!.","lastModifiedDate":"2024-03-11"},{"lineNumber":412,"author":{"gitId":"shaunlxw"},"content":"    * 1b2. User selects an UID from the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"purivirakarin"},"content":"1. User requests for the list of persons matching a name.","lastModifiedDate":"2024-03-15"},{"lineNumber":415,"author":{"gitId":"purivirakarin"},"content":"2. NetConnect shows a list of persons with matching name.","lastModifiedDate":"2024-03-15"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC07 - Tag a Person by UID with Custom Tag**","lastModifiedDate":"2024-03-11"},{"lineNumber":418,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":419,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":420,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":421,"author":{"gitId":"shaunlxw"},"content":"1. User requests to tag a specific person by UID with a custom tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":422,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect tags the person with given custom tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":423,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":424,"author":{"gitId":"shaunlxw"},"content":"   Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":425,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":426,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":427,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":428,"author":{"gitId":"shaunlxw"},"content":"* 1a. There is no person with the provided UID.","lastModifiedDate":"2024-03-11"},{"lineNumber":429,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":430,"author":{"gitId":"shaunlxw"},"content":"    * 1a1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":431,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":432,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":433,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":434,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC08 - Tag a Person by Name with Custom Tag**","lastModifiedDate":"2024-03-11"},{"lineNumber":435,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":436,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":437,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":438,"author":{"gitId":"shaunlxw"},"content":"1. User requests to tag a specific person by name with a custom tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":439,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect tags the person with given custom tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":440,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":441,"author":{"gitId":"shaunlxw"},"content":"   Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":442,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":443,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":444,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":445,"author":{"gitId":"shaunlxw"},"content":"* 1a. There are no persons with the provided name.","lastModifiedDate":"2024-03-11"},{"lineNumber":446,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":447,"author":{"gitId":"shaunlxw"},"content":"    * 1a1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":448,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":449,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":450,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":451,"author":{"gitId":"shaunlxw"},"content":"* 1b. There are more than one person with the provided name.","lastModifiedDate":"2024-03-11"},{"lineNumber":452,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":453,"author":{"gitId":"shaunlxw"},"content":"    * 1b1. NetConnect !!list the persons with matching name (UC2)!!.","lastModifiedDate":"2024-03-11"},{"lineNumber":454,"author":{"gitId":"shaunlxw"},"content":"    * 1b2. User selects an UID from the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-11"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":458,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC09 - Edit Person Information by UID**","lastModifiedDate":"2024-03-11"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":460,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":462,"author":{"gitId":"shaunlxw"},"content":"1. User requests to edit the information of a specific person by UID.","lastModifiedDate":"2024-03-11"},{"lineNumber":463,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect edit the person information.","lastModifiedDate":"2024-03-11"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":465,"author":{"gitId":"shaunlxw"},"content":"   Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":466,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":467,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":468,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":469,"author":{"gitId":"shaunlxw"},"content":"* 1a. There is no person with the provided UID.","lastModifiedDate":"2024-03-11"},{"lineNumber":470,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":471,"author":{"gitId":"shaunlxw"},"content":"    * 1a1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":472,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":473,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":474,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":475,"author":{"gitId":"shaunlxw"},"content":"* 1b. Some given arguments are invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":476,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":477,"author":{"gitId":"shaunlxw"},"content":"    * 1b1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":478,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":479,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":480,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":481,"author":{"gitId":"shaunlxw"},"content":"**Use case: UC10 - Export Contact List to CSV File**","lastModifiedDate":"2024-03-11"},{"lineNumber":482,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":483,"author":{"gitId":"shaunlxw"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":484,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":485,"author":{"gitId":"shaunlxw"},"content":"1. User requests to export contact list to CSV file with a given filename.","lastModifiedDate":"2024-03-11"},{"lineNumber":486,"author":{"gitId":"shaunlxw"},"content":"2. NetConnect creates a CSV file with the contact list data.","lastModifiedDate":"2024-03-11"},{"lineNumber":487,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":488,"author":{"gitId":"shaunlxw"},"content":"   Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":489,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":490,"author":{"gitId":"shaunlxw"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":491,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":492,"author":{"gitId":"shaunlxw"},"content":"* 1a. The given filename is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":493,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":494,"author":{"gitId":"shaunlxw"},"content":"    * 1a1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":495,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":496,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":497,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":498,"author":{"gitId":"shaunlxw"},"content":"* 1b. The contact list is empty.","lastModifiedDate":"2024-03-11"},{"lineNumber":499,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":500,"author":{"gitId":"shaunlxw"},"content":"    * 1b1. NetConnect shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":501,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":502,"author":{"gitId":"shaunlxw"},"content":"      Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"shaunlxw"},"content":"2. Should be able to hold up to 500 _persons_ without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-11"},{"lineNumber":508,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"shaunlxw"},"content":"4. All user operations (excluding export to CSV) should complete within 200 milliseconds.","lastModifiedDate":"2024-03-11"},{"lineNumber":510,"author":{"gitId":"shaunlxw"},"content":"5. The codebase should follow a [given set of coding style](https://se-education.org/guides/conventions/java/intermediate.html) and should be well documented.","lastModifiedDate":"2024-03-11"},{"lineNumber":511,"author":{"gitId":"shaunlxw"},"content":"6. Should provide friendlier syntax and command _aliases_ for advanced users to complete tasks quicker.","lastModifiedDate":"2024-03-11"},{"lineNumber":512,"author":{"gitId":"shaunlxw"},"content":"7. Should display clear error messages for invalid inputs and failed operations, stating the correct command format or inputs required.","lastModifiedDate":"2024-03-11"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":517,"author":{"gitId":"shaunlxw"},"content":"* **Persons**: Any person in the contact list. Includes all employees, clients and partners.","lastModifiedDate":"2024-03-11"},{"lineNumber":518,"author":{"gitId":"shaunlxw"},"content":"* **State**: The page that displays the results from the last command given.","lastModifiedDate":"2024-03-11"},{"lineNumber":519,"author":{"gitId":"shaunlxw"},"content":"* **UID**: A unique numerical identifier for any person added in NetConnect.","lastModifiedDate":"2024-03-11"},{"lineNumber":520,"author":{"gitId":"shaunlxw"},"content":"* **CSV file**: A plain text file format that uses commas to separate values, and newlines to separate records.","lastModifiedDate":"2024-03-11"},{"lineNumber":521,"author":{"gitId":"shaunlxw"},"content":"* **Alias**: A shortcut name/format for commands.","lastModifiedDate":"2024-03-14"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":531,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":532,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2024-03-15"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. _{ more test cases ‚Ä¶‚Äã }_","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"1. _{ more test cases ‚Ä¶‚Äã }_","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. _{ more test cases ‚Ä¶‚Äã }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"starsia":12,"purivirakarin":38,"-":349,"shaunlxw":177}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [NetConnect architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"purivirakarin":2,"-":60}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"# NetConnect User Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"NetConnect is a desktop app for managing contacts in SMEs, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It enables HR and relations managers to efficiently manage their employees, clients, as well as suppliers, **all in one place** ‚òùüèª.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"tanjieling0"},"content":"The inspiration behind NetConnect lies in solving a specific set of challenges faced by the food business managers demographic. Specifically, we aim to address the challenge of managing various contact types: clients, suppliers, and employees.","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"If you relate to this problem we identified, then NetConnect might be just right for you. This user guide will accompany you in maximising the capabilities of this product, freeing time for more pressing issues.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"# Table of Contents","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"* [Features](#features)","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"  + [Viewing help : `help`](#help)","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"  + [Adding a person: `add` ](#add)","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"  + [Deleting a person : `delete`](#delete) ","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"  + [Adding a Remark to a Person : `remark`](#remark)","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"  + [Listing all persons : `list`](#list)","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"  + [Editing a person : `edit`](#edit)","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"  + [Locating persons by name: `find`](#find)","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"  + [Locating persons by remark: `findrem`](#findrem)","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"  + [Locating persons by role: `findrole`](#findrole)","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"  + [Locating persons by phone number: `findnum`](#findnum)","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"  + [Clearing all entries : `clear`](#clear)","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"  + [Create Relations between Profiles : `relate`](#relate)","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"  + [Show Relations Associated to a Person : `showrelated`](#showrelated)","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"  + [Open on Last State](#open-on-last-state)","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"  + [Export Current View to CSV File : `export`](#export)","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"  + [Never Miss a Birthday!](#birthday)","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"  + [Exiting the program : `exit`](#exit-program)","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"  + [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"  + [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"* [FAQ](#faq)","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"* [Known issues](#known-issues)","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"# Quick start","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"1. Download the latest `netconnect.jar` from [here](https://github.com/AY2324S2-CS2103T-F12-1/tp/releases).","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your NetConnect.","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar netconnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 r/employee` : Adds an employee named `John Doe` to the Address Book.","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"   * `delete i/3` : Deletes the contact with ID 3 from NetConnect.","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"# Features","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Items with `‚Ä¶`‚Äã after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]‚Ä¶‚Äã` can be used as `¬†` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"help\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"nuyer"},"content":"## Viewing help : `help` ","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"tanjieling0"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"add\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"nuyer"},"content":"## Adding a person: `add` ","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"tanjieling0"},"content":"Adds a person (Client, Supplier or Employee) to the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"tanjieling0"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS role/ROLE [dob/yyyy-mm-dd][t/TAG]‚Ä¶‚Äã`","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"starsia"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 r/client t/friend`","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"starsia"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 r/supplier`","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"tanjieling0"},"content":"**Info:** NetConnect checks for unique profiles by its NAME, PHONE and EMAIL. It does not allow you to create two profiles with identical name, phone number and email.","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"delete\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"nuyer"},"content":"## Deleting a person : `delete`","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"tanjieling0"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"tanjieling0"},"content":"Format: `delete [n/NAME] [i/ID]`","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"tanjieling0"},"content":"* Deletes the person with the specified `NAME` or `ID`.","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"tanjieling0"},"content":"* If there are more than one person with the specified `NAME`, `ID` has to be used.","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"tanjieling0"},"content":"* `ID` refers to the unique identification number assigned to each person when first added to the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"tanjieling0"},"content":"* `ID` **must refer to a person that exist within NetConnect**.","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"tanjieling0"},"content":"* `delete i/2` deletes the person with an ID of 2 in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"tanjieling0"},"content":"* `delete n/John Doe` deletes the person with the name John Doe (if no one else have the same name).","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"shaunlxw"},"content":"**Info:** Instead of completely deleting the profile from the database, NetConnect does a soft delete of the profile instead. What this means is that the profile still exists in the database, but is marked as inactive, and will not appear in your current list or searches.","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"tanjieling0"},"content":"**Warnings:** Due to the destructive nature of this action, NetConnect will require a confirmation from the user before it is executed.","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"remark\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"nuyer"},"content":"## Adding a Remark to a Person : `remark`","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"tanjieling0"},"content":"Adds a remark to a person in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"tanjieling0"},"content":"Format: `remark i/ID r/REMARK`","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"tanjieling0"},"content":"* Adds a remark to the person with the specified `ID`.","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"tanjieling0"},"content":"* `ID` refers to the unique identification number assigned to each person when first added to the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"tanjieling0"},"content":"* `ID` **must refer to a person that exist within NetConnect**.","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"nuyer"},"content":"* You can remove a remark from a person by typing `remark i/ID` without specifying any remarks after it.","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"tanjieling0"},"content":"Examples:","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"tanjieling0"},"content":"* `remark i/2 r/John is a very good client` Adds a remark to the person with ID of 2.","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"tanjieling0"},"content":"* `remark i/2` Removes the remark from the person with ID of 2.","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"list\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"nuyer"},"content":"## Listing all persons : `list`","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"edit\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"nuyer"},"content":"## Editing a person : `edit`","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"tanjieling0"},"content":"Format: `edit ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [ro/ROLE] [t/TAG]‚Ä¶‚Äã`","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"tanjieling0"},"content":"* Edits the person with the specified `ID`. `ID` refers to the unique identification number assigned to each person when first added to the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"tanjieling0"},"content":"* `ID` **must refer to a person that exist within NetConnect**.","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"tanjieling0"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"tanjieling0"},"content":"* You can remove all the person‚Äôs tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"tanjieling0"},"content":"* You cannot edit a field that is invalid to the current person type.","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"shaunlxw"},"content":"*  `edit i/1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the person with ID of 1 to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"shaunlxw"},"content":"*  `edit i/2 n/Betsy Crower t/` Edits the name of the person with ID of 2 to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"find\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"nuyer"},"content":"## Locating persons by name: `find`","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"tanjieling0"},"content":"Finds persons whose names contain any of the given name keywords.","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"tanjieling0"},"content":"Format: `find NAME_KEYWORD [MORE_NAME_KEYWORDS]`","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"tanjieling0"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`.","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"tanjieling0"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"tanjieling0"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"tanjieling0"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"tanjieling0"},"content":"* `find John` returns `john` and `John Doe`.","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"tanjieling0"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`.\u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"tanjieling0"},"content":"**Tip:** You can concatenate all the names you are interested in finding. E.g. If you are interested in listing Alice, Bob and Charles in your list, you can use the following command `find alice bob charles`.","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"findrem\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"nuyer"},"content":"## Locating persons by remark: `findrem`","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"tanjieling0"},"content":"Finds persons who have remarks that matches the given keywords.","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"tanjieling0"},"content":"Format: `find REMARK_KEYWORD [MORE_REMARK_KEYWORDS]`","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"tanjieling0"},"content":"* The search is case-insensitive. e.g. `Friendly` will match `friendly`.","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"tanjieling0"},"content":"* The order of the keywords does not matter. e.g. `fish supply` will match `supply fish`.","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"tanjieling0"},"content":"* Only the remark is searched.","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"tanjieling0"},"content":"* Only full words will be matched e.g. `fish` will not match `fishball`.","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"tanjieling0"},"content":"* Persons with remarks matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"tanjieling0"},"content":"Examples:","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"tanjieling0"},"content":"* `findrem unfriendly` returns all persons who have the remark `unfriendly`.","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"tanjieling0"},"content":"* `findrem marketing IC`  returns all persons who have the remark `publicity IC`, as well as persons who have the remark `marketing head`.\u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"findrole\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"nuyer"},"content":"## Locating persons by role: `findrole`","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"tanjieling0"},"content":"Finds persons whose role matches the given role - Client, Supplier or Employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"tanjieling0"},"content":"Format: `findrole ROLE_KEYWORD [MORE_ROLE_KEYWORDS]`","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"tanjieling0"},"content":"* The search is case-insensitive. e.g. `client` will match `Client`.","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"tanjieling0"},"content":"* Only the role is searched.","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"tanjieling0"},"content":"* the role must be an exact match of either `client`, `supplier` or `employee`.","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"tanjieling0"},"content":"Examples:","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"tanjieling0"},"content":"* `findrole client` returns all persons who have the role `employee`.","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"tanjieling0"},"content":"* `findrole supplier clients` returns all persons who have the role `supplier` or `client`.","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":257,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"findnum\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"nuyer"},"content":"## Locating persons by phone number: `findnum`","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":263,"author":{"gitId":"shaunlxw"},"content":"Finds persons whose phone number matches the given number.","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":265,"author":{"gitId":"tanjieling0"},"content":"Format: `findnum CONTACT_NUMBER [CONTACT_NUMBERS]`","lastModifiedDate":"2024-03-20"},{"lineNumber":266,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":267,"author":{"gitId":"tanjieling0"},"content":"* Only the full number is searched (i.e. no partial match). e.g. `83647382` or `8364` will not match `83641001`.","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"tanjieling0"},"content":"* The search will return at most one person for each number since two people cannot share the same phone number.","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":271,"author":{"gitId":"tanjieling0"},"content":"* `findnum 83647382` returns `John Doe` who has the phone number `83647382`.","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":273,"author":{"gitId":"tanjieling0"},"content":"**Note:** NetConnect accepts phone numbers with three or more digits, to account for staff extensions in the company. This is not a bug.","lastModifiedDate":"2024-03-20"},{"lineNumber":274,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"clear\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"nuyer"},"content":"## Clearing all entries : `clear`","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"tanjieling0"},"content":"**Warnings:** Due to the destructive nature of this action, NetConnect will require a confirmation from the user before it is executed.","lastModifiedDate":"2024-03-20"},{"lineNumber":285,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"relate\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":290,"author":{"gitId":"nuyer"},"content":"## Create Relations between Profiles : `relate`","lastModifiedDate":"2024-03-21"},{"lineNumber":291,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":292,"author":{"gitId":"tanjieling0"},"content":"Creates a relation between two profiles in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":293,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":294,"author":{"gitId":"tanjieling0"},"content":"Format: `relate [i/ID][n/NAME] [i/ID][n/NAME]`","lastModifiedDate":"2024-03-20"},{"lineNumber":295,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":296,"author":{"gitId":"shaunlxw"},"content":"Example: `relate i/1 i/2` creates a relation between the profiles with ID of 1 and 2.","lastModifiedDate":"2024-03-20"},{"lineNumber":297,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":298,"author":{"gitId":"tanjieling0"},"content":"**Info:** The relation is stored in a field within Person object, which contains the IDs of any suppliers or clients that they are connected to.","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"showrelated\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":304,"author":{"gitId":"nuyer"},"content":"## Show Relations Associated to a Person : `showrelated`","lastModifiedDate":"2024-03-21"},{"lineNumber":305,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":306,"author":{"gitId":"tanjieling0"},"content":"Shows all the relations associated to a person in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":307,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":308,"author":{"gitId":"tanjieling0"},"content":"Format: `showrelated [i/ID][n/NAME]`","lastModifiedDate":"2024-03-20"},{"lineNumber":309,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":310,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":311,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":312,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"open-on-last-state\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":313,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":314,"author":{"gitId":"nuyer"},"content":"## Open on Last State","lastModifiedDate":"2024-03-21"},{"lineNumber":315,"author":{"gitId":"shaunlxw"},"content":"With every change to the command input, NetConnect saves and updates the command input in a separate file. When the app closes and is opened again, the last command present before closure will be retrieved from the separate file and input into the command field (if any). This way, you never have to worry about losing progress!","lastModifiedDate":"2024-03-20"},{"lineNumber":316,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":317,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":318,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":319,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"export\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":320,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"nuyer"},"content":"## Export Current View to CSV File : `export`","lastModifiedDate":"2024-03-21"},{"lineNumber":322,"author":{"gitId":"shaunlxw"},"content":"Retrieve information on a group of profiles at once with this function! This can be useful for consolidating all the emails or contact number at once, or to share information with third parties.","lastModifiedDate":"2024-03-20"},{"lineNumber":323,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":324,"author":{"gitId":"tanjieling0"},"content":"**To export all profiles in the address book to a CSV file:** ","lastModifiedDate":"2024-03-21"},{"lineNumber":325,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":326,"author":{"gitId":"tanjieling0"},"content":"Step 1: `list` ","lastModifiedDate":"2024-03-21"},{"lineNumber":327,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":328,"author":{"gitId":"tanjieling0"},"content":"Step 2: `export`","lastModifiedDate":"2024-03-21"},{"lineNumber":329,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":330,"author":{"gitId":"tanjieling0"},"content":"* The `list` command in the first step is to pull all profiles into the current view.","lastModifiedDate":"2024-03-20"},{"lineNumber":331,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":332,"author":{"gitId":"tanjieling0"},"content":"**To export a specific group of profiles to a CSV file:**","lastModifiedDate":"2024-03-21"},{"lineNumber":333,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":334,"author":{"gitId":"tanjieling0"},"content":"Step 1: `find [KEYWORD]` or any other function that filters the profiles.","lastModifiedDate":"2024-03-21"},{"lineNumber":335,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":336,"author":{"gitId":"tanjieling0"},"content":"Step 2: `export`","lastModifiedDate":"2024-03-21"},{"lineNumber":337,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":338,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":339,"author":{"gitId":"tanjieling0"},"content":"* The first step is to filter the profiles you want to export into the current view.","lastModifiedDate":"2024-03-20"},{"lineNumber":340,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":341,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":342,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":343,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"birthday\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":344,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":345,"author":{"gitId":"nuyer"},"content":"## Never Miss a Birthday!","lastModifiedDate":"2024-03-21"},{"lineNumber":346,"author":{"gitId":"shaunlxw"},"content":"Celebrate your employees\u0027 birthdays to show that you care. NetConnect will remind you of the birthdays of your employees, so you never have to miss a birthday again!","lastModifiedDate":"2024-03-20"},{"lineNumber":347,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":348,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":349,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":350,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"exit-program\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":351,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":352,"author":{"gitId":"nuyer"},"content":"## Exiting the program : `exit`","lastModifiedDate":"2024-03-21"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":360,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"saving-the-data\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":362,"author":{"gitId":"nuyer"},"content":"## Saving the data","lastModifiedDate":"2024-03-21"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"purivirakarin"},"content":"NetConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"nuyer"},"content":"\u003csection id\u003d\"editing-the-data-file\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":369,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":370,"author":{"gitId":"nuyer"},"content":"## Editing the data file","lastModifiedDate":"2024-03-21"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":372,"author":{"gitId":"purivirakarin"},"content":"NetConnect data are saved automatically as a JSON file `[JAR file location]/data/netconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":374,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":375,"author":{"gitId":"purivirakarin"},"content":"If your changes to the data file makes its format invalid, NetConnect will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":376,"author":{"gitId":"purivirakarin"},"content":"Furthermore, certain edits can cause the NetConnect to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-15"},{"lineNumber":377,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":378,"author":{"gitId":"nuyer"},"content":"\u003c/section\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":380,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"nuyer"},"content":"# FAQ","lastModifiedDate":"2024-03-21"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"purivirakarin"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous NetConnect home folder.","lastModifiedDate":"2024-03-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"tanjieling0"},"content":"**Q**: How do I know if Java 11 is already installed on my computer?","lastModifiedDate":"2024-03-21"},{"lineNumber":388,"author":{"gitId":"tanjieling0"},"content":"**A**: Open the Command Prompt (Windows) or the Terminal (MacOS) and run the `java -version` command. The output should contain Java 11 if it is installed.","lastModifiedDate":"2024-03-21"},{"lineNumber":389,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":390,"author":{"gitId":"tanjieling0"},"content":"**Q**: What if I have newer versions of Java already installed on my computer?","lastModifiedDate":"2024-03-21"},{"lineNumber":391,"author":{"gitId":"tanjieling0"},"content":"**A**: You will still need Java 11 to run NetConnect, though multiple versions should be fine. You may check this using the `java -version` command. The output should contain Java 11 if it is installed.","lastModifiedDate":"2024-03-21"},{"lineNumber":392,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":393,"author":{"gitId":"tanjieling0"},"content":"**Q**: What operating systems can I use NetConnect on?","lastModifiedDate":"2024-03-21"},{"lineNumber":394,"author":{"gitId":"tanjieling0"},"content":"**A**: NetConnect can be run on Linux, Windows, and macOS, provided that Java 11 is installed.","lastModifiedDate":"2024-03-21"},{"lineNumber":395,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":396,"author":{"gitId":"tanjieling0"},"content":"**Q**: Do I require the internet to run the application?","lastModifiedDate":"2024-03-21"},{"lineNumber":397,"author":{"gitId":"tanjieling0"},"content":"**A**: No, you do not need the internet to access our application or its features.","lastModifiedDate":"2024-03-21"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"nuyer"},"content":"# Known issues","lastModifiedDate":"2024-03-21"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2024-03-15"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":405,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":407,"author":{"gitId":"nuyer"},"content":"# Command summary","lastModifiedDate":"2024-03-21"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"nuyer"},"content":"| Action                   | Format                                                                                                                                                                                                                      | Examples                                                        |","lastModifiedDate":"2024-03-21"},{"lineNumber":410,"author":{"gitId":"nuyer"},"content":"|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------|","lastModifiedDate":"2024-03-21"},{"lineNumber":411,"author":{"gitId":"nuyer"},"content":"| **Help**                 | `help`                                                                                                                                                                                                                      | `help`                                                          |","lastModifiedDate":"2024-03-21"},{"lineNumber":412,"author":{"gitId":"nuyer"},"content":"| **Add**                  | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS r/ROLE [t/TAG]‚Ä¶ [r/someremark] [dob/yyyy-mm-dd] [prod/allproducts] [dept/departments] [job/jobtitle] [tos/termsofservice] [skills/employeeskills] [pref/clientpreferences] ‚Äã ` | `add n/pika p/98329432 e/chu@example.com a/Unova role/EMPLOYEE` |","lastModifiedDate":"2024-03-21"},{"lineNumber":413,"author":{"gitId":"nuyer"},"content":"| **List**                 | `list`                                                                                                                                                                                                                      | `list`                                                          || **Add**                  | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS r/ROLE [t/TAG]‚Ä¶ [r/someremark] [dob/yyyy-mm-dd] [prod/allproducts] [dept/departments] [job/jobtitle] [tos/termsofservice] [skills/employeeskills] [pref/clientpreferences] ‚Äã ` | `add n/pika p/98329432 e/chu@example.com a/Unova role/EMPLOYEE` |","lastModifiedDate":"2024-03-21"},{"lineNumber":414,"author":{"gitId":"nuyer"},"content":"| **Delete**               | `delete [i/ID] [n/NAME]`                                                                                                                                                                                                    | `delete i/123`, `delete n/John Doe`                             |","lastModifiedDate":"2024-03-21"},{"lineNumber":415,"author":{"gitId":"nuyer"},"content":"| **Edit**                 | `edit i/ID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [r/ROLE] [t/TAG]‚Ä¶‚Äã`                                                                                                                                              | `edit i/123 n/James Lee e/jameslee@example.com`                 |","lastModifiedDate":"2024-03-21"},{"lineNumber":416,"author":{"gitId":"nuyer"},"content":"| **Remark**               | `remark i/ID r/REMARK`                                                                                                                                                                                                      | `remark i/1 r/Has a dog called Bob`                             |","lastModifiedDate":"2024-03-21"},{"lineNumber":417,"author":{"gitId":"nuyer"},"content":"| **Tag**                  | `tag i/ID t/TAG‚Ä¶‚Äã`                                                                                                                                                                                                          | `tag i/123 t/friend t/colleague`                                |","lastModifiedDate":"2024-03-21"},{"lineNumber":418,"author":{"gitId":"nuyer"},"content":"| **Find**                 | `find NAME_KEYWORD [MORE_NAME_KEYWORD]`                                                                                                                                                                                     | `find James Jake`                                               |","lastModifiedDate":"2024-03-21"},{"lineNumber":419,"author":{"gitId":"nuyer"},"content":"| **Findrem**              | `findrem REMARK_KEYWORD [MORE_REMARK_KEYWORD]`                                                                                                                                                                              | `findrem Has a dog called Bob`                                  |","lastModifiedDate":"2024-03-21"},{"lineNumber":420,"author":{"gitId":"nuyer"},"content":"| **Findrole**             | `findrole ROLE [MORE_ROLES]`                                                                                                                                                                                                | `findrole employee`                                             |","lastModifiedDate":"2024-03-21"},{"lineNumber":421,"author":{"gitId":"nuyer"},"content":"| **Findnum**              | `findnum PHONE [MORE_PHONES]`                                                                                                                                                                                               | `findnum 83647382 97823975`                                     |","lastModifiedDate":"2024-03-21"},{"lineNumber":422,"author":{"gitId":"nuyer"},"content":"| **Clear**                | `clear`                                                                                                                                                                                                                     | `clear`                                                         |","lastModifiedDate":"2024-03-21"},{"lineNumber":423,"author":{"gitId":"nuyer"},"content":"| **Relate Profiles**      | `relate [i/ID][n/NAME] [i/ID][n/NAME]`                                                                                                                                                                                      | `relate i/1 i/2`, `relate n/Alice i/2`                          |","lastModifiedDate":"2024-03-21"},{"lineNumber":424,"author":{"gitId":"nuyer"},"content":"| **Show related Profile** | `showrelated [i/ID][n/NAME]`                                                                                                                                                                                                | `showrelate i/33`, `showrelate n/Alice`                         |","lastModifiedDate":"2024-03-21"},{"lineNumber":425,"author":{"gitId":"nuyer"},"content":"| **Export**               | `export [filename]`                                                                                                                                                                                                         | `export ClientInfo.csv`                                         |","lastModifiedDate":"2024-03-21"},{"lineNumber":426,"author":{"gitId":"nuyer"},"content":"| **Exit**                 | `exit`                                                                                                                                                                                                                      | `exit`                                                                |","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"tanjieling0":129,"starsia":6,"nuyer":135,"purivirakarin":9,"-":136,"shaunlxw":11}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eNetConnect\u003c/a\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-F12-1/tp/\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"purivirakarin":1,"-":65,"shaunlxw":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveNetConnect(netConnect)","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":1,"-":38}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"NetConnect *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"NetConnect *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":2,"-":19}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"if () then ([command commits NetConnect])","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    :Save NetConnect to","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    netConnectStateList;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":3,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"participant \":NetConnectParser\" as NetConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"LogicManager -\u003e NetConnectParser : parseCommand(\"delete 1\")","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"activate NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"NetConnectParser -\u003e DeleteCommandParser","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"DeleteCommandParser --\u003e NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"NetConnectParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"DeleteCommandParser --\u003e NetConnectParser : d","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"DeleteCommandParser -[hidden]-\u003e NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"NetConnectParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"deactivate NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":10,"-":60}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyNetConnect\" as ReadOnlyNetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"Class NetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"NetConnect .up.|\u003e ReadOnlyNetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"Model .left.\u003e ReadOnlyNetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"ModelManager -left-\u003e \"1\" NetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"NetConnect *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":6,"-":48}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"Class NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"HiddenOutside ..\u003e NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"NetConnectParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"NetConnectParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"purivirakarin":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"package \"NetConnect Storage\" #F4F6F6{","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nNetConnectStorage\" as NetConnectStorage","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"Class JsonNetConnectStorage","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"Class JsonSerializableNetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"StorageManager -up-\u003e \"1\" NetConnectStorage","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"Storage -right-|\u003e NetConnectStorage","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"JsonNetConnectStorage .up.|\u003e NetConnectStorage","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"JsonNetConnectStorage ..\u003e JsonSerializableNetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"JsonSerializableNetConnect --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":9,"-":34}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    class State1 as \"\u003cu\u003eab0:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    class State2 as \"\u003cu\u003eab1:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    class State3 as \"\u003cu\u003eab2:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":3,"-":18}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    class State1 as \"\u003cu\u003eab0:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    class State2 as \"\u003cu\u003eab1:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    class State3 as \"\u003cu\u003eab2:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":3,"-":20}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    class State1 as \"\u003cu\u003eab0:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    class State2 as \"\u003cu\u003eab1:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    class State3 as \"\u003cu\u003eab2:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":3,"-":18}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    class State1 as \"\u003cu\u003eab0:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    class State2 as \"\u003cu\u003eab1:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    class State3 as \"\u003cu\u003eab2:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    class State1 as \"\u003cu\u003eab0:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    class State2 as \"\u003cu\u003eab1:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    class State3 as \"\u003cu\u003eab2:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    class State1 as \"\u003cu\u003eab0:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    class State2 as \"\u003cu\u003eab1:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    class State3 as \"\u003cu\u003eab3:NetConnect\u003c/u\u003e\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":3,"-":19}},{"path":"docs/diagrams/UndoSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"participant \":NetConnectParser\" as NetConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"LogicManager -\u003e NetConnectParser : parseCommand(undo)","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"activate NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"NetConnectParser -\u003e UndoCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"UndoCommand --\u003e NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"NetConnectParser --\u003e LogicManager : u","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"deactivate NetConnectParser","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"UndoCommand -\u003e Model : undoNetConnect()","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"purivirakarin":8,"-":38}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"participant \":VersionedNetConnect\" as VersionedNetConnect MODEL_COLOR","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"[-\u003e Model : undoNetConnect()","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"Model -\u003e VersionedNetConnect : undo()","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"activate VersionedNetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"VersionedNetConnect -\u003e VersionedNetConnect :resetData(ReadOnlyNetConnect)","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"VersionedNetConnect --\u003e Model :","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"deactivate VersionedNetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"[\u003c-- Model","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"purivirakarin":7,"-":16}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"Participant \":NetConnectParser\" as abp LOGIC_COLOR","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"purivirakarin":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"# NetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F12-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S2-CS2103T-F12-1/tp)","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"**NetConnect is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"* If you are interested in using NetConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"* If you are interested about developing NetConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"purivirakarin":6,"-":14}},{"path":"docs/team/nuyer.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"  layout: page","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"  title: \"nuyer\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"### Project: NetConnect","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"NetConnect -","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"_{to be added}_","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"nuyer":12}},{"path":"docs/team/purivirakarin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"  layout: page","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"  title: \"purivirakarin\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"### Project: NetConnect","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"NetConnect -","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"_{to be added}_","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"nuyer":12}},{"path":"docs/team/shaunlxw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"  layout: page","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"  title: \"shaunlxw\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"### Project: NetConnect","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"NetConnect -","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"_{to be added}_","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"nuyer":12}},{"path":"docs/team/starsia.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"  layout: page","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"  title: \"starsia\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"### Project: NetConnect","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"NetConnect -","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"_{to be added}_","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"nuyer":12}},{"path":"docs/team/tanjieling0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"  layout: page","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"  title: \"tanjieling0\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"---","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"### Project: NetConnect","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"NetConnect -","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"_{to be added}_","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"nuyer":12}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command‚Äâ‚Äî‚Äâ`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"This command allows users of the NetConnect application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We‚Äôll assume that you have already set up the development environment as outlined in the Developer‚Äôs Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Let‚Äôs start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"For now, let‚Äôs keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `NetConnectParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let‚Äôs change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Let‚Äôs change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let‚Äôs change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let‚Äôs move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let‚Äôs take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let‚Äôs find out what we need to do in order to obtain the Index and String that we need. Let‚Äôs look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user‚Äôs input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"purivirakarin"},"content":"Don‚Äôt forget to update `NetConnectParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let‚Äôs lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person‚Äôs name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let‚Äôs change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let‚Äôs go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don‚Äôt worry‚Äâ‚Äî‚Äâwe will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```xml","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"That‚Äôs it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"purivirakarin"},"content":"NetConnect stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library‚Äâ‚Äî‚ÄâJackson. Let‚Äôs update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2024-03-14"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"purivirakarin"},"content":"You must delete NetConnect‚Äôs storage file located at `/data/netconnect.json` before running it! Not doing so will cause NetConnect to default to an empty address book!","lastModifiedDate":"2024-03-14"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression‚Äâ‚Äî‚Äâwe went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don‚Äôt slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let‚Äôs verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let‚Äôs create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let‚Äôs change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let‚Äôs use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"purivirakarin"},"content":"This concludes the tutorial for adding a new `Command` to NetConnect.","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"purivirakarin":6,"-":393}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e ‚Äî Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html) already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let‚Äôs try to use it as much as we can.","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let‚Äôs try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What‚Äôs left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"**`invalidPersonNetConnect.json`:**","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"  \"persons\": [","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"    {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"  ]","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"purivirakarin":6,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. ‚Ä¶‚Äã\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e ‚Äî Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA‚Äôs debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we‚Äôre looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we‚Äôre looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let‚Äôs set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let‚Äôs _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let‚Äôs take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"        Command command \u003d netConnectParser.parseCommand(commandText);","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"            storage.saveNetConnect(model.getNetConnect());","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let‚Äôs take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `NetConnectParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"   ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   ...","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"       return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   ...","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Let‚Äôs see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"1. Let‚Äôs continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":195,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"purivirakarin"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveNetConnect(model.getNetConnect())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"purivirakarin"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonNetConnect#saveNetConnect()` method which calls the `JsonSerializableNetConnect` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"   **`JsonSerializableNetConnect` constructor:**","lastModifiedDate":"2024-03-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"purivirakarin"},"content":"    * Converts a given {@code ReadOnlyNetConnect} into this class for Jackson use.","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"purivirakarin"},"content":"    * {@code JsonSerializableNetConnect}.","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"purivirakarin"},"content":"   public JsonSerializableNetConnect(ReadOnlyNetConnect source) {","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"purivirakarin"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableNetConnect`.","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2024-03-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"   **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"   public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"       requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"       resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/„Ç¢„É™„Çπ „É¶„Éº`","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"purivirakarin":15,"-":300}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"purivirakarin":5,"-":36}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.storage.JsonNetConnectStorage;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.storage.NetConnectStorage;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing NetConnect ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        NetConnectStorage netConnectStorage \u003d new JsonNetConnectStorage(userPrefs.getNetConnectFilePath());","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        storage \u003d new StorageManager(netConnectStorage, userPrefsStorage);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"     * book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"     * The data from the sample address book will be used instead if","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"     * {@code storage}\u0027s address book is not found,","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"     * or an empty address book will be used instead if errors occur when reading","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"     * {@code storage}\u0027s address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        logger.info(\"Using data file : \" + storage.getNetConnectFilePath());","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"        Optional\u003cReadOnlyNetConnect\u003e netConnectOptional;","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"        ReadOnlyNetConnect initialData;","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"            netConnectOptional \u003d storage.readNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"            if (!netConnectOptional.isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"                logger.info(\"Creating a new data file \" + storage.getNetConnectFilePath()","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"                        + \" populated with a sample NetConnect.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"            initialData \u003d netConnectOptional.orElseGet(SampleDataUtil::getSampleNetConnect);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"            logger.warning(\"Data file at \" + storage.getNetConnectFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"                    + \" Will be starting with an empty NetConnect.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"            initialData \u003d new NetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"        // Update config file in case it was missing to begin with or there are","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"        // new/unused fields","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"     * file path,","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"        // Update prefs file in case it was missing to begin with or there are","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"        // new/unused fields","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"purivirakarin"},"content":"        logger.info(\"Starting NetConnect \" + MainApp.VERSION);","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":31,"-":161}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    private static final String LOG_FILE \u003d \"netconnect.log\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"     * Creates a logger named \u0027netconnect\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"        baseLogger \u003d Logger.getLogger(\"netconnect\");","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":3,"-":103}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":2,"-":120}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    private final int zeroBasedIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"purivirakarin":2,"-":67}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"purivirakarin":3,"-":34}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":2,"-":83}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":4,"-":142}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":3,"-":67}},{"path":"src/main/java/seedu/address/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2019-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName  The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        return stringBuilder + OBJECT_SUFFIX;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"purivirakarin":1,"-":52}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     * Returns the NetConnect.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"     * @see seedu.address.model.Model#getNetConnect()","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    ReadOnlyNetConnect getNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    Path getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"purivirakarin":9,"-":44}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.logic.parser.NetConnectParser;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d \"Could not save data to file %s due to insufficient\"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"            + \"permissions to write to the file or the folder.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    private final NetConnectParser netConnectParser;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"     * {@code Storage}.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        netConnectParser \u003d new NetConnectParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        Command command \u003d netConnectParser.parseCommand(commandText);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"            storage.saveNetConnect(model.getNetConnect());","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"    public ReadOnlyNetConnect getNetConnect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        return model.getNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    public Path getNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        return model.getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"purivirakarin":14,"-":75}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"    public static final String MESSAGE_INVALID_PERSON_ID \u003d \"There is no person with id %1$d\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    public static final String MESSAGE_INVALID_CLIENT_PROPERTY \u003d \"Client cannot have department, job title, skills, \"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"            + \"and terms of service fields\";","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    public static final String MESSAGE_INVALID_EMPLOYEE_PROPERTY \u003d \"Employee cannot have preferences, products, \"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"            + \"and terms of service fields\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    public static final String MESSAGE_INVALID_SUPPLIER_PROPERTY \u003d \"Supplier cannot have department, job title, \"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"            + \"and skills fields\";","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"                .append(\"; Id: \")","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"                .append(person.getId())","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        builder.append(\"; Remark: \").append(person.getRemark());","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        if (person instanceof Client) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"            builder.append(\"; Products: \").append(((Client) person).getProducts())","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"                    .append(\"; Preferences: \").append(((Client) person).getPreferences());","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Employee) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"            builder.append(\"; Department: \").append(((Employee) person).getDepartment())","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"                    .append(\"; Job Title: \").append(((Employee) person).getJobTitle())","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"                    .append(\"; Skills: \").append(((Employee) person).getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Supplier) {","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"            builder.append(\"; Products: \").append(((Supplier) person).getProducts())","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"                    .append(\"; Terms of Service: \").append(((Supplier) person).getTermsOfService());","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"purivirakarin":21,"-":51,"shaunlxw":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCES;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILLS;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TERMSOFSERVICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_DEPARTMENT + \"DEPARTMENT] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_JOBTITLE + \"JOBTITLE] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_PREFERENCES + \"PREFERENCES] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_TERMSOFSERVICE + \"TERMSOFSERVICE] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_PRODUCTS + \"PRODUCTS] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_SKILLS + \"SKILLS]\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_REMARK + \"owes money \"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_ROLE + \"employee \"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_DEPARTMENT + \"HR \"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_JOBTITLE + \"Manager \"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_PREFERENCES + \"Likes to work from home \"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_TERMSOFSERVICE + \"2 years \"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_PRODUCTS + \"Laptop \"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_SKILLS + \"Java\";","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"purivirakarin":27,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"        model.setNetConnect(new NetConnect());","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"purivirakarin":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"     * The application should exit.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"purivirakarin":6,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"            + \": Deletes the person with the specified ID.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"            + PREFIX_ID + \"ID\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/1\";","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"    private final Id targetId;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"    public DeleteCommand(Id targetId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"        this.targetId \u003d targetId;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"        if (!model.hasId(targetId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON_ID, targetId.value));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"        Person personToDelete \u003d model.getPersonById(targetId);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"        boolean showList \u003d !model.getFilteredPersonList().contains(personToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"        if (showList) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"            model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"        return targetId.equals(otherDeleteCommand.targetId);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"                .add(\"targetId\", targetId)","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":54,"shaunlxw":18}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCES;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILLS;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TERMSOFSERVICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"            + \": Edits the details of the person with the specified ID. \"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_DEPARTMENT + \"DEPARTMENT] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_JOBTITLE + \"JOBTITLE] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_SKILLS + \"SKILLS] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_PRODUCTS + \"PRODUCTS] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_TERMSOFSERVICE + \"TERMSOFSERVICE] \"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"            + \"[\" + PREFIX_PREFERENCES + \"PREFERENCES]\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"shaunlxw"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/1 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"    private final Id id;","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"     * @param id of the person in the NetConnect to edit","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"    public EditCommand(Id id, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"        if (!model.hasId(id)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON_ID, id.value));","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"        Person personToEdit \u003d model.getPersonById(id);","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"    static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"            throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"shaunlxw"},"content":"        Id idOfPerson \u003d personToEdit.getId();","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"        if (personToEdit instanceof Client) {","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"            if (editPersonDescriptor.getDepartment().isPresent() || editPersonDescriptor.getJobTitle().isPresent()","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"                    || editPersonDescriptor.getSkills().isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_PROPERTY);","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"            String updatedPreferences \u003d editPersonDescriptor.getPreferences()","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"                    .orElse(((Client) personToEdit).getPreferences());","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"            Products updatedProducts \u003d editPersonDescriptor.getProducts().orElse(((Client) personToEdit).getProducts());","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"            return new Client(idOfPerson, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"                    updatedTags, updatedProducts, updatedPreferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"        } else if (personToEdit instanceof Employee) {","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"            if (editPersonDescriptor.getPreferences().isPresent() || editPersonDescriptor.getProducts().isPresent()","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"                    || editPersonDescriptor.getTermsOfService().isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_PROPERTY);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"            Department updatedDepartment \u003d editPersonDescriptor.getDepartment()","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"                    .orElse(((Employee) personToEdit).getDepartment());","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"            JobTitle updatedJobTitle \u003d editPersonDescriptor.getJobTitle()","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"                    .orElse(((Employee) personToEdit).getJobTitle());","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"            Skills updatedSkills \u003d editPersonDescriptor.getSkills().orElse(((Employee) personToEdit).getSkills());","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"            return new Employee(idOfPerson, updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"                    updatedRemark, updatedTags, updatedDepartment, updatedJobTitle, updatedSkills);","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"        } else if (personToEdit instanceof Supplier) {","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"            if (editPersonDescriptor.getDepartment().isPresent() || editPersonDescriptor.getJobTitle().isPresent()","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"                    || editPersonDescriptor.getSkills().isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_SUPPLIER_PROPERTY);","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"purivirakarin"},"content":"            TermsOfService updatedTermsOfService \u003d editPersonDescriptor.getTermsOfService()","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"purivirakarin"},"content":"                    .orElse(((Supplier) personToEdit).getTermsOfService());","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"purivirakarin"},"content":"            Products updatedProducts \u003d editPersonDescriptor.getProducts()","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"purivirakarin"},"content":"                    .orElse(((Supplier) personToEdit).getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"            return new Supplier(idOfPerson, updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"                    updatedRemark, updatedTags, updatedProducts, updatedTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"        return personToEdit;","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"shaunlxw"},"content":"        return id.equals(otherEditCommand.id)","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"shaunlxw"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"purivirakarin"},"content":"        private Remark remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"purivirakarin"},"content":"        private Department department;","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"purivirakarin"},"content":"        private JobTitle jobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"purivirakarin"},"content":"        private Skills skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"purivirakarin"},"content":"        private Products products;","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"purivirakarin"},"content":"        private TermsOfService termsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"purivirakarin"},"content":"        private String preferences;","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"purivirakarin"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"purivirakarin"},"content":"            setDepartment(toCopy.department);","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"purivirakarin"},"content":"            setJobTitle(toCopy.jobTitle);","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"purivirakarin"},"content":"            setSkills(toCopy.skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"purivirakarin"},"content":"            setProducts(toCopy.products);","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"purivirakarin"},"content":"            setTermsOfService(toCopy.termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"purivirakarin"},"content":"            setPreferences(toCopy.preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"purivirakarin"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, remark, department, jobTitle, skills,","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"                    products, termsOfService, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"purivirakarin"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"purivirakarin"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":292,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":293,"author":{"gitId":"purivirakarin"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2024-03-20"},{"lineNumber":294,"author":{"gitId":"purivirakarin"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2024-03-20"},{"lineNumber":295,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":296,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":297,"author":{"gitId":"purivirakarin"},"content":"        public void setDepartment(Department department) {","lastModifiedDate":"2024-03-20"},{"lineNumber":298,"author":{"gitId":"purivirakarin"},"content":"            this.department \u003d department;","lastModifiedDate":"2024-03-20"},{"lineNumber":299,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":300,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":301,"author":{"gitId":"purivirakarin"},"content":"        public Optional\u003cDepartment\u003e getDepartment() {","lastModifiedDate":"2024-03-20"},{"lineNumber":302,"author":{"gitId":"purivirakarin"},"content":"            return Optional.ofNullable(department);","lastModifiedDate":"2024-03-20"},{"lineNumber":303,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":304,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":305,"author":{"gitId":"purivirakarin"},"content":"        public void setJobTitle(JobTitle jobTitle) {","lastModifiedDate":"2024-03-20"},{"lineNumber":306,"author":{"gitId":"purivirakarin"},"content":"            this.jobTitle \u003d jobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":307,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":308,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":309,"author":{"gitId":"purivirakarin"},"content":"        public Optional\u003cJobTitle\u003e getJobTitle() {","lastModifiedDate":"2024-03-20"},{"lineNumber":310,"author":{"gitId":"purivirakarin"},"content":"            return Optional.ofNullable(jobTitle);","lastModifiedDate":"2024-03-20"},{"lineNumber":311,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":312,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":313,"author":{"gitId":"purivirakarin"},"content":"        public void setSkills(Skills skills) {","lastModifiedDate":"2024-03-21"},{"lineNumber":314,"author":{"gitId":"purivirakarin"},"content":"            this.skills \u003d skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":315,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":316,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"purivirakarin"},"content":"        public Optional\u003cSkills\u003e getSkills() {","lastModifiedDate":"2024-03-21"},{"lineNumber":318,"author":{"gitId":"purivirakarin"},"content":"            return Optional.ofNullable(skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":319,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":320,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"purivirakarin"},"content":"        public void setProducts(Products products) {","lastModifiedDate":"2024-03-21"},{"lineNumber":322,"author":{"gitId":"purivirakarin"},"content":"            this.products \u003d products;","lastModifiedDate":"2024-03-21"},{"lineNumber":323,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":324,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":325,"author":{"gitId":"purivirakarin"},"content":"        public Optional\u003cProducts\u003e getProducts() {","lastModifiedDate":"2024-03-21"},{"lineNumber":326,"author":{"gitId":"purivirakarin"},"content":"            return Optional.ofNullable(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":327,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":328,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":329,"author":{"gitId":"purivirakarin"},"content":"        public void setTermsOfService(TermsOfService termsOfService) {","lastModifiedDate":"2024-03-20"},{"lineNumber":330,"author":{"gitId":"purivirakarin"},"content":"            this.termsOfService \u003d termsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":331,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":332,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":333,"author":{"gitId":"purivirakarin"},"content":"        public Optional\u003cTermsOfService\u003e getTermsOfService() {","lastModifiedDate":"2024-03-20"},{"lineNumber":334,"author":{"gitId":"purivirakarin"},"content":"            return Optional.ofNullable(termsOfService);","lastModifiedDate":"2024-03-20"},{"lineNumber":335,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":336,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":337,"author":{"gitId":"purivirakarin"},"content":"        public void setPreferences(String preferences) {","lastModifiedDate":"2024-03-21"},{"lineNumber":338,"author":{"gitId":"purivirakarin"},"content":"            this.preferences \u003d preferences;","lastModifiedDate":"2024-03-21"},{"lineNumber":339,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":340,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":341,"author":{"gitId":"purivirakarin"},"content":"        public Optional\u003cString\u003e getPreferences() {","lastModifiedDate":"2024-03-21"},{"lineNumber":342,"author":{"gitId":"purivirakarin"},"content":"            return Optional.ofNullable(preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":343,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":344,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":361,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-20"},{"lineNumber":362,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditPersonDescriptor.remark)","lastModifiedDate":"2024-03-21"},{"lineNumber":363,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(department, otherEditPersonDescriptor.department)","lastModifiedDate":"2024-03-20"},{"lineNumber":364,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(jobTitle, otherEditPersonDescriptor.jobTitle)","lastModifiedDate":"2024-03-20"},{"lineNumber":365,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(skills, otherEditPersonDescriptor.skills)","lastModifiedDate":"2024-03-21"},{"lineNumber":366,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(products, otherEditPersonDescriptor.products)","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(termsOfService, otherEditPersonDescriptor.termsOfService)","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"purivirakarin"},"content":"                    \u0026\u0026 Objects.equals(preferences, otherEditPersonDescriptor.preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-21"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-21"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-21"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2024-03-21"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2024-03-21"},{"lineNumber":379,"author":{"gitId":"purivirakarin"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2024-03-21"},{"lineNumber":380,"author":{"gitId":"purivirakarin"},"content":"                    .add(\"department\", department)","lastModifiedDate":"2024-03-21"},{"lineNumber":381,"author":{"gitId":"purivirakarin"},"content":"                    .add(\"jobTitle\", jobTitle)","lastModifiedDate":"2024-03-21"},{"lineNumber":382,"author":{"gitId":"purivirakarin"},"content":"                    .add(\"skills\", skills)","lastModifiedDate":"2024-03-21"},{"lineNumber":383,"author":{"gitId":"purivirakarin"},"content":"                    .add(\"products\", products)","lastModifiedDate":"2024-03-21"},{"lineNumber":384,"author":{"gitId":"purivirakarin"},"content":"                    .add(\"termsOfService\", termsOfService)","lastModifiedDate":"2024-03-21"},{"lineNumber":385,"author":{"gitId":"purivirakarin"},"content":"                    .add(\"preferences\", preferences)","lastModifiedDate":"2024-03-21"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"purivirakarin":150,"-":220,"shaunlxw":19}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":" * Export the address book data as a CSV file.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Success! Your contact has been exported as \";","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    public static final String MESSAGE_FAILURE_EMPTY_LIST \u003d \"Failed to export contacts. The contact list is empty.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    public static final String MESSAGE_FAILURE_FILE_WRITE \u003d \"Failed to export contacts due to file write error.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: export [FILENAME]\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"            + \"Exports the contact list as a CSV file with the specified filename.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"            + \"If no filename is provided, the default filename \u0027contacts.csv\u0027 will be used.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"            + \"Example: export my_contacts.csv\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    public final String filename;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     * Creates an ExportCommand to export contact as CV file","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"    public ExportCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"        this.filename \u003d \"contacts.csv\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"    public ExportCommand(String filename) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"            throw new CommandException(MESSAGE_FAILURE_EMPTY_LIST);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"        boolean isSuccessful \u003d model.exportCsv(filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"            throw new CommandException(MESSAGE_FAILURE_FILE_WRITE);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"        return new CommandResult(MESSAGE_SUCCESS + filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"        if (!(other instanceof seedu.address.logic.commands.ExportCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"        ExportCommand otherAddCommand \u003d (ExportCommand) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"nuyer"},"content":"        return filename.equals(otherAddCommand.filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"nuyer"},"content":"                .add(\"filename\", filename)","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"nuyer"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nuyer":78}},{"path":"src/main/java/seedu/address/logic/commands/FindNumCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"import seedu.address.model.person.PhoneContainsDigitsPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":" * Finds and lists all persons in address book whose phone number contains any of the argument phone numbers.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"public class FindNumCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"    public static final String COMMAND_WORD \u003d \"findnum\";","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose phone number contain any of \"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"            + \"the specified numbers and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"            + \"A phone number must have more 3 or more numeric digits.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"            + \"Parameters: PHONE_NUMBER [PHONE_NUMBERS]...\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"            + \"Example: \" + COMMAND_WORD + \" 87438807\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"    private final PhoneContainsDigitsPredicate predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"    public FindNumCommand(PhoneContainsDigitsPredicate predicate) {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"        if (!(other instanceof FindNumCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"        FindNumCommand otherFindNumCommand \u003d (FindNumCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"        return predicate.equals(otherFindNumCommand.predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"starsia":58}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_REMARK + \" [REMARK]\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"            + PREFIX_REMARK + \" Likes to swim.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    private final Index index;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    private final Remark remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * @param index  of the person in the filtered person list to edit the remark","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        if (personToEdit instanceof Client) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"            editedPerson \u003d new Client(personToEdit.getId(), personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"                    personToEdit.getEmail(), personToEdit.getAddress(), remark, personToEdit.getTags(), (","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"                    (Client) personToEdit).getProducts(), ((Client) personToEdit).getPreferences());","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        } else if (personToEdit instanceof Supplier) {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"            editedPerson \u003d new Supplier(personToEdit.getId(), personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"                    personToEdit.getEmail(), personToEdit.getAddress(), remark, personToEdit.getTags(), (","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"                    (Supplier) personToEdit).getProducts(), ((Supplier) personToEdit).getTermsOfService());","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        } else if (personToEdit instanceof Employee) {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"            editedPerson \u003d new Employee(personToEdit.getId(), personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"                    personToEdit.getEmail(), personToEdit.getAddress(), remark, personToEdit.getTags(), (","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"                    (Employee) personToEdit).getDepartment(), ((Employee) personToEdit).getJobTitle(), (","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"                    (Employee) personToEdit).getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"            return true;","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"purivirakarin":80,"shaunlxw":26}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCES;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILLS;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TERMSOFSERVICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"                PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK, PREFIX_ROLE, PREFIX_PREFERENCES, PREFIX_PRODUCTS,","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"                PREFIX_DEPARTMENT, PREFIX_JOBTITLE, PREFIX_TERMSOFSERVICE, PREFIX_SKILLS);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE)","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"        Remark remark \u003d argMultimap.getValue(PREFIX_REMARK).isPresent()","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"                ? ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get())","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"                : new Remark(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        String role \u003d argMultimap.getValue(PREFIX_ROLE).get();","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        Person person;","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        switch (role.toLowerCase()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        case \"client\":","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"            Optional\u003cString\u003e optionalPreferences \u003d argMultimap.getValue(PREFIX_PREFERENCES);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"            Optional\u003cList\u003cString\u003e\u003e optionalProducts \u003d Optional.ofNullable(argMultimap.getAllValues(PREFIX_PRODUCTS));","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"            String preferences \u003d optionalPreferences.orElse(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"            Products products \u003d ParserUtil.parseProducts(optionalProducts.orElse(Collections.emptyList()));","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"            person \u003d new Client(name, phone, email, address, remark, tagList, products, preferences);","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"        case \"employee\":","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"            Optional\u003cString\u003e optionalDepartment \u003d argMultimap.getValue(PREFIX_DEPARTMENT);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"            Optional\u003cString\u003e optionalJobTitle \u003d argMultimap.getValue(PREFIX_JOBTITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"            Optional\u003cList\u003cString\u003e\u003e optionalSkills \u003d Optional.ofNullable(argMultimap.getAllValues(PREFIX_SKILLS));","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"            Department department \u003d optionalDepartment.isPresent() ? optionalDepartment.map(Department::new).get()","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"                    : new Department(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"            JobTitle jobTitle \u003d optionalJobTitle.isPresent() ? optionalJobTitle.map(JobTitle::new).get()","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"                    : new JobTitle(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"            Skills skills \u003d ParserUtil.parseSkills(optionalSkills.orElse(Collections.emptyList()));","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"            person \u003d new Employee(name, phone, email, address, remark, tagList, department, jobTitle, skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"        case \"supplier\":","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"            Optional\u003cList\u003cString\u003e\u003e optionalSupplierProducts \u003d Optional.ofNullable(argMultimap","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"                    .getAllValues(PREFIX_PRODUCTS));","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"            Optional\u003cString\u003e optionalTermsOfService \u003d argMultimap.getValue(PREFIX_TERMSOFSERVICE);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"            Products supplierProducts \u003d ParserUtil.parseProducts(optionalSupplierProducts","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"                    .orElse(Collections.emptyList()));","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"            TermsOfService termsOfService \u003d optionalTermsOfService.isPresent() ? optionalTermsOfService","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"                    .map(TermsOfService::new).get()","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"                    : new TermsOfService(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"            person \u003d new Supplier(name, phone, email, address, remark, tagList, supplierProducts, termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        default:","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"            throw new ParseException(\"Invalid role specified. Must be one of: client, employee, supplier.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"purivirakarin":63,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     **/","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"purivirakarin":3,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"        private final int startPosition;","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"purivirakarin":2,"-":146}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":" * commands","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    public static final Prefix PREFIX_PREFERENCES \u003d new Prefix(\"pref/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    public static final Prefix PREFIX_PRODUCTS \u003d new Prefix(\"prod/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    public static final Prefix PREFIX_DEPARTMENT \u003d new Prefix(\"dept/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    public static final Prefix PREFIX_JOBTITLE \u003d new Prefix(\"job/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    public static final Prefix PREFIX_TERMSOFSERVICE \u003d new Prefix(\"tos/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"role/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    public static final Prefix PREFIX_SKILLS \u003d new Prefix(\"skills/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"purivirakarin":9,"-":14,"shaunlxw":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ID);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ID);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"        if (argMultimap.getValue(PREFIX_ID).isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"            Id id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"            return new DeleteCommand(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"purivirakarin":1,"-":24,"shaunlxw":14}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCES;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILLS;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TERMSOFSERVICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"     * EditCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_PREFERENCES, PREFIX_PRODUCTS, PREFIX_DEPARTMENT,","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"                PREFIX_JOBTITLE, PREFIX_SKILLS, PREFIX_ROLE, PREFIX_TERMSOFSERVICE, PREFIX_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ID, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"        if (argMultimap.getValue(PREFIX_ID).isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"        Id id;","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"            id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        parseCommonFields(argMultimap, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        parseOptionalFields(argMultimap, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        return new EditCommand(id, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"    private void parseCommonFields(ArgumentMultimap argMultimap, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"            throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        // Parsing common fields that are applicable to all roles","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"    void parseOptionalFields(ArgumentMultimap argMultimap, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"            throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"        // Parsing fields that are optional or specific to certain roles without","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"        // checking the role","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"        if (argMultimap.getValue(PREFIX_PREFERENCES).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"            editPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"                    .setPreferences(ParserUtil.parsePreferences(argMultimap.getValue(PREFIX_PREFERENCES).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"        if (argMultimap.getValue(PREFIX_PRODUCTS).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"            editPersonDescriptor.setProducts(ParserUtil.parseProducts(argMultimap.getAllValues(PREFIX_PRODUCTS)));","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"        if (argMultimap.getValue(PREFIX_DEPARTMENT).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"            editPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"                    .setDepartment(ParserUtil.parseDepartment(argMultimap.getValue(PREFIX_DEPARTMENT).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"        if (argMultimap.getValue(PREFIX_JOBTITLE).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"            editPersonDescriptor.setJobTitle(ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOBTITLE).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"        if (argMultimap.getValue(PREFIX_SKILLS).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"            editPersonDescriptor.setSkills(ParserUtil.parseSkills(argMultimap.getAllValues(PREFIX_SKILLS)));","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"        if (argMultimap.getValue(PREFIX_TERMSOFSERVICE).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"            editPersonDescriptor.setTermsOfService(","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"                    ParserUtil.parseTermsOfService(argMultimap.getValue(PREFIX_TERMSOFSERVICE).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"     * {@code tags} is non-empty.","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"     * parsed into a","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"purivirakarin":62,"-":71,"shaunlxw":9}},{"path":"src/main/java/seedu/address/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":" * Parses input arguments and creates a new ExportCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"    public static final String MESSAGE_NO_EXTENSION \u003d \"Error: Invalid filename. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"            + \"Please provide a valid filename with the .csv extension.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    public static final String MESSAGE_SPACE_DETECTED \u003d \"Error: Invalid filename. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"            + \"Please ensure the filename does not contain leading, trailing spaces, or end with a period.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    public static final String MESSAGE_NO_SPECIAL_CHARACTER \u003d \"Error: Invalid filename. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"            + \"Please ensure the filename does not contain any of the following characters: \u003c \u003e : \\\" / \\\\ | ? *\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"     * Parses the given {@code String} of arguments in the context of the ExportCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"     * and returns an ExportCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"     * @param args The user input string containing the filename for export.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"     * @return An ExportCommand object representing the parsed command.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     *                        or if the filename is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"            return new ExportCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        if (!isValidFilename(trimmedArgs)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"            throw new ParseException(getErrorMessage(trimmedArgs));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        return new ExportCommand(trimmedArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"    private boolean isValidFilename(String filename) {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        // Check if filename ends with \".csv\"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"        if (!filename.endsWith(\".csv\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"        // Check for leading, trailing spaces, or period at the end of filename","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"        if (filename.startsWith(\" \") || filename.endsWith(\" \") || filename.endsWith(\".\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"        // Check for special characters","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"        String restrictedChars \u003d \"\u003c\u003e:\\\"/\\\\|?*\";","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"        for (char c : restrictedChars.toCharArray()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"            if (filename.indexOf(c) !\u003d -1) {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"                return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"        return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"    private String getErrorMessage(String filename) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"        if (!filename.endsWith(\".csv\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"            return MESSAGE_NO_EXTENSION;","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"        if (filename.startsWith(\" \") || filename.endsWith(\" \") || filename.endsWith(\".\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"nuyer"},"content":"            return MESSAGE_SPACE_DETECTED;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"        String restrictedChars \u003d \"\u003c\u003e:\\\"/\\\\|?*\";","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"        for (char c : restrictedChars.toCharArray()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"            if (filename.indexOf(c) !\u003d -1) {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"nuyer"},"content":"                return MESSAGE_NO_SPECIAL_CHARACTER;","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"nuyer"},"content":"        return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"starsia":1,"nuyer":80}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"purivirakarin":1,"-":33}},{"path":"src/main/java/seedu/address/logic/parser/FindNumCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"import seedu.address.logic.commands.FindNumCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"import seedu.address.model.person.PhoneContainsDigitsPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":" * Parses input arguments and creates a new FindNumCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"public class FindNumCommandParser implements Parser\u003cFindNumCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"     * Parses the given {@code String} of arguments in the context of the FindNumCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"     * and returns a FindNumCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"    public FindNumCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNumCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"        String[] phoneKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"        // Check if all phone numbers in input are valid","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"        for (String phoneKeyword : phoneKeywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"            if (!Phone.isValidPhone(phoneKeyword)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"                throw new ParseException(","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNumCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"        return new FindNumCommand(new PhoneContainsDigitsPredicate(Arrays.asList(phoneKeywords)));","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"starsia":43}},{"path":"src/main/java/seedu/address/logic/parser/NetConnectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"import seedu.address.logic.commands.FindNumCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"public class NetConnectParser {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NetConnectParser.class);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        // (i.e., FINE, FINER and lower)","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"starsia"},"content":"        case FindNumCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"starsia"},"content":"            return new FindNumCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"nuyer"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"nuyer"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"starsia":4,"nuyer":4,"purivirakarin":8,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"purivirakarin":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":" * classes.","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     *                        unsigned integer).","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"     * trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"    public static Id parseId(String id) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"        if (!(StringUtil.isNonZeroUnsignedInteger(trimmedId))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"        int parsedId \u003d Integer.parseInt(trimmedId);","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"        if (!Id.isValidId(parsedId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"        return Id.generateTempId(parsedId);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"        return new Remark(remark);","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"     * Parses a {@code String department} into a {@code Department}.","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"purivirakarin"},"content":"     * @throws ParseException if the given {@code department} is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"purivirakarin"},"content":"    public static Department parseDepartment(String department) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(department);","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"purivirakarin"},"content":"        String trimmedDepartment \u003d department.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"purivirakarin"},"content":"        if (!Department.isValidDepartment(trimmedDepartment)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"purivirakarin"},"content":"            throw new ParseException(Department.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"purivirakarin"},"content":"        return new Department(trimmedDepartment);","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"purivirakarin"},"content":"     * Parses a {@code String jobTitle} into a {@code JobTitle}.","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"purivirakarin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"purivirakarin"},"content":"     * @throws ParseException if the given {@code jobTitle} is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"purivirakarin"},"content":"    public static JobTitle parseJobTitle(String jobTitle) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"purivirakarin"},"content":"        String trimmedJobTitle \u003d jobTitle.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"purivirakarin"},"content":"        if (!JobTitle.isValidJobTitle(trimmedJobTitle)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"purivirakarin"},"content":"            throw new ParseException(JobTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"purivirakarin"},"content":"        return new JobTitle(trimmedJobTitle);","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"purivirakarin"},"content":"     * Parses a {@code String products} into a {@code Products}.","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"purivirakarin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"purivirakarin"},"content":"     * @throws ParseException if the given {@code products} is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"purivirakarin"},"content":"    public static Products parseProducts(List\u003cString\u003e products) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"purivirakarin"},"content":"        if (!Products.isValidProducts(products)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"purivirakarin"},"content":"            throw new ParseException(Products.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"purivirakarin"},"content":"        return new Products(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"purivirakarin"},"content":"     * Represents a set of skills.","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"purivirakarin"},"content":"    public static Skills parseSkills(Collection\u003cString\u003e skills) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"purivirakarin"},"content":"        final Set\u003cString\u003e skillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"purivirakarin"},"content":"        for (String skill : skills) {","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"purivirakarin"},"content":"            String trimmedSkills \u003d skill.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"purivirakarin"},"content":"            if (!Skills.isValidSkills(trimmedSkills)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"purivirakarin"},"content":"                throw new ParseException(Skills.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"purivirakarin"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"purivirakarin"},"content":"            skillsSet.add(trimmedSkills);","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"purivirakarin"},"content":"        return new Skills(skillsSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"purivirakarin"},"content":"     * Parses a {@code String preferences} into a {@code String}.","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"purivirakarin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"purivirakarin"},"content":"    public static Skills parseSkills(List\u003cString\u003e skills) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"purivirakarin"},"content":"        final Set\u003cString\u003e skillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"purivirakarin"},"content":"        for (String skill : skills) {","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"purivirakarin"},"content":"            String trimmedSkills \u003d skill.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"purivirakarin"},"content":"            if (!Skills.isValidSkills(trimmedSkills)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"purivirakarin"},"content":"                throw new ParseException(Skills.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"purivirakarin"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"purivirakarin"},"content":"            skillsSet.add(trimmedSkills);","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"purivirakarin"},"content":"        return new Skills(skillsSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"purivirakarin"},"content":"     * Parses a {@code String preferences} into a {@code String}.","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"purivirakarin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"purivirakarin"},"content":"    public static String parsePreferences(String preferences) {","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(preferences);","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"purivirakarin"},"content":"        return preferences;","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"purivirakarin"},"content":"     * Parses the terms of service.","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"purivirakarin"},"content":"     * @param termsOfService The terms of service to be parsed.","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"purivirakarin"},"content":"     * @return The parsed terms of service.","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"purivirakarin"},"content":"    public static TermsOfService parseTermsOfService(String termsOfService) {","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"purivirakarin"},"content":"        return new TermsOfService(termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"purivirakarin":121,"-":121,"shaunlxw":19}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"        Index index;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"shaunlxw":38}},{"path":"src/main/java/seedu/address/logic/utils/CsvExporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package seedu.address.logic.utils;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.io.Writer;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":" * A utility class for exporting data from an address book to a CSV file.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":" * It provides methods to create a CSV file containing the data of persons in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"public class CsvExporter {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    private final String filename;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"    private boolean isSuccessful \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     * Constructs a CSVExporter object with the specified list of persons and filename.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"     * @param persons  The list of persons to be exported to CSV.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"     * @param filename The filename for the CSV file to be created.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"    public CsvExporter(UniquePersonList persons, String filename) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"     * Executes the CSV export process by creating a CSV file with the data from the list of contacts.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"     * If the export process is successful, sets the {@code isSuccessful} flag to true; otherwise, sets it to false.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"    public void execute() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        List\u003cString[]\u003e data \u003d createDataList();","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        try (Writer writer \u003d new FileWriter(this.filename)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"            for (String[] row : data) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"                writer.write(String.join(\",\", row) + System.lineSeparator());","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"            isSuccessful \u003d true;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"            isSuccessful \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"     * Creates a list of string arrays representing the data to be exported to a CSV file.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"     * Each string array represents a row in the CSV file, with the first array containing field names.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"     * @return A list of string arrays representing the data to be exported.","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"    private List\u003cString[]\u003e createDataList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"        List\u003cString[]\u003e dataList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        String[] fieldNames \u003d {\"ID\", \"Name\", \"Phone\", \"Email\", \"Address\", \"Remark\", \"Tags\", \"Department\",","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"            \"Job Title\", \"Skills\", \"Products\", \"Preferences\", \"Terms of Service\"};","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"        dataList.add(fieldNames);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"        for (Person person : this.persons) {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"            String[] personStringArray \u003d convertPersonToStringArray(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"nuyer"},"content":"            dataList.add(personStringArray);","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"        return dataList;","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"nuyer"},"content":"     * Converts a Person object to a string array representing its data.","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"nuyer"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"nuyer"},"content":"     * @param person The Person object to be converted.","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"nuyer"},"content":"     * @return A string array representing the data of the Person object.","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"nuyer"},"content":"    public String[] convertPersonToStringArray(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"        String[] personStringArray \u003d new String[13];","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"        personStringArray[0] \u003d person.getId().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"        personStringArray[1] \u003d person.getName().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        personStringArray[2] \u003d person.getPhone().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"        personStringArray[3] \u003d person.getEmail().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        personStringArray[4] \u003d \"\\\"\" + person.getAddress().toString() + \"\\\"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"        personStringArray[5] \u003d (person.getRemark() !\u003d null) ? person.getRemark().toString() : \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"        personStringArray[6] \u003d \"\\\"\" + person.getTagsAsString() + \"\\\"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"        if (person instanceof Employee) {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"            Employee employee \u003d (Employee) person;","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[7] \u003d employee.getDepartment().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[8] \u003d employee.getJobTitle().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[9] \u003d employee.getSkills().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[10] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[11] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[12] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Client) {","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"            Client client \u003d (Client) person;","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[7] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[8] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[9] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[10] \u003d client.getProducts().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[11] \u003d client.getPreferences();","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[12] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Supplier) {","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"            Supplier supplier \u003d (Supplier) person;","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[7] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[8] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[9] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[10] \u003d supplier.getProducts().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[11] \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"            personStringArray[12] \u003d supplier.getTermsOfService().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"nuyer"},"content":"        return personStringArray;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"nuyer"},"content":"    public boolean getIsSuccessful() {","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"nuyer"},"content":"        return isSuccessful;","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nuyer":84,"purivirakarin":38}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"     * Returns the user prefs\u0027 netconnect file path.","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    Path getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"     * Sets the user prefs\u0027 netconnect file path.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    void setNetConnectFilePath(Path netConnectFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"     * Replaces netconnect data with the data in {@code netConnect}.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    void setNetConnect(ReadOnlyNetConnect netConnect);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"     * Returns the NetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    ReadOnlyNetConnect getNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"     * the netconnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"     * Returns true if a person with the same id as {@code Id} exists in","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"shaunlxw"},"content":"     * the netconnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"shaunlxw"},"content":"    boolean hasId(Id id);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"     * Returns the Person with the given {@code Id}.","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"shaunlxw"},"content":"    Person getPersonById(Id id);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"     * existing person in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"     * {@code predicate}.","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"nuyer"},"content":"     * Exports the data from the address book as a CSV file with the specified filename.","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"nuyer"},"content":"     * Returns {@code true} if the export operation is successful, {@code false} otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"nuyer"},"content":"    boolean exportCsv(String filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nuyer":6,"purivirakarin":19,"-":74,"shaunlxw":16}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    private final NetConnect netConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     * Initializes a ModelManager with the given netConnect and userPrefs.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public ModelManager(ReadOnlyNetConnect netConnect, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        requireAllNonNull(netConnect, userPrefs);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        logger.fine(\"Initializing with address book: \" + netConnect + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        this.netConnect \u003d new NetConnect(netConnect);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.netConnect.getPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        this(new NetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"    public Path getNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        return userPrefs.getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"    public void setNetConnectFilePath(Path netConnectFilePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(netConnectFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        userPrefs.setNetConnectFilePath(netConnectFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NetConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public void setNetConnect(ReadOnlyNetConnect netConnect) {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        this.netConnect.resetData(netConnect);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"    public ReadOnlyNetConnect getNetConnect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"        return netConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"        return netConnect.hasPerson(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"shaunlxw"},"content":"    public boolean hasId(Id id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"        return netConnect.hasId(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"shaunlxw"},"content":"    public Person getPersonById(Id id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"shaunlxw"},"content":"        return netConnect.getPersonById(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"        netConnect.removePerson(target);","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"        netConnect.addPerson(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"        netConnect.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"nuyer"},"content":"    public boolean exportCsv(String filename) {","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"nuyer"},"content":"        requireNonNull(filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"nuyer"},"content":"        return netConnect.exportCsv(filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"shaunlxw"},"content":"     * internal list of {@code versionedNetConnect}","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"        return netConnect.equals(otherModelManager.netConnect)","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nuyer":4,"purivirakarin":29,"-":125,"shaunlxw":12}},{"path":"src/main/java/seedu/address/model/NetConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.utils.CsvExporter;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"public class NetConnect implements ReadOnlyNetConnect {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     * between constructors. See","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     * ways to avoid duplication","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    public NetConnect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"     * Creates an NetConnect using the Persons in the {@code toBeCopied}","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    public NetConnect(ReadOnlyNetConnect toBeCopied) {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"     * Resets the existing data of this {@code NetConnect} with {@code newData}.","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    public void resetData(ReadOnlyNetConnect newData) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"     * the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"shaunlxw"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"     * the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"shaunlxw"},"content":"    public boolean hasId(Id id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"        return persons.hasId(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"    public Person getPersonById(Id id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"        return persons.getPersonById(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"     * existing person in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"     * Removes {@code key} from this {@code NetConnect}.","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"nuyer"},"content":"     * Exports the data from the address book as a CSV file with the specified filename.","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"nuyer"},"content":"     * Returns {@code true} if the export operation is successful, {@code false} otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"nuyer"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"nuyer"},"content":"     * @return {@code true} if the export operation is successful, {@code false} otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"nuyer"},"content":"    public boolean exportCsv(String filename) {","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"nuyer"},"content":"        CsvExporter exporter \u003d new CsvExporter(persons, filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"nuyer"},"content":"        exporter.execute();","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"nuyer"},"content":"        return exporter.getIsSuccessful();","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"        if (!(other instanceof NetConnect)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"        NetConnect otherNetConnect \u003d (NetConnect) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"        return persons.equals(otherNetConnect.persons);","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nuyer":14,"purivirakarin":22,"-":112,"shaunlxw":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyNetConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"public interface ReadOnlyNetConnect {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"     * This list will not contain any duplicate persons and any duplicate ids.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":1,"-":15,"shaunlxw":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    Path getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"purivirakarin":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    private Path netConnectFilePath \u003d Paths.get(\"data\", \"netconnect.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    public UserPrefs() {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"        setNetConnectFilePath(newUserPrefs.getNetConnectFilePath());","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    public Path getNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        return netConnectFilePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    public void setNetConnectFilePath(Path netConnectFilePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(netConnectFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"        this.netConnectFilePath \u003d netConnectFilePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 netConnectFilePath.equals(otherUserPrefs.netConnectFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        return Objects.hash(guiSettings, netConnectFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"        String sb \u003d \"Gui Settings : \" + guiSettings","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"                + \"\\nLocal data file location : \" + netConnectFilePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        return sb;","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":14,"-":74}},{"path":"src/main/java/seedu/address/model/person/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" * Represents a Client in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"public class Client extends Person {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    private final Products products;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    private final String preferences;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Remark remark,","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"                  Set\u003cTag\u003e tags, Products products, String preferences) {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        super(name, phone, email, address, tags, remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"        this.preferences \u003d preferences;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public Client(Id id, Name name, Phone phone, Email email, Address address, Remark remark,","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"                  Set\u003cTag\u003e tags, Products products, String preferences) {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        super(id, name, phone, email, address, tags, remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        this.preferences \u003d preferences;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"     * Returns the products preferred by the client.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"     * @return The products preferred by the client.","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    public Products getProducts() {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        return this.products;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"     * Returns the preferences of the client.","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"     * @return The preferences of the client.","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    public String getPreferences() {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        return this.preferences;","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    public String getRole() {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        return \"Client\";","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this client is the same as another person.","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"     * Two clients are considered the same if they have the same attributes.","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"     * @param otherPerson The person to compare with.","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the clients are the same, false otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        if (!super.isSamePerson(otherPerson)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        return otherPerson instanceof Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this client is the same as another client.","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"     * Two clients are considered the same if they have the same attributes.","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"     * @param other The client to compare with.","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the clients are the same, false otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"                || (other instanceof Client","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 super.equals(other)","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 products.equals(((Client) other).products)","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 preferences.equals(((Client) other).preferences));","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"     * Returns the hash code of this client.","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"     * @return The hash code of this client.","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"        return Objects.hash(super.hashCode(), products, preferences);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"     * Returns the string representation of this client.","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"     * @return The string representation of this client.","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"                .add(\"products\", products)","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"                .add(\"preferences\", preferences)","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":121}},{"path":"src/main/java/seedu/address/model/person/Department.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":" * Represents a Person\u0027s department in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDepartment(String)}","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"public class Department {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"            \"Department names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    /*","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}-][\\\\p{Alnum}- ]*\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    private final String departmentName;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * Represents a department in an organization.","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    public Department() {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        departmentName \u003d \"-\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code Department}.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"     * @param departmentName A valid department name.","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    public Department(String departmentName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(departmentName);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        checkArgument(isValidDepartment(departmentName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        this.departmentName \u003d departmentName;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * Returns true if the given department name is valid.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     * A department name is considered valid if it matches the validation regex.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"     * @param test The department name to be validated.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the department name is valid, false otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    public static boolean isValidDepartment(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    public String getDepartmentName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        return departmentName;","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        return departmentName;","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        if (!(other instanceof Department)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        Department otherDepartment \u003d (Department) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        return departmentName.equals(otherDepartment.departmentName);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        return departmentName.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":79}},{"path":"src/main/java/seedu/address/model/person/Employee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" * Represents a Employee in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"public class Employee extends Person {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    private final Department department;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    private final JobTitle jobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    private Skills skills \u003d new Skills(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    public Employee(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"                    Department department, JobTitle jobTitle, Skills skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        super(name, phone, email, address, tags, remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        this.department \u003d department;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    public Employee(Id id, Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"                    Department department, JobTitle jobTitle, Skills skills) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        super(id, name, phone, email, address, tags, remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        this.department \u003d department;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     * Returns the department of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"     * @return The department of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    public Department getDepartment() {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        return this.department;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"     * Returns the job title of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"     * @return The job title of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    public JobTitle getJobTitle() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"        return this.jobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"     * Returns the skills of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"     * @return The skills of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    public Skills getSkills() {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        return this.skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    public String getRole() {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        return \"Employee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this employee is the same as another person.","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"     * Two employees are considered the same if they have the same attributes.","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"     * @param otherPerson The person to compare with.","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the employees are the same, false otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"        if (!super.isSamePerson(otherPerson)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        return otherPerson instanceof Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this employee is equal to another object.","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"     * Two employees are considered equal if they have the same attributes.","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the employees are equal, false otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"                || (other instanceof Employee","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 super.equals(other)","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 department.equals(((Employee) other).department)","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 jobTitle.equals(((Employee) other).jobTitle)","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 skills.equals(((Employee) other).skills));","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"     * Returns the hash code of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"     * @return The hash code of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        return Objects.hash(super.hashCode(), department, jobTitle, skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"     * Returns the string representation of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"     * @return The string representation of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"                .add(\"department\", department)","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"                .add(\"jobTitle\", jobTitle)","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"                .add(\"skills\", skills)","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":135}},{"path":"src/main/java/seedu/address/model/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":" * Represents a Person\u0027s unique id in the address book, smallest id is 1.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(int)}","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"public class Id {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Ids should only be any integer value larger than 0\";","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"    private static int nextId \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"    public final int value;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"     * Constructs an {@code Id} containing the next available id.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"    private Id() {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"        value \u003d nextId++;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"     * Constructs an {@code Id} with the given id.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"    private Id(int id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"        value \u003d id;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"     * Factory method to generate an {@code Id} with the next available id.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"     * @return A new {@code Id} instance containing the next available id.","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"    public static Id generateNextId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"        return new Id();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"shaunlxw"},"content":"     * Factory method to generate an {@code Id} with the given id, and updates the next available id.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"     * @return A new {@code Id} instance containing the given id.","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"    public static Id generateId(int id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"        if (id \u003e\u003d nextId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"            nextId \u003d id + 1;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"        return new Id(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"     * Factory method to generate an {@code Id} with the given id. Does not affect the next available id.","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"     * @return A new {@code Id} instance containing the given id.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"    public static Id generateTempId(int id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        return new Id(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"     * Returns true if a given int is a valid id.","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"    public static boolean isValidId(int test) {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"        return test \u003e 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"        return String.valueOf(value);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"shaunlxw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"shaunlxw"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"shaunlxw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"        if (!(other instanceof Id)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"        Id otherId \u003d (Id) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"        return value \u003d\u003d otherId.value;","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"        return value;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"shaunlxw":93}},{"path":"src/main/java/seedu/address/model/person/JobTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":" * Represents a Person\u0027s job title in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" * {@link #isValidJobTitle(String)}","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"public class JobTitle {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Job titles should only contain \"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"            + \"alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}-][\\\\p{Alpha}- ]*\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    private final String title;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     * Represents a job title in an organization.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    public JobTitle() {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        title \u003d \"-\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code JobTitle}.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     * @param title A valid job title.","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public JobTitle(String title) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(title);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        title \u003d title.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        checkArgument(isValidJobTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"     * Returns true if a given string is a valid job title.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"     * A valid job title must match the validation regex pattern.","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"     * @param test The string to be tested.","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the string is a valid job title, false otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    public static boolean isValidJobTitle(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    public String getTitle() {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        return title;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        return title;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        if (!(other instanceof JobTitle)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        JobTitle otherJobTitle \u003d (JobTitle) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"        return title.equals(otherJobTitle.title);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        return title.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":75}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"public abstract class Person {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"    // Unique id","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    protected final Id id;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    protected final Name name;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    protected final Phone phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    protected final Email email;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    protected final Address address;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    protected final Remark remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    protected final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Remark remark) {","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"        this.id \u003d Id.generateNextId();","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"     * Create a {@code Person} object with a specified id.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"    public Person(Id id, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Remark remark) {","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"    public Id getId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"        return id;","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"    public Remark getRemark() {","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"        return remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public abstract String getRole();","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"     * Returns a string representation of the tags associated with the person.","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"     * The tags are concatenated with a comma and space separator.","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"     * @return A string representation of the tags.","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"nuyer"},"content":"    public String getTagsAsString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"nuyer"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"nuyer"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"nuyer"},"content":"            stringBuilder.append(tag.getTagName()).append(\", \");","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"nuyer"},"content":"        // Remove the last comma and space if there are any tags","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"nuyer"},"content":"        if (stringBuilder.length() \u003e 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"nuyer"},"content":"            stringBuilder.delete(stringBuilder.length() - 2, stringBuilder.length());","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"nuyer"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"shaunlxw"},"content":"     * Returns true if both persons have the same id.","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"shaunlxw"},"content":"    public boolean hasSameId(Person otherPerson) {","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"shaunlxw"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"shaunlxw"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"shaunlxw"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"shaunlxw"},"content":"                \u0026\u0026 otherPerson.getId().equals(getId());","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"shaunlxw"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nuyer":12,"purivirakarin":23,"-":118,"shaunlxw":26}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsDigitsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"public class PhoneContainsDigitsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"    private final List\u003cString\u003e phones;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"    public PhoneContainsDigitsPredicate(List\u003cString\u003e phones) {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"        this.phones \u003d phones;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"        return phones.stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"                .anyMatch(phone -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, phone));","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"        if (!(other instanceof PhoneContainsDigitsPredicate)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate otherNameContainsKeywordsPredicate \u003d (PhoneContainsDigitsPredicate) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"        return phones.equals(otherNameContainsKeywordsPredicate.phones);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"        return new ToStringBuilder(this).add(\"phones\", phones).toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"starsia":44}},{"path":"src/main/java/seedu/address/model/person/Products.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":" * Represents a Client\u0027s products in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"public class Products {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Products should only contain alphanumeric characters and spaces\";","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    private final List\u003cString\u003e products;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"     * Represents the products of a client.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    public Products() {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d List.of();","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code Products}.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"     * @param products A valid list of products.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    public Products(List\u003cString\u003e products) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code Products} from a string of products.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     * @param products A string of products separated by spaces.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    public Products(String products) {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d List.of(products.split(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * Checks if a list of products is valid.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     * @param test The list of products to be checked.","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"     * @return {@code true} if all products are alphanumeric, {@code false} otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    public static boolean isValidProducts(List\u003cString\u003e test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        return test.stream().allMatch(product -\u003e product.matches(\"[\\\\p{Alnum} ]+\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"     * Returns the list of products.","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"     * @return The list of products.","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    public List\u003cString\u003e getProducts() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"        return products;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"     * Adds a list of products to the existing products.","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"     * @param products The list of products to be added.","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    public void addProducts(List\u003cString\u003e products) {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        this.products.addAll(products);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"     * Removes a product from the existing products.","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"     * @param product The product to be removed.","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    public void removeProduct(String product) {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        products.remove(product);","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"     * Checks if the list of products is empty.","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"     * @return {@code true} if the list of products is empty, {@code false} otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"        return products.isEmpty();","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"     * Returns a string representation of the products.","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"     * @return A string representation of the products.","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"        return products.stream().map(Object::toString).collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this {@code Products} object is equal to another object.","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"     * @return {@code true} if the objects are equal, {@code false} otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"        if (!(other instanceof Products)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"        Products otherProducts \u003d (Products) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"        return otherProducts.getProducts().equals(getProducts());","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"     * Returns the hash code of the products.","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"     * @return The hash code of the products.","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"        return products.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":126}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"public class Remark {","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    public final String value;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"     * @param remark Any remark.","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    public Remark(String remark) {","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        value \u003d remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"     * Executes the given function if the value is present.","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     * @param function the function to be executed if the value is present","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public void ifPresent(Function\u003cString, StringBuilder\u003e function) {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        if (value !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"            function.apply(value);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        return value;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"        * Returns true if this remark is equal to the specified object.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        * Two remarks are considered equal if they have the same value.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        *","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        * @param other the object to compare this remark with","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        * @return true if the specified object is equal to this remark, false otherwise","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        */","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        return value.equals(otherRemark.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"purivirakarin":54,"shaunlxw":13}},{"path":"src/main/java/seedu/address/model/person/RoleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":" * Represents a predicate that checks if a person\u0027s role contains a specified keyword.","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":" * This predicate is used to filter a list of persons based on their roles.","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"public class RoleContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code RoleContainsKeywordsPredicate} with the specified keyword.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"     * @param keyword The keyword to match against the person\u0027s role.","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    public RoleContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"     * Tests if the given person\u0027s role contains the keyword.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * @param person The person to test.","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     * @return {@code true} if the person\u0027s role contains the keyword, {@code false} otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        return person.getRole().toLowerCase().equals(keyword);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this predicate is equal to another object.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     * @return {@code true} if the objects are equal, {@code false} otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"                || (other instanceof RoleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 keyword.equals(((RoleContainsKeywordsPredicate) other).keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":44}},{"path":"src/main/java/seedu/address/model/person/Skills.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" * Represents a Person\u0027s skills in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSkills(String)}","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"public class Skills {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Skills should only contain alphanumeric characters and spaces\";","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    private final Set\u003cString\u003e skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"     * Represents the skills of a person.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    public Skills() {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"        skills \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code Skills}.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"     * @param skills A valid set of skills.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    public Skills(Set\u003cString\u003e skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d new HashSet\u003c\u003e(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code Skills}.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     * @param skills A valid string of skills.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    public Skills(String skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        String[] skillsArray \u003d skills.split(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        Collections.addAll(this.skills, skillsArray);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    public static boolean isValidSkills(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        return test.matches(\"[\\\\p{Alnum}+#\\\\- ]+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    public Set\u003cString\u003e getSkills() {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        return new HashSet\u003c\u003e(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    public void addSkills(Set\u003cString\u003e skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        this.skills.addAll(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    public void removeSkill(String skill) {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"        skills.remove(skill);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    public boolean containsSkill(String skill) {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        return skills.contains(skill);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        return skills.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        if (!(other instanceof Skills)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        Skills otherSkills \u003d (Skills) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        return otherSkills.getSkills().equals(getSkills());","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        return skills.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":87}},{"path":"src/main/java/seedu/address/model/person/Supplier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" * Represents a supplier in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" * Subclass of the Person class.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":" * Contains information about the supplier\u0027s products and terms of service.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"public class Supplier extends Person {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    private final Products products;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    private final TermsOfService termsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    public Supplier(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"                    Products products, TermsOfService termsOfService) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        super(name, phone, email, address, tags, remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        this.termsOfService \u003d termsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    public Supplier(Id id, Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"                    Products products, TermsOfService termsOfService) {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        super(id, name, phone, email, address, tags, remark);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        this.termsOfService \u003d termsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     * Returns the products offered by the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * @return The products offered by the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    public Products getProducts() {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        return this.products;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"     * Returns the terms of service provided by the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"     * @return The terms of service provided by the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    public TermsOfService getTermsOfService() {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        return termsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    public String getRole() {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        return \"Supplier\";","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this supplier is the same as another person.","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"     * Two suppliers are considered the same if they have the same attributes.","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"     * @param otherPerson The person to compare with.","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the suppliers are the same, false otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        if (!super.isSamePerson(otherPerson)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        return otherPerson instanceof Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"     * Checks if this supplier is equal to another object.","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"     * Two suppliers are considered equal if they have the same attributes.","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"     * @return True if the suppliers are equal, false otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"                || (other instanceof Supplier","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 super.equals(other)","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 products.equals(((Supplier) other).products)","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"                \u0026\u0026 termsOfService.equals(((Supplier) other).termsOfService));","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"     * Returns the hash code of the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"     * @return The hash code of the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"        return Objects.hash(super.hashCode(), products, termsOfService);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"     * Returns a string representation of the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"     * @return A string representation of the supplier.","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"                .add(\"products\", products)","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"                .add(\"termsOfService\", termsOfService)","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":121}},{"path":"src/main/java/seedu/address/model/person/TermsOfService.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":" * Represents a Terms of Service in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTermsOfService(String)}","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"public class TermsOfService {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    public final String terms;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"     * Represents the terms of service of an organization.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    public TermsOfService() {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"        terms \u003d \"-\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code TermsOfService}.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     * @param terms A valid terms of service.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    public TermsOfService(String terms) {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(terms);","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        this.terms \u003d terms;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public String getTerms() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        return terms;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        return terms;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        if (!(other instanceof TermsOfService)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService otherTermsOfService \u003d (TermsOfService) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        return terms.equals(otherTermsOfService.terms);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        return terms.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":59}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.exceptions.DuplicateIdException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.exceptions.IdNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. Unique ids is also enforced.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":" * As such, adding and updating of persons uses Person#isSamePerson(Person) for equality so as to ensure that","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":" * the person being added or updated is unique in terms of identity in the UniquePersonList. However, the removal of a","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":" * person uses Person#equals(Object) so as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":" * @see Person#hasSameId(Person)","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"     * Returns true if the list contains a person with the same id as in the given argument.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"    public boolean hasId(Id toCheck) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"        return internalList.stream().map(Person::getId).anyMatch(id -\u003e id.equals(toCheck));","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"    public Person getPersonById(Id id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"        return internalList.stream().filter(p -\u003e p.getId().equals(id))","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"                .findAny().orElseThrow(IdNotFoundException::new);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"        if (hasId(toAdd.getId())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"            throw new DuplicateIdException();","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"        if (!target.hasSameId(editedPerson) \u0026\u0026 hasId(editedPerson.getId())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"            throw new DuplicateIdException();","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"shaunlxw"},"content":"     * {@code persons} must not contain duplicate persons or persons with duplicate ids.","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"shaunlxw"},"content":"        if (!idsAreUnique(persons)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"shaunlxw"},"content":"            throw new DuplicateIdException();","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"shaunlxw"},"content":"     * Returns true if {@code persons} contains only unique ids.","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"shaunlxw"},"content":"    private boolean idsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"shaunlxw"},"content":"        return persons.stream().map(Person::getId).distinct().count() \u003d\u003d persons.size();","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"purivirakarin":1,"-":144,"shaunlxw":39}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":" * Signals that the operation will result in Persons with duplicate Ids.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"public class DuplicateIdException extends RuntimeException {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"    public DuplicateIdException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"        super(\"Operation would result in persons with duplicate id\");","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shaunlxw":10}},{"path":"src/main/java/seedu/address/model/person/exceptions/IdNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":" * Signals that the operation is unable to find the specified id.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"public class IdNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shaunlxw":7}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"purivirakarin":2,"-":5}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"    public String getTagName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"        return tagName;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nuyer":3,"-":62}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":" * Contains utility methods for populating {@code NetConnect} with sample data.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"                new Products(Arrays.asList(\"milk\", \"bread\", \"eggs\", \"cheese\", \"yogurt\",","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"                        \"butter\", \"jam\")),","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"                \"milk\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"            new Employee(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Department(\"HR\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"                new JobTitle(\"HR Manager\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"                new Skills(new HashSet\u003cString\u003e(","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"                        Arrays.asList(\"Recruitment\", \"Training\", \"Payroll\")))),","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"            new Supplier(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"                new Products(Arrays.asList(\"milk\", \"bread\", \"eggs\", \"cheese\", \"yogurt\",","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"                        \"butter\",","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"                        \"jam\")),","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"                new TermsOfService(\"high flexibility\")),","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"                new Products(Arrays.asList(\"milk\", \"yogurt\", \"butter\", \"jam\")),","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"                \"yogurt\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"            new Employee(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"                getTagSet(\"classmates\"), new Department(\"IT\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"                new JobTitle(\"Software Engineer\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"                new Skills(new HashSet\u003cString\u003e(","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"                        Arrays.asList(\"Java\", \"Python\", \"C++\")))),","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"            new Supplier(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"                new Products(Arrays.asList(\"milk\", \"bread\", \"eggs\", \"cheese\", \"yogurt\",","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"                        \"butter\",","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"                        \"jam\")),","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"                new TermsOfService(\"low flexibility\"))","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"    public static ReadOnlyNetConnect getSampleNetConnect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"        NetConnect sampleNc \u003d new NetConnect();","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"            sampleNc.addPerson(samplePerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"        return sampleNc;","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"    public static Products getProducts(String... strings) {","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"        return new Products(Arrays.asList(strings));","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"    public static Skills getSkills(String... strings) {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"        return new Skills(new HashSet\u003cString\u003e(Arrays.asList(strings)));","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"purivirakarin":68,"-":36,"shaunlxw":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    public static final String INVALID_ROLE_MESSAGE_FORMAT \u003d \"Person\u0027s role is invalid!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"    private final int id;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    private final String remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    private final Department department;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    private final JobTitle jobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    private final JsonAdaptedProducts products;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    private final String preferences;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    private final TermsOfService termsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    private final JsonAdaptedSkills skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    private final String role;","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"id\") int id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"role\") String role,","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"products\") JsonAdaptedProducts products,","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"preferences\") String preferences,","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"department\") Department department,","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"jobTitle\") JobTitle jobTitle,","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"termsOfService\") TermsOfService termsOfService,","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"skills\") JsonAdaptedSkills skills,","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"                             @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"shaunlxw"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products \u003d\u003d null ? new JsonAdaptedProducts(new ArrayList\u003c\u003e()) : products;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        this.preferences \u003d preferences \u003d\u003d null ? \"\" : preferences;","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        this.department \u003d department \u003d\u003d null ? new Department() : department;","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"        this.jobTitle \u003d jobTitle \u003d\u003d null ? new JobTitle() : jobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"        this.termsOfService \u003d termsOfService \u003d\u003d null ? new TermsOfService() : termsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d skills \u003d\u003d null ? new JsonAdaptedSkills(new HashSet\u003c\u003e()) : skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"        if (source instanceof Client) {","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"            role \u003d \"client\";","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"            products \u003d new JsonAdaptedProducts(((Client) source).getProducts());","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"            skills \u003d new JsonAdaptedSkills(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"            preferences \u003d ((Client) source).getPreferences();","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"            department \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"            jobTitle \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"            termsOfService \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"        } else if (source instanceof Employee) {","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"            role \u003d \"employee\";","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"            department \u003d ((Employee) source).getDepartment();","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"            jobTitle \u003d ((Employee) source).getJobTitle();","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"            preferences \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"            termsOfService \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"            skills \u003d new JsonAdaptedSkills(((Employee) source).getSkills().getSkills());","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"            products \u003d new JsonAdaptedProducts(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"        } else if (source instanceof Supplier) {","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"            role \u003d \"supplier\";","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"            products \u003d new JsonAdaptedProducts(((Supplier) source).getProducts());","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"            skills \u003d new JsonAdaptedSkills(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"            termsOfService \u003d ((Supplier) source).getTermsOfService();","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"            preferences \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"            department \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"            jobTitle \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"            role \u003d \"unknown\";","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"            preferences \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"            department \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"            jobTitle \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"            termsOfService \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"            products \u003d new JsonAdaptedProducts(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"            skills \u003d new JsonAdaptedSkills(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"role\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"        } else if (role.equals(\"client\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"            return toClientModelType();","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"        } else if (role.equals(\"employee\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"            return toEmployeeModelType();","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"        } else if (role.equals(\"supplier\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"            return toSupplierModelType();","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(INVALID_ROLE_MESSAGE_FORMAT);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"     * {@code Client} object.","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"     *                               the adapted person.","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"    public Client toClientModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"shaunlxw"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"shaunlxw"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"shaunlxw"},"content":"        final Id modelId \u003d Id.generateId(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"purivirakarin"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"purivirakarin"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"purivirakarin"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"purivirakarin"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"purivirakarin"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"purivirakarin"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"purivirakarin"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"purivirakarin"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"purivirakarin"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"purivirakarin"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"purivirakarin"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"purivirakarin"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"purivirakarin"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"purivirakarin"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"purivirakarin"},"content":"        final Products transformedProducts \u003d products \u003d\u003d null ? new Products()","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"purivirakarin"},"content":"                : new Products(this.products.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"purivirakarin"},"content":"        return new Client(modelId, modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags,","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"purivirakarin"},"content":"                transformedProducts, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"purivirakarin"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"purivirakarin"},"content":"     * {@code Employee} object.","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"purivirakarin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"purivirakarin"},"content":"     *                               the adapted person.","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"purivirakarin"},"content":"    public Employee toEmployeeModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"purivirakarin"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"purivirakarin"},"content":"        final Id modelId \u003d Id.generateId(id);","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"purivirakarin"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"purivirakarin"},"content":"        final Skills transformedSkills \u003d skills \u003d\u003d null ? new Skills() : this.skills.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"purivirakarin"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"purivirakarin"},"content":"        return new Employee(modelId, modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags,","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"purivirakarin"},"content":"                department, jobTitle, transformedSkills);","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":270,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":271,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":272,"author":{"gitId":"purivirakarin"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2024-03-20"},{"lineNumber":273,"author":{"gitId":"purivirakarin"},"content":"     * {@code Supplier} object.","lastModifiedDate":"2024-03-20"},{"lineNumber":274,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"purivirakarin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-20"},{"lineNumber":276,"author":{"gitId":"purivirakarin"},"content":"     *                               the adapted person.","lastModifiedDate":"2024-03-20"},{"lineNumber":277,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":278,"author":{"gitId":"purivirakarin"},"content":"    public Supplier toSupplierModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":279,"author":{"gitId":"purivirakarin"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":280,"author":{"gitId":"purivirakarin"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":281,"author":{"gitId":"purivirakarin"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2024-03-20"},{"lineNumber":282,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":283,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":284,"author":{"gitId":"purivirakarin"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"purivirakarin"},"content":"        final Id modelId \u003d Id.generateId(id);","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"purivirakarin"},"content":"        final Products transformedProducts \u003d new Products(this.products.getProducts());","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":323,"author":{"gitId":"purivirakarin"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2024-03-20"},{"lineNumber":324,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":326,"author":{"gitId":"purivirakarin"},"content":"        return new Supplier(modelId, modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags,","lastModifiedDate":"2024-03-21"},{"lineNumber":327,"author":{"gitId":"purivirakarin"},"content":"                transformedProducts,","lastModifiedDate":"2024-03-20"},{"lineNumber":328,"author":{"gitId":"purivirakarin"},"content":"                termsOfService);","lastModifiedDate":"2024-03-20"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"purivirakarin":181,"-":140,"shaunlxw":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedProducts.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" * Jackson-friendly version of {@link Products}.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"public class JsonAdaptedProducts {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    private List\u003cString\u003e products \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    public JsonAdaptedProducts() {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code JsonAdaptedProducts} with the given {@code products}.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    public JsonAdaptedProducts(Products products) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products.getProducts();","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    public JsonAdaptedProducts(List\u003cString\u003e products) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public List\u003cString\u003e getProducts() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        return products;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    public void setProducts(List\u003cString\u003e products) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d products;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    public void addProducts(List\u003cString\u003e products) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"        this.products.addAll(products);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     * Converts this Jackson-friendly adapted products object into the model\u0027s {@code Products} object.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted products.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    public Products toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        if (!Products.isValidProducts(products)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"            throw new IllegalValueException(Products.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        return new Products(products);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSkills.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" * Jackson-friendly version of {@link Skills}.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"public class JsonAdaptedSkills {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    private Set\u003cString\u003e skills \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    public JsonAdaptedSkills() {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code JsonAdaptedSkills} with the given {@code skills}.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    public JsonAdaptedSkills(Skills skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d new HashSet\u003c\u003e(skills.getSkills());","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    public JsonAdaptedSkills(Set\u003cString\u003e skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d new HashSet\u003c\u003e(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public Set\u003cString\u003e getSkills() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        return new HashSet\u003c\u003e(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    public void setSkills(Set\u003cString\u003e skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d new HashSet\u003c\u003e(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    public void addSkills(Set\u003cString\u003e skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"        this.skills.addAll(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     * Converts this Jackson-friendly adapted skills object into the model\u0027s {@code Skills} object.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted skills.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    public Skills toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        for (String skill : skills) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"            if (!Skills.isValidSkills(skill)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"                throw new IllegalValueException(Skills.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        return new Skills(skills);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":55}},{"path":"src/main/java/seedu/address/storage/JsonNetConnectStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":" * A class to access NetConnect data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"public class JsonNetConnectStorage implements NetConnectStorage {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonNetConnectStorage.class);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    private final Path filePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    public JsonNetConnectStorage(Path filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public Path getNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        return filePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    public Optional\u003cReadOnlyNetConnect\u003e readNetConnect() throws DataLoadingException {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        return readNetConnect(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     * Similar to {@link #readNetConnect()}.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    public Optional\u003cReadOnlyNetConnect\u003e readNetConnect(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        Optional\u003cJsonSerializableNetConnect\u003e jsonNetConnect \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"                filePath, JsonSerializableNetConnect.class);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        if (!jsonNetConnect.isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"            return Optional.of(jsonNetConnect.get().toModelType());","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"    public void saveNetConnect(ReadOnlyNetConnect netConnect) throws IOException {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        saveNetConnect(netConnect, filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"     * Similar to {@link #saveNetConnect(ReadOnlyNetConnect)}.","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"    public void saveNetConnect(ReadOnlyNetConnect netConnect, Path filePath) throws IOException {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(netConnect);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableNetConnect(netConnect), filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"purivirakarin":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableNetConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":" * An Immutable NetConnect that is serializable to JSON format.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"@JsonRootName(value \u003d \"netconnect\")","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"class JsonSerializableNetConnect {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"    public static final String MESSAGE_DUPLICATE_ID \u003d \"Persons list contains duplicate id(s).\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a {@code JsonSerializableNetConnect} with the given persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    public JsonSerializableNetConnect(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     * Converts a given {@code ReadOnlyNetConnect} into this class for Jackson use.","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"     *               {@code JsonSerializableNetConnect}.","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    public JsonSerializableNetConnect(ReadOnlyNetConnect source) {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     * Converts this address book into the model\u0027s {@code NetConnect} object.","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    public NetConnect toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        NetConnect netConnect \u003d new NetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"            if (netConnect.hasPerson(person)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"            if (netConnect.hasId(person.getId())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ID);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"            netConnect.addPerson(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        return netConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"purivirakarin":17,"-":44,"shaunlxw":4}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    private final Path filePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"purivirakarin":2,"-":46}},{"path":"src/main/java/seedu/address/storage/NetConnectStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" * Represents a storage for {@link seedu.address.model.NetConnect}.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"public interface NetConnectStorage {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    Path getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"     * Returns NetConnect data as a {@link ReadOnlyNetConnect}.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    Optional\u003cReadOnlyNetConnect\u003e readNetConnect() throws DataLoadingException;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     * @see #getNetConnectFilePath()","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    Optional\u003cReadOnlyNetConnect\u003e readNetConnect(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"     * Saves the given {@link ReadOnlyNetConnect} to the storage.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     * @param netConnect cannot be null.","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    void saveNetConnect(ReadOnlyNetConnect netConnect) throws IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * @see #saveNetConnect(ReadOnlyNetConnect)","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    void saveNetConnect(ReadOnlyNetConnect netConnect, Path filePath) throws IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"purivirakarin":46}},{"path":"src/main/java/seedu/address/storage/StateStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanjieling0"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"tanjieling0"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"tanjieling0"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tanjieling0"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"tanjieling0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"tanjieling0"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"tanjieling0"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"tanjieling0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"tanjieling0"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"tanjieling0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"tanjieling0"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"tanjieling0"},"content":" * Represents the database to store the previous state of command before the application is closed.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"tanjieling0"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"tanjieling0"},"content":"public class StateStorage {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"tanjieling0"},"content":"    private static final String filePath \u003d \"./data/state.txt\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"tanjieling0"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"tanjieling0"},"content":"    private static final Path FILE_PATH \u003d Paths.get(filePath);","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"tanjieling0"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"tanjieling0"},"content":"     * Constructor for the storage.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"tanjieling0"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"tanjieling0"},"content":"     * The constructor creates a new file and/or directory if the filepath for ./data/state.txt does not exist.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"tanjieling0"},"content":"    public StateStorage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"tanjieling0"},"content":"        assert !filePath.isBlank() : \"the file path should not be blank\";","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"tanjieling0"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"tanjieling0"},"content":"            if (!Files.exists(DIRECTORY_PATH)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"tanjieling0"},"content":"                Files.createDirectories(DIRECTORY_PATH);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"tanjieling0"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"tanjieling0"},"content":"            if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"tanjieling0"},"content":"                Files.createFile(FILE_PATH);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"tanjieling0"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"tanjieling0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"tanjieling0"},"content":"            logger.info(\"Error clearing creating state storage: \" + e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"tanjieling0"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"tanjieling0"},"content":"     * Clears all the text in the state storage file.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"tanjieling0"},"content":"    public static void clearState() {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"tanjieling0"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"tanjieling0"},"content":"            writer.write(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"tanjieling0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"tanjieling0"},"content":"            logger.info(\"Error clearing state text: \" + e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"tanjieling0"},"content":"            logger.info(\"Starting with a clean slate...\");","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"tanjieling0"},"content":"            deleteStateStorage();","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"tanjieling0"},"content":"            StateStorage stateStorage \u003d new StateStorage();","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"tanjieling0"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"tanjieling0"},"content":"     * Checks if the state storage file exists.","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"tanjieling0"},"content":"     * @return True if the file exists, else false.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"tanjieling0"},"content":"    public static boolean isStateStorageExists() {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"tanjieling0"},"content":"        return Files.exists(FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"tanjieling0"},"content":"     * Deletes the entire state storage file.","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"tanjieling0"},"content":"    public static void deleteStateStorage() {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"tanjieling0"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"tanjieling0"},"content":"            Files.delete(FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"tanjieling0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"tanjieling0"},"content":"            logger.info(\"Error deleting state file: \" + e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"tanjieling0"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"tanjieling0"},"content":"     * Saves the command to the state storage by writing to the file.","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"tanjieling0"},"content":"     * @param input Updated command input (at every change) to be written to the storage file.","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"tanjieling0"},"content":"    public static void writeState(String input) {","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"tanjieling0"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"tanjieling0"},"content":"            writer.write(input);","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"tanjieling0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"tanjieling0"},"content":"            logger.info(\"Error saving state to file: \" + e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"tanjieling0"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"tanjieling0"},"content":"     * Retrieves the past state of the command box if found, else it will return an empty command.","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"tanjieling0"},"content":"     * @return The last input in the command box, or and empty string if not found.","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"tanjieling0"},"content":"     * @throws DataLoadingException If the file is not found or cannot be read.","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"tanjieling0"},"content":"    public static String loadState() throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"tanjieling0"},"content":"        logger.info(\"Loading state from \" + FILE_PATH + \"...\");","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"tanjieling0"},"content":"        String lastCommand \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"tanjieling0"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"tanjieling0"},"content":"            String data \u003d reader.readLine();","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"tanjieling0"},"content":"            while (data !\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"tanjieling0"},"content":"                lastCommand \u003d lastCommand + data;","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"tanjieling0"},"content":"                data \u003d reader.readLine();","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"tanjieling0"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"tanjieling0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"tanjieling0"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"tanjieling0"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"tanjieling0"},"content":"        return lastCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"tanjieling0"},"content":"     * Instantiates a stateStorage file if it does not exist. If it already exists, it will return the last command.","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"tanjieling0"},"content":"     * @return The last input in the command box, or and empty string new file created.","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"tanjieling0"},"content":"     * @throws DataLoadingException If the file is not found or cannot be read.","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"tanjieling0"},"content":"    public static String getLastCommand() throws DataLoadingException {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"tanjieling0"},"content":"        StateStorage stateStorage \u003d new StateStorage();","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"tanjieling0"},"content":"        String lastCommand \u003d loadState();","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"tanjieling0"},"content":"        return lastCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"tanjieling0"},"content":"     * Returns the location of the state file.","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"tanjieling0"},"content":"     * @return The path of the state file.","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"tanjieling0"},"content":"    public static Path getFilePath() {","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"tanjieling0"},"content":"        return FILE_PATH;","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"tanjieling0"},"content":"     * Returns the location of the state file as a String.","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"tanjieling0"},"content":"     * @return The path of the state file as a String.","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"tanjieling0"},"content":"    public static String getFilePathString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"tanjieling0"},"content":"        return filePath;","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"tanjieling0"},"content":"     * Returns the location of the state directory.","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"tanjieling0"},"content":"     * @return The path of the state directory.","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"tanjieling0"},"content":"    public static Path getDirectoryPath() {","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"tanjieling0"},"content":"        return DIRECTORY_PATH;","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"tanjieling0"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"tanjieling0":155}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"public interface Storage extends NetConnectStorage, UserPrefsStorage {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    Path getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    Optional\u003cReadOnlyNetConnect\u003e readNetConnect() throws DataLoadingException;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    void saveNetConnect(ReadOnlyNetConnect netConnect) throws IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"purivirakarin":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":" * Manages storage of NetConnect data in local storage.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    private final NetConnectStorage netConnectStorage;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * Creates a {@code StorageManager} with the given {@code NetConnectStorage} and","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     * {@code UserPrefStorage}.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    public StorageManager(NetConnectStorage netConnectStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        this.netConnectStorage \u003d netConnectStorage;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NetConnect methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    public Path getNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        return netConnectStorage.getNetConnectFilePath();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    public Optional\u003cReadOnlyNetConnect\u003e readNetConnect() throws DataLoadingException {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        return readNetConnect(netConnectStorage.getNetConnectFilePath());","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"    public Optional\u003cReadOnlyNetConnect\u003e readNetConnect(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        return netConnectStorage.readNetConnect(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    public void saveNetConnect(ReadOnlyNetConnect netConnect) throws IOException {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        saveNetConnect(netConnect, netConnectStorage.getNetConnectFilePath());","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"    public void saveNetConnect(ReadOnlyNetConnect netConnect, Path filePath) throws IOException {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        netConnectStorage.saveNetConnect(netConnect, filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":19,"-":59}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"purivirakarin":1,"-":36}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.storage.StateStorage.getFilePath;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.storage.StateStorage.getLastCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"tanjieling0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.storage.StateStorage;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"tanjieling0"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"tanjieling0"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"tanjieling0"},"content":"            commandTextField.setText(getLastCommand());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"tanjieling0"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"tanjieling0"},"content":"            logger.warning(\"State file at \" + getFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"tanjieling0"},"content":"                    + \" Starting with an empty command box.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"tanjieling0"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"tanjieling0"},"content":"        commandTextField.textProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"tanjieling0"},"content":"            setStyleToDefault();","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"tanjieling0"},"content":"            StateStorage.writeState(newValue);","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"tanjieling0"},"content":"        });","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"tanjieling0"},"content":"    void setStyleToDefault() {","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"tanjieling0"},"content":"    void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"tanjieling0"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"tanjieling0"},"content":"     * Returns the command text field for the command box instance.","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"tanjieling0"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"tanjieling0"},"content":"     * @return The command text field.","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"tanjieling0"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"tanjieling0"},"content":"    protected TextField getCommandTextField() {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"tanjieling0"},"content":"        return commandTextField;","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"tanjieling0":35,"-":80}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-f12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"purivirakarin":2,"-":99,"shaunlxw":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    private final Logic logic;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getNetConnectFilePath());","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"purivirakarin":5,"-":192}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"     * issue on NetConnect level 4\u003c/a\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"shaunlxw"},"content":"    private Label index;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    private Label remark;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    private FlowPane role;","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    private Label products;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    private Label preferences;","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    private Label department;","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    private Label jobTitle;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"    private Label skills;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    private Label termsOfService;","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"    private Label id;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"     * display.","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"shaunlxw"},"content":"        index.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"        String remarkValue \u003d person.getRemark() !\u003d null ? person.getRemark().value : \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"        remark.setText(\"Remark: \" + remarkValue);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"        id.setText(\"ID: \" + String.valueOf(person.getId().value));","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        preferences.setVisible(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"        department.setVisible(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"        jobTitle.setVisible(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"        products.setVisible(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"        skills.setVisible(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"        termsOfService.setVisible(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"        preferences.setManaged(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"        department.setManaged(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"        jobTitle.setManaged(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"        products.setManaged(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        skills.setManaged(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"        termsOfService.setManaged(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"        if (person instanceof Client) {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"            Client client \u003d (Client) person;","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"            role.getChildren().add(new Label(\"Client\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"            preferences.setVisible(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"            preferences.setManaged(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"            preferences.setText(\"Preferences: \" + client.getPreferences());","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"            products.setVisible(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"            products.setManaged(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"            products.setText(\"Buying Products: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"                    + client.getProducts().getProducts().stream().collect(Collectors.joining(\", \")));","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Employee) {","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"            Employee employee \u003d (Employee) person;","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"            role.getChildren().add(new Label(\"Employee\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"            department.setVisible(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"            department.setManaged(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"            department.setText(\"Department: \" + employee.getDepartment().toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"            jobTitle.setVisible(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"            jobTitle.setManaged(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"            jobTitle.setText(\"Job Title: \" + employee.getJobTitle().toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"            skills.setVisible(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"            skills.setManaged(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"            skills.setText(\"Skills: \" + employee.getSkills().getSkills().stream()","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"                    .sorted().collect(Collectors.joining(\", \")));","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Supplier) {","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"            Supplier supplier \u003d (Supplier) person;","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"            role.getChildren().add(new Label(\"Supplier\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"            termsOfService.setVisible(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"            termsOfService.setManaged(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"            termsOfService.setText(\"Terms of Service: \" + supplier.getTermsOfService().toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"            products.setVisible(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"            products.setManaged(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"            products.setText(\"Selling Products: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"                    + supplier.getProducts().getProducts().stream().collect(Collectors.joining(\", \")));","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"purivirakarin":82,"-":52,"shaunlxw":4}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"purivirakarin":3,"-":12}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    private final Logic logic;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"purivirakarin":1,"-":87}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"purivirakarin":6,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":350,"author":{"gitId":"purivirakarin"},"content":"#role {","lastModifiedDate":"2024-03-20"},{"lineNumber":351,"author":{"gitId":"purivirakarin"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-20"},{"lineNumber":352,"author":{"gitId":"purivirakarin"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-20"},{"lineNumber":353,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":354,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":355,"author":{"gitId":"purivirakarin"},"content":"#role .label {","lastModifiedDate":"2024-03-20"},{"lineNumber":356,"author":{"gitId":"purivirakarin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-20"},{"lineNumber":357,"author":{"gitId":"purivirakarin"},"content":"    -fx-background-color: #ab9360;","lastModifiedDate":"2024-03-20"},{"lineNumber":358,"author":{"gitId":"purivirakarin"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-20"},{"lineNumber":359,"author":{"gitId":"purivirakarin"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-20"},{"lineNumber":360,"author":{"gitId":"purivirakarin"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-20"},{"lineNumber":361,"author":{"gitId":"purivirakarin"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-20"},{"lineNumber":362,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"purivirakarin":15,"-":347}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"purivirakarin":3,"-":41}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"                \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"purivirakarin":4,"-":56}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        \u003cFlowPane fx:id\u003d\"role\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"      \u003cLabel fx:id\u003d\"preferences\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$preferences\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"      \u003cLabel fx:id\u003d\"department\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$department\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"      \u003cLabel fx:id\u003d\"jobTitle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$jobTitle\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"      \u003cLabel fx:id\u003d\"products\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$products\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"      \u003cLabel fx:id\u003d\"skills\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$skills\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"      \u003cLabel fx:id\u003d\"termsOfService\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$termsOfService\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"      \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$id\"/\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":11,"-":35,"shaunlxw":1}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(appParameters.equals(0.5f));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"purivirakarin":2,"-":87}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(defaultConfig, defaultConfig);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"purivirakarin":1,"-":25}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(version.isEarlyAccess());","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(one, another);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(one, another);","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":5,"-":130}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(fifthPersonIndex, Index.fromOneBased(5));","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(fifthPersonIndex, Index.fromZeroBased(4));","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(fifthPersonIndex, fifthPersonIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(null, fifthPersonIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(fifthPersonIndex.equals(0.5f));","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(fifthPersonIndex, Index.fromOneBased(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"purivirakarin":7,"-":60}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-12-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        List\u003cObject\u003e containingNull \u003d Collections.singletonList(null);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        assertNullPointerExceptionThrown(Collections.singletonList(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        assertNullPointerExceptionNotThrown(List.of(new Object()));","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        List\u003cObject\u003e containingNull \u003d Collections.singletonList(null);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"purivirakarin":4,"-":104}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_ID;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.storage.JsonNetConnectStorage;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        JsonNetConnectStorage netConnectStorage \u003d new JsonNetConnectStorage(","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"                temporaryFolder.resolve(\"netConnect.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        StorageManager storage \u003d new StorageManager(netConnectStorage, userPrefsStorage);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"        String deleteCommand \u003d \"delete i/9\";","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"        assertCommandException(deleteCommand, String.format(MESSAGE_INVALID_PERSON_ID, 9));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"shaunlxw"},"content":"    private void assertCommandFailure(","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"shaunlxw"},"content":"            String inputCommand, Class\u003c? extends Throwable\u003e expectedException, String expectedMessage) {","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"     * Storage component.","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"        // Inject LogicManager with an NetConnectStorage that throws the IOException e","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"        // when saving","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"        JsonNetConnectStorage netConnectStorage \u003d new JsonNetConnectStorage(prefPath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"            public void saveNetConnect(ReadOnlyNetConnect netConnect, Path filePath)","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"                temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"        StorageManager storage \u003d new StorageManager(netConnectStorage, userPrefsStorage);","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"purivirakarin"},"content":"        // Execute the command","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"        assertCommandFailure(listCommand, CommandException.class, expectedMessage, model);","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"purivirakarin":19,"-":141,"shaunlxw":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.SupplierBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":" * {@code AddCommand}.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        Person validClient \u003d new ClientBuilder().withName(\"John\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        expectedModel.addPerson(validClient);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        assertCommandSuccess(new AddCommand(validClient), model,","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validClient)),","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    public void execute_newEmployee_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        Person validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        expectedModel.addPerson(validEmployee);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        assertCommandSuccess(new AddCommand(validEmployee), model,","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validEmployee)),","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"                expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    public void execute_newSupplier_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        Person validSupplier \u003d new SupplierBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        expectedModel.addPerson(validSupplier);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        assertCommandSuccess(new AddCommand(validSupplier), model,","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validSupplier)),","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"                expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        model.updateFilteredPersonList(new RoleContainsKeywordsPredicate(\"client\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        Person clientInList \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        assertCommandFailure(new AddCommand(clientInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"    public void execute_duplicateEmployee_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        model.updateFilteredPersonList(new RoleContainsKeywordsPredicate(\"employee\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        Person employeeInList \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        assertCommandFailure(new AddCommand(employeeInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public void execute_duplicateSupplier_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        model.updateFilteredPersonList(new RoleContainsKeywordsPredicate(\"supplier\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"        Person supplierInList \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        assertCommandFailure(new AddCommand(supplierInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"purivirakarin":53,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.SupplierBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"        // Assuming PersonBuilder can handle role-specific fields","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        Person validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        Person validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        Person validSupplier \u003d new SupplierBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        CommandResult commandResultClient \u003d new AddCommand(validClient).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validClient)),","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"                commandResultClient.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(List.of(validClient), modelStub.personsAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        modelStub.personsAdded.clear();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        CommandResult commandResultEmployee \u003d new AddCommand(validEmployee).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validEmployee)),","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"                commandResultEmployee.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(List.of(validEmployee), modelStub.personsAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        modelStub.personsAdded.clear();","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        CommandResult commandResultSupplier \u003d new AddCommand(validSupplier).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validSupplier)),","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"                commandResultSupplier.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(List.of(validSupplier), modelStub.personsAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        Person validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        AddCommand addCommand \u003d new AddCommand(validClient);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validClient);","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        Person alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        Person bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        AddCommand addAliceCommanddCopy \u003d new AddCommand(alice);","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommanddCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"tanjieling0"},"content":"        assertTrue(expected.equals(addCommand.toString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"        public Path getNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"        public void setNetConnectFilePath(Path netConnectFilePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"        public void setNetConnect(ReadOnlyNetConnect newData) {","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"        public ReadOnlyNetConnect getNetConnect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"shaunlxw"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"shaunlxw"},"content":"        public boolean hasId(Id id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"shaunlxw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"shaunlxw"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"shaunlxw"},"content":"        public Person getPersonById(Id id) {","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"shaunlxw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"nuyer"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"nuyer"},"content":"        public boolean exportCsv(String filename) {","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"nuyer"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"purivirakarin"},"content":"        public ReadOnlyNetConnect getNetConnect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"purivirakarin"},"content":"            return new NetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tanjieling0":1,"nuyer":5,"purivirakarin":42,"-":181,"shaunlxw":11}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    public void execute_emptyNetConnect_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    public void execute_nonEmptyNetConnect_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        Model model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        expectedModel.setNetConnect(new NetConnect());","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"purivirakarin":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCES;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILLS;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    public static final int VALID_ID_AMY \u003d 7;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    public static final int VALID_ID_BOB \u003d 8;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_ROLE_CLIENT \u003d \"client\";","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_ROLE_EMPLOYEE \u003d \"employee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_PRODUCTS_LAPTOP \u003d \"Laptop\";","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_PRODUCTS_SMARTPHONE \u003d \"Smartphone\";","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_PREFERENCE_AMY \u003d \"Latest tech\";","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_DEPARTMENT_BOB \u003d \"Sales\";","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_JOB_TITLE_BOB \u003d \"Sales Manager\";","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_SKILLS_NEGOTIATION \u003d \"Negotiation\";","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_SKILLS_COMMUNICATION \u003d \"Communication\";","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    public static final String ROLE_DESC_CLIENT \u003d \" \" + PREFIX_ROLE + VALID_ROLE_CLIENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"    public static final String ROLE_DESC_EMPLOYEE \u003d \" \" + PREFIX_ROLE + VALID_ROLE_EMPLOYEE;","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    public static final String PRODUCTS_DESC_LAPTOP \u003d \" \" + PREFIX_PRODUCTS + VALID_PRODUCTS_LAPTOP;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"    public static final String PRODUCTS_DESC_SMARTPHONE \u003d \" \" + PREFIX_PRODUCTS + VALID_PRODUCTS_SMARTPHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"    public static final String PREFERENCE_DESC_AMY \u003d \" \" + PREFIX_PREFERENCES + VALID_PREFERENCE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEPARTMENT_DESC_BOB \u003d \" \" + PREFIX_DEPARTMENT + VALID_DEPARTMENT_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"    public static final String JOB_TITLE_DESC_BOB \u003d \" \" + PREFIX_JOBTITLE + VALID_JOB_TITLE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"    public static final String SKILLS_DESC_NEGOTIATION \u003d \" \" + PREFIX_SKILLS + VALID_SKILLS_NEGOTIATION;","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    public static final String SKILLS_DESC_COMMUNICATION \u003d \" \" + PREFIX_SKILLS + VALID_SKILLS_COMMUNICATION;","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"     * Convenience wrapper to","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"        NetConnect expectedNetConnect \u003d new NetConnect(actualModel.getNetConnect());","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedNetConnect, actualModel.getNetConnect());","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"shaunlxw"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"shaunlxw"},"content":"     * {@code targetId} in the {@code model}\u0027s netconnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"shaunlxw"},"content":"    public static void showPersonAtId(Model model, Id targetId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(model.hasId(targetId));","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"shaunlxw"},"content":"        Person person \u003d model.getPersonById(targetId);","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"shaunlxw"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"shaunlxw"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"purivirakarin":42,"-":119,"shaunlxw":19}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtId;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    private final Model model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"        Person personToDelete \u003d model.getPersonById(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"    public void execute_invalidIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"        Id outOfBoundId \u003d Id.generateNextId();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundId);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_ID, outOfBoundId.value));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"    public void execute_validIdFilteredListPresent_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"        Person personToDelete \u003d model.getPersonById(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"    public void execute_validIdFilteredListAbsent_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"shaunlxw"},"content":"        showPersonAtId(model, ID_SECOND_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"        Person personToDelete \u003d model.getPersonById(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"        showAllPersons(expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(ID_SECOND_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"shaunlxw"},"content":"        Id targetId \u003d ID_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetId);","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"shaunlxw"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetId\u003d\" + targetId + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"shaunlxw"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"shaunlxw"},"content":"    private void showAllPersons(Model model) {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"shaunlxw"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"purivirakarin":4,"-":91,"shaunlxw":40}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtId;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_SECOND_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.SupplierBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":" * EditCommand.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    private final Model model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d new ClientBuilder().withId(1).withName(\"New Name\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(ID_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"        Id idLastPerson \u003d Id.generateId(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"        Person lastPerson \u003d model.getPersonById(idLastPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        EmployeeBuilder personInList \u003d new EmployeeBuilder((Employee) lastPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(idLastPerson, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(ID_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"        Person editedPerson \u003d model.getPersonById(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    public void execute_filteredListForClient_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"        showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"shaunlxw"},"content":"        Person personInFilteredList \u003d model.getPersonById(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"        Person editedClient \u003d new ClientBuilder((Client) personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(ID_FIRST_PERSON,","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"                new EditPersonDescriptorBuilder(editedClient).build());","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedClient));","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"        expectedModel.setPerson(model.getPersonById(ID_FIRST_PERSON), editedClient);","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"shaunlxw"},"content":"        Person firstPerson \u003d model.getPersonById(ID_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(ID_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"shaunlxw"},"content":"        showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"shaunlxw"},"content":"        Person personInList \u003d model.getPersonById(ID_SECOND_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(ID_FIRST_PERSON,","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"shaunlxw"},"content":"    public void execute_invalidPersonIdUnfilteredList_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"shaunlxw"},"content":"        Id outOfBoundId \u003d Id.generateNextId();","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"shaunlxw"},"content":"        assertCommandFailure(editCommand, model, String.format(Messages.MESSAGE_INVALID_PERSON_ID, outOfBoundId.value));","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"shaunlxw"},"content":"    public void execute_invalidPersonIdFilteredList_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"shaunlxw"},"content":"        showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"shaunlxw"},"content":"        Id outOfBoundId \u003d Id.generateNextId();","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundId,","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"shaunlxw"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"shaunlxw"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_ID, outOfBoundId.value));","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"shaunlxw"},"content":"        final EditCommand standardCommand \u003d new EditCommand(ID_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"shaunlxw"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(ID_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"shaunlxw"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(standardCommand, new EditCommand(ID_SECOND_PERSON, DESC_AMY));","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(standardCommand, new EditCommand(ID_FIRST_PERSON, DESC_BOB));","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"shaunlxw"},"content":"        Id id \u003d Id.generateId(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"shaunlxw"},"content":"        EditCommand editCommand \u003d new EditCommand(id, editPersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"shaunlxw"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{id\u003d\" + id + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"purivirakarin"},"content":"    public void createEditedPerson_editClient_success() throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"purivirakarin"},"content":"        Person personToEdit \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"purivirakarin"},"content":"                .withName(\"Updated Name\")","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"purivirakarin"},"content":"                .withPhone(\"98765432\")","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"purivirakarin"},"content":"                .withEmail(\"updated@example.com\")","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(\"Updated Address\")","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"purivirakarin"},"content":"                .withRemark(\"Updated Remark\")","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"purivirakarin"},"content":"                .withTags(\"tag1\", \"tag2\")","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"purivirakarin"},"content":"                .withPreferences(\"Updated Preferences\")","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"purivirakarin"},"content":"                .withProducts(\"Product A\", \"Product B\")","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d EditCommand.createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Name\", editedPerson.getName().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"98765432\", editedPerson.getPhone().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"updated@example.com\", editedPerson.getEmail().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Address\", editedPerson.getAddress().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Remark\", editedPerson.getRemark().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new HashSet\u003c\u003e(Arrays.asList(new Tag(\"tag1\"), new Tag(\"tag2\"))), editedPerson.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(editedPerson instanceof Client);","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"purivirakarin"},"content":"        Client editedClient \u003d (Client) editedPerson;","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Preferences\", editedClient.getPreferences());","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(Arrays.asList(\"Product A\", \"Product B\"), editedClient.getProducts().getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"purivirakarin"},"content":"    public void createEditedPerson_editEmployee_success() throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"purivirakarin"},"content":"        Person personToEdit \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"purivirakarin"},"content":"                .withName(\"Updated Name\")","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"purivirakarin"},"content":"                .withPhone(\"98765432\")","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"purivirakarin"},"content":"                .withEmail(\"updated@example.com\")","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(\"Updated Address\")","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"purivirakarin"},"content":"                .withRemark(\"Updated Remark\")","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"purivirakarin"},"content":"                .withTags(\"tag1\", \"tag2\")","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"purivirakarin"},"content":"                .withDepartment(\"Updated Department\")","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"purivirakarin"},"content":"                .withJobTitle(\"Updated Job Title\")","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"purivirakarin"},"content":"                .withSkills(\"Skill A\", \"Skill B\")","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d EditCommand.createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Name\", editedPerson.getName().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"98765432\", editedPerson.getPhone().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"updated@example.com\", editedPerson.getEmail().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Address\", editedPerson.getAddress().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Remark\", editedPerson.getRemark().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new HashSet\u003c\u003e(Arrays.asList(new Tag(\"tag1\"), new Tag(\"tag2\"))), editedPerson.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(editedPerson instanceof Employee);","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"purivirakarin"},"content":"        Employee editedEmployee \u003d (Employee) editedPerson;","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Department\", editedEmployee.getDepartment().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Job Title\", editedEmployee.getJobTitle().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"purivirakarin"},"content":"        HashSet\u003cString\u003e skillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":246,"author":{"gitId":"purivirakarin"},"content":"        skillsSet.add(\"Skill A\");","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"purivirakarin"},"content":"        skillsSet.add(\"Skill B\");","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(skillsSet, editedEmployee.getSkills().getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"purivirakarin"},"content":"    public void createEditedPerson_editSupplier_success() throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"purivirakarin"},"content":"        Person personToEdit \u003d new SupplierBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"purivirakarin"},"content":"                .withName(\"Updated Name\")","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"purivirakarin"},"content":"                .withPhone(\"98765432\")","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"purivirakarin"},"content":"                .withEmail(\"updated@example.com\")","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(\"Updated Address\")","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"purivirakarin"},"content":"                .withRemark(\"Updated Remark\")","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"purivirakarin"},"content":"                .withTags(\"tag1\", \"tag2\")","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"purivirakarin"},"content":"                .withTermsOfService(\"Updated Terms of Service\")","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"purivirakarin"},"content":"                .withProducts(\"Product A\", \"Product B\")","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d EditCommand.createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":267,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Name\", editedPerson.getName().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"98765432\", editedPerson.getPhone().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"updated@example.com\", editedPerson.getEmail().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Address\", editedPerson.getAddress().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Remark\", editedPerson.getRemark().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new HashSet\u003c\u003e(Arrays.asList(new Tag(\"tag1\"), new Tag(\"tag2\"))), editedPerson.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":273,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(editedPerson instanceof Supplier);","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"purivirakarin"},"content":"        Supplier editedSupplier \u003d (Supplier) editedPerson;","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Updated Terms of Service\", editedSupplier.getTermsOfService().toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(Arrays.asList(\"Product A\", \"Product B\"), editedSupplier.getProducts().getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"purivirakarin"},"content":"    public void createEditedPerson_noChanges_success() throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":281,"author":{"gitId":"purivirakarin"},"content":"        Person personToEdit \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":282,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":284,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d EditCommand.createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(personToEdit, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":290,"author":{"gitId":"purivirakarin"},"content":"    public void createEditedPerson_invalidClientProperty_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":291,"author":{"gitId":"purivirakarin"},"content":"        Person personToEdit \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":292,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":293,"author":{"gitId":"purivirakarin"},"content":"                .withDepartment(\"Updated Department\")","lastModifiedDate":"2024-03-21"},{"lineNumber":294,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":295,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":296,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(CommandException.class, () -\u003e EditCommand.createEditedPerson(personToEdit, editPersonDescriptor));","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"purivirakarin"},"content":"    public void createEditedPerson_invalidEmployeeProperty_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"purivirakarin"},"content":"        Person personToEdit \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"purivirakarin"},"content":"                .withPreferences(\"Updated Preferences\")","lastModifiedDate":"2024-03-21"},{"lineNumber":304,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":305,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":306,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(CommandException.class, () -\u003e EditCommand.createEditedPerson(personToEdit, editPersonDescriptor));","lastModifiedDate":"2024-03-21"},{"lineNumber":307,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":308,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":309,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":310,"author":{"gitId":"purivirakarin"},"content":"    public void createEditedPerson_invalidSupplierProperty_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":311,"author":{"gitId":"purivirakarin"},"content":"        Person personToEdit \u003d new SupplierBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":312,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":313,"author":{"gitId":"purivirakarin"},"content":"                .withSkills(\"Skill A\", \"Skill B\")","lastModifiedDate":"2024-03-21"},{"lineNumber":314,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":315,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":316,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(CommandException.class, () -\u003e EditCommand.createEditedPerson(personToEdit, editPersonDescriptor));","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"purivirakarin":162,"-":121,"shaunlxw":35}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(DESC_AMY, descriptorWithSameValues);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(DESC_AMY, DESC_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(null, DESC_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(5, DESC_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(DESC_AMY, DESC_BOB);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", remark\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getRemark().orElse(null) + \", department\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getDepartment().orElse(null) + \", jobTitle\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getJobTitle().orElse(null) + \", skills\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getSkills().orElse(null) + \", products\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getProducts().orElse(null) + \", termsOfService\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getTermsOfService().orElse(null) + \", preferences\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"                + editPersonDescriptor.getPreferences().orElse(null) + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"purivirakarin":19,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"purivirakarin":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":" * Contains integration tests (interaction with the Model) for {@code ExportCommand}.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"public class ExportCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ExportCommandTest\");","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"    private static final Path NON_EXISTENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"nonexistent.csv\");","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"    private final Model model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"    public void execute_exportSuccess() throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        String filename \u003d \"test_export.csv\";","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"        Path filePath \u003d Paths.get(filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"        String expectedMessage \u003d ExportCommand.MESSAGE_SUCCESS + filename;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        exportCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        assertCommandSuccess(exportCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"        assertTrue(filePath.toFile().exists());","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"        // Clean up","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"        filePath.toFile().delete();","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"    public void execute_exportFailure_emptyList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"        ExportCommand exportCommand \u003d new ExportCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"        String expectedMessage \u003d ExportCommand.MESSAGE_FAILURE_EMPTY_LIST;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"        Model emptyModel \u003d new ModelManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"        assertCommandFailure(exportCommand, emptyModel, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"    public void execute_exportFailure_fileWriteError() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"        assertNotNull(NON_EXISTENT_FILE);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"        String filename \u003d NON_EXISTENT_FILE.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"        String expectedMessage \u003d ExportCommand.MESSAGE_FAILURE_FILE_WRITE;","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"        assertThrows(CommandException.class, expectedMessage , () -\u003e exportCommand.execute(model));","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"nuyer"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"        ExportCommand exportCommand1 \u003d new ExportCommand(\"file1.csv\");","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"        ExportCommand exportCommand2 \u003d new ExportCommand(\"file2.csv\");","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"nuyer"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"nuyer"},"content":"        assertEquals(exportCommand1, exportCommand1);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"nuyer"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"nuyer"},"content":"        ExportCommand exportCommand1Copy \u003d new ExportCommand(\"file1.csv\");","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"nuyer"},"content":"        assertEquals(exportCommand1, exportCommand1Copy);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"nuyer"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"nuyer"},"content":"        assertNotEquals(exportCommand1, 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"nuyer"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"nuyer"},"content":"        assertNotEquals(exportCommand1, null);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"nuyer"},"content":"        // Different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"nuyer"},"content":"        assertNotEquals(exportCommand1, exportCommand2);","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nuyer":90}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":" * {@code FindCommand}.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    private final Model model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"                Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(Arrays.asList(ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(List.of(\"keyword\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"purivirakarin":13,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/FindNumCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"tanjieling0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"import seedu.address.model.person.PhoneContainsDigitsPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":" * {@code FindNumCommand}.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"public class FindNumCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"    private final Model model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate firstPredicate \u003d new PhoneContainsDigitsPredicate(","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate secondPredicate \u003d new PhoneContainsDigitsPredicate(","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"                Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"        FindNumCommand findNumFirstCommand \u003d new FindNumCommand(firstPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"        FindNumCommand findNumSecondCommand \u003d new FindNumCommand(secondPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"        assertEquals(findNumFirstCommand, findNumFirstCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"        FindNumCommand findNumFirstCommandCopy \u003d new FindNumCommand(firstPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"tanjieling0"},"content":"        assertTrue(findNumFirstCommand.equals(findNumFirstCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(findNumFirstCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(findNumFirstCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"        // different instance -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"        assertFalse(firstPredicate.equals(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(findNumFirstCommand.equals(findNumSecondCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"starsia"},"content":"    public void execute_zeroPhones_noPersonFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"starsia"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"starsia"},"content":"        FindNumCommand command \u003d new FindNumCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"starsia"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"starsia"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"starsia"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"starsia"},"content":"    public void execute_multiplePhones_multiplePersonsFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"starsia"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate predicate \u003d preparePredicate(\"94351253 9482224 9482442\");","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"starsia"},"content":"        FindNumCommand command \u003d new FindNumCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"starsia"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"starsia"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"starsia"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate predicate \u003d new PhoneContainsDigitsPredicate(List.of(\"keyword\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"starsia"},"content":"        FindNumCommand findNumCommand \u003d new FindNumCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"starsia"},"content":"        String expected \u003d FindNumCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(expected, findNumCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"starsia"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"starsia"},"content":"    private PhoneContainsDigitsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"starsia"},"content":"        return new PhoneContainsDigitsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"tanjieling0":7,"starsia":89}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"purivirakarin":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":" * ListCommand.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        expectedModel \u003d new ModelManager(model.getNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"purivirakarin":5,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    private final Model model \u003d new ModelManager(getTypicalNetConnect(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d new ClientBuilder((Client) firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d new ClientBuilder((Client) firstPerson).withRemark(\"\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"                RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"shaunlxw"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"shaunlxw"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d new ClientBuilder((Client) model.getFilteredPersonList()","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased())).withRemark(REMARK_STUB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"shaunlxw"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"shaunlxw"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"shaunlxw"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"shaunlxw"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"shaunlxw"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNetConnect().getPersonList().size());","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"shaunlxw"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"shaunlxw"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"    public void equals() {","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"shaunlxw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"shaunlxw"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"shaunlxw"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"shaunlxw"},"content":"        assertNotEquals(standardCommand, new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"shaunlxw"},"content":"                new Remark(VALID_REMARK_AMY)));","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"shaunlxw"},"content":"        assertNotEquals(standardCommand, new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"shaunlxw"},"content":"                new Remark(VALID_REMARK_BOB)));","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"    public void execute_editClientRemarkUnfilteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"        Person editedPerson \u003d new ClientBuilder((Client) firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"        Model expectedModel \u003d new ModelManager(new NetConnect(model.getNetConnect()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"purivirakarin":69,"shaunlxw":88}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEPARTMENT_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREFERENCE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRODUCTS_DESC_LAPTOP;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRODUCTS_DESC_SMARTPHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_CLIENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_EMPLOYEE;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILLS_DESC_COMMUNICATION;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILLS_DESC_NEGOTIATION;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        Person expectedPerson \u003d new EmployeeBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE + DEPARTMENT_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"                        + JOB_TITLE_DESC_BOB + SKILLS_DESC_NEGOTIATION + SKILLS_DESC_COMMUNICATION + REMARK_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        Person expectedPersonMultipleTags \u003d new EmployeeBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"                        + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE + DEPARTMENT_DESC_BOB + JOB_TITLE_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"                        + SKILLS_DESC_NEGOTIATION + SKILLS_DESC_COMMUNICATION + REMARK_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE;","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"        Person expectedPerson \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"                        + ROLE_DESC_CLIENT + REMARK_DESC_AMY + PRODUCTS_DESC_LAPTOP + PRODUCTS_DESC_SMARTPHONE","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"                        + PREFERENCE_DESC_AMY,","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":187,"author":{"gitId":"purivirakarin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"purivirakarin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"purivirakarin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"purivirakarin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"purivirakarin"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + ROLE_DESC_EMPLOYEE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"purivirakarin"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"purivirakarin"},"content":"                + ROLE_DESC_EMPLOYEE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"purivirakarin"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ROLE_DESC_EMPLOYEE,","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"purivirakarin"},"content":"    public void parse_missingRequiredFields_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"purivirakarin"},"content":"        // Missing name","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"purivirakarin"},"content":"        assertParseFailure(parser, \"p/12345678 e/johndoe@example.com a/123, Main Street\",","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"purivirakarin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"purivirakarin"},"content":"        // Missing phone","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"purivirakarin"},"content":"        assertParseFailure(parser, \"n/John Doe e/johndoe@example.com a/123, Main Street\",","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"purivirakarin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"purivirakarin"},"content":"        // Missing email","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"purivirakarin"},"content":"        assertParseFailure(parser, \"n/John Doe p/12345678 a/123, Main Street\",","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"purivirakarin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"purivirakarin"},"content":"        // Missing address","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"purivirakarin"},"content":"        assertParseFailure(parser, \"n/John Doe p/12345678 e/johndoe@example.com\",","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"purivirakarin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"purivirakarin"},"content":"        // Missing role","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"purivirakarin"},"content":"        assertParseFailure(parser, \"n/John Doe p/12345678 e/johndoe@example.com a/123, Main Street r/\",","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"purivirakarin":57,"-":181}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"        assertParseSuccess(parser, \" i/1\", new DeleteCommand(ID_FIRST_PERSON));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"purivirakarin":1,"-":29,"shaunlxw":2}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCES;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILLS;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TERMSOFSERVICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"            EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"        // no id specified","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, ID_DESC_AMY, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"    public void parse_invalidId_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"        // negative id","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, \"i/-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"        // zero id","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, \"i/0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, \"i/1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, \"i/1 k/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, ID_DESC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"        // Person} being edited,","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"shaunlxw"},"content":"                ID_DESC_AMY + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"shaunlxw"},"content":"        Id targetId \u003d Id.generateId(VALID_ID_AMY);","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"shaunlxw"},"content":"        String userInput \u003d ID_DESC_AMY + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"shaunlxw"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"shaunlxw"},"content":"        Id targetId \u003d Id.generateId(VALID_ID_AMY);","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"shaunlxw"},"content":"        String userInput \u003d ID_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"shaunlxw"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"shaunlxw"},"content":"        Id targetId \u003d Id.generateId(VALID_ID_AMY);","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"shaunlxw"},"content":"        String userInput \u003d ID_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"shaunlxw"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"shaunlxw"},"content":"        userInput \u003d ID_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"shaunlxw"},"content":"        expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"shaunlxw"},"content":"        userInput \u003d ID_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"shaunlxw"},"content":"        expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"shaunlxw"},"content":"        userInput \u003d ID_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"shaunlxw"},"content":"        expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"shaunlxw"},"content":"        userInput \u003d ID_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"shaunlxw"},"content":"        expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"shaunlxw"},"content":"        Id targetId \u003d ID_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"shaunlxw"},"content":"        String userInput \u003d targetId + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"shaunlxw"},"content":"        userInput \u003d targetId + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":211,"author":{"gitId":"shaunlxw"},"content":"        userInput \u003d targetId + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":219,"author":{"gitId":"shaunlxw"},"content":"        userInput \u003d targetId + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":228,"author":{"gitId":"shaunlxw"},"content":"        Id targetId \u003d Id.generateId(VALID_ID_AMY);","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"shaunlxw"},"content":"        String userInput \u003d ID_DESC_AMY + TAG_EMPTY;","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"shaunlxw"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetId, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"purivirakarin"},"content":"    public void parseOptionalFields_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"purivirakarin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\" \" + PREFIX_PREFERENCES + \"pref1 pref2 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"purivirakarin"},"content":"                + PREFIX_PRODUCTS + \"product1 \" + PREFIX_PRODUCTS + \"product2 \" + PREFIX_DEPARTMENT + \"dept \"","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"purivirakarin"},"content":"                + PREFIX_JOBTITLE + \"title \" + PREFIX_SKILLS + \"skill1 \" + PREFIX_SKILLS + \"skill2 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"purivirakarin"},"content":"                + PREFIX_TERMSOFSERVICE + \"terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setPreferences(ParserUtil.parsePreferences(\"pref1 pref2\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":246,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setProducts(ParserUtil.parseProducts(Arrays.asList(\"product1\", \"product2\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setDepartment(ParserUtil.parseDepartment(\"dept\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setJobTitle(ParserUtil.parseJobTitle(\"title\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setSkills(ParserUtil.parseSkills(Arrays.asList(\"skill1\", \"skill2\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setTermsOfService(ParserUtil.parseTermsOfService(\"terms\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"purivirakarin"},"content":"        parser.parseOptionalFields(argMultimap, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setPreferences(ParserUtil.parsePreferences(\"pref1 pref2\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setProducts(ParserUtil.parseProducts(Arrays.asList(\"product1\", \"product2\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setDepartment(ParserUtil.parseDepartment(\"dept\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setJobTitle(ParserUtil.parseJobTitle(\"title\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setSkills(ParserUtil.parseSkills(Arrays.asList(\"skill1\", \"skill2\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setTermsOfService(ParserUtil.parseTermsOfService(\"terms\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedDescriptor, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"purivirakarin"},"content":"        Products expectedProducts \u003d new Products(Arrays.asList(\"product1\", \"product2\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedProducts, descriptor.getProducts().get());","lastModifiedDate":"2024-03-21"},{"lineNumber":267,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new Department(\"dept\"), descriptor.getDepartment().get());","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new JobTitle(\"title\"), descriptor.getJobTitle().get());","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"purivirakarin"},"content":"        Skills expectedSkills \u003d new Skills();","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"purivirakarin"},"content":"        expectedSkills.addSkills(new HashSet\u003c\u003e(Arrays.asList(\"skill1\", \"skill2\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":273,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkills, descriptor.getSkills().get());","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new TermsOfService(\"terms\"), descriptor.getTermsOfService().get());","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"purivirakarin"},"content":"    public void parseOptionalFields_someFieldsPresent_success() throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"purivirakarin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\" \" + PREFIX_PREFERENCES + \"pref1 pref2 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":281,"author":{"gitId":"purivirakarin"},"content":"                + PREFIX_DEPARTMENT + \"dept \" + PREFIX_SKILLS + \"skill1 \" + PREFIX_SKILLS + \"skill2\");","lastModifiedDate":"2024-03-21"},{"lineNumber":282,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":284,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setPreferences(ParserUtil.parsePreferences(\"pref1 pref2\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setDepartment(ParserUtil.parseDepartment(\"dept\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setSkills(ParserUtil.parseSkills(Arrays.asList(\"skill1\", \"skill2\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"purivirakarin"},"content":"        parser.parseOptionalFields(argMultimap, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":290,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":291,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setPreferences(ParserUtil.parsePreferences(\"pref1 pref2\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":292,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setDepartment(ParserUtil.parseDepartment(\"dept\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":293,"author":{"gitId":"purivirakarin"},"content":"        expectedDescriptor.setSkills(ParserUtil.parseSkills(Arrays.asList(\"skill1\", \"skill2\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":294,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":295,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedDescriptor, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":296,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"purivirakarin"},"content":"    public void parseOptionalFields_noFieldsPresent_success() throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"purivirakarin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":304,"author":{"gitId":"purivirakarin"},"content":"        parser.parseOptionalFields(argMultimap, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":305,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":306,"author":{"gitId":"purivirakarin"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":307,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":308,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedDescriptor, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":309,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":310,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(descriptor.getPreferences().isEmpty());","lastModifiedDate":"2024-03-21"},{"lineNumber":311,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(descriptor.getProducts().isEmpty());","lastModifiedDate":"2024-03-21"},{"lineNumber":312,"author":{"gitId":"purivirakarin"},"content":"        assertNull(descriptor.getDepartment().orElse(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":313,"author":{"gitId":"purivirakarin"},"content":"        assertNull(descriptor.getJobTitle().orElse(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":314,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(descriptor.getSkills().isEmpty());","lastModifiedDate":"2024-03-21"},{"lineNumber":315,"author":{"gitId":"purivirakarin"},"content":"        assertNull(descriptor.getTermsOfService().orElse(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":316,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"purivirakarin":103,"-":157,"shaunlxw":57}},{"path":"src/test/java/seedu/address/logic/parser/ExportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"public class ExportCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    private final ExportCommandParser parser \u003d new ExportCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    public void parse_emptyArg_returnsDefaultExportCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"        assertParseSuccess(parser, \"\", new ExportCommand());","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    public void parse_validArgs_returnsExportCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"        String filename \u003d \"test.csv\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"        ExportCommand expectedExportCommand \u003d new ExportCommand(filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"        assertParseSuccess(parser, filename, expectedExportCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"    public void parse_invalidFilename_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"        String invalidFilename \u003d \"invalid\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        String expectedErrorMessage \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"                \"Error: Invalid filename. Please provide a valid filename with the .csv extension.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        assertParseFailure(parser, invalidFilename, expectedErrorMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"    public void parse_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"        String expectedErrorMessage \u003d String.format(ExportCommandParser.MESSAGE_NO_EXTENSION);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        assertParseFailure(parser, \"   \", expectedErrorMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"    public void parse_blankArgs_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"        ExportCommand expectedExportCommand \u003d new ExportCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"        assertParseSuccess(parser, \"\", expectedExportCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nuyer":51}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"purivirakarin":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/FindNumCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"import seedu.address.logic.commands.FindNumCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"import seedu.address.model.person.PhoneContainsDigitsPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"public class FindNumCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"    private final FindNumCommandParser parser \u003d new FindNumCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"                FindNumCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"    public void parse_invalidNum_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"        assertParseFailure(parser, \"91b892e24\",","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"                        FindNumCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"    public void parse_validArgs_returnsFindNumCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"        FindNumCommand expectedFindNumCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"                new FindNumCommand(new PhoneContainsDigitsPredicate(Arrays.asList(\"87438807\", \"99272758\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"        assertParseSuccess(parser, \"87438807 99272758\", expectedFindNumCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"        assertParseSuccess(parser, \" \\n 87438807 \\n \\t 99272758  \\t\", expectedFindNumCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"starsia":43}},{"path":"src/test/java/seedu/address/logic/parser/NetConnectParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"import seedu.address.logic.commands.FindNumCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"import seedu.address.model.person.PhoneContainsDigitsPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"public class NetConnectParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    private final NetConnectParser parser \u003d new NetConnectParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        Person person \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(PersonUtil.getDeleteCommand(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(new DeleteCommand(ALICE.getId()), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        Person person \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"                + PREFIX_ID + \"1\" + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(new EditCommand(ID_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"starsia"},"content":"    public void parseCommand_findNum() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"starsia"},"content":"        List\u003cString\u003e phones \u003d Arrays.asList(\"87438807\", \"99272758\", \"87652533\");","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"starsia"},"content":"        FindNumCommand command \u003d (FindNumCommand) parser.parseCommand(","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"starsia"},"content":"                FindNumCommand.COMMAND_WORD + \" \" + phones.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"starsia"},"content":"        assertEquals(new FindNumCommand(new PhoneContainsDigitsPredicate(phones)), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"shaunlxw"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"nuyer"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"nuyer"},"content":"        ExportCommand command \u003d (ExportCommand) parser.parseCommand(ExportCommand.COMMAND_WORD);","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"nuyer"},"content":"        assertTrue(command instanceof ExportCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"nuyer"},"content":"        assertEquals(new ExportCommand(), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"nuyer"},"content":"        String filename \u003d \"contacts.csv\";","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"nuyer"},"content":"        ExportCommand commandWithFilename \u003d (ExportCommand) parser.parseCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"nuyer"},"content":"                ExportCommand.COMMAND_WORD + \" \" + filename);","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"nuyer"},"content":"        assertTrue(commandWithFilename instanceof ExportCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"nuyer"},"content":"        assertEquals(new ExportCommand(filename), commandWithFilename);","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"starsia":10,"nuyer":14,"purivirakarin":16,"-":89,"shaunlxw":9}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    private static final String INVALID_DEPARTMENT \u003d \"InvalidDepartment\u0026^\";","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    private static final String INVALID_JOB_TITLE \u003d \"InvalidJobTitle\u0026^\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    private static final String INVALID_PRODUCT \u003d \"Invalid Product!@#\";","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    private static final String INVALID_SKILLS \u003d \"Invalid Skills!@#\";","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_DEPARTMENT \u003d \"ValidDepartment\";","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_JOB_TITLE \u003d \"ValidJobTitle\";","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_PRODUCT_1_STRING \u003d \"Product 1\";","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_PRODUCT_2_STRING \u003d \"Product 2\";","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_PRODUCT_3_STRING \u003d \"Product 3\";","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_SKILLS_1 \u003d \"Java\";","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_SKILLS_2 \u003d \"Python\";","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_SKILLS_3 \u003d \"C++\";","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"    public void parseId_invalidInput_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseId(\"0\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseId(\"a\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"    public void parseId_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(ParseException.class, Id.MESSAGE_CONSTRAINTS, ()","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"                -\u003e ParserUtil.parseId(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"    public void parseId_validInput_success() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"        // No whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(ID_FIRST_PERSON, ParserUtil.parseId(\"1\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"shaunlxw"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(ID_FIRST_PERSON, ParserUtil.parseId(\"  1  \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"purivirakarin"},"content":"    public void parseDepartment_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDepartment(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"purivirakarin"},"content":"    public void parseDepartment_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDepartment(INVALID_DEPARTMENT));","lastModifiedDate":"2024-03-21"},{"lineNumber":246,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"purivirakarin"},"content":"    public void parseDepartment_validValueWithoutWhitespace_returnsDepartment() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"purivirakarin"},"content":"        Department expectedDepartment \u003d new Department(VALID_DEPARTMENT);","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedDepartment, ParserUtil.parseDepartment(VALID_DEPARTMENT));","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"purivirakarin"},"content":"    public void parseDepartment_validValueWithWhitespace_returnsTrimmedDepartment() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"purivirakarin"},"content":"        String departmentWithWhitespace \u003d \"  \" + VALID_DEPARTMENT + \"  \";","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"purivirakarin"},"content":"        Department expectedDepartment \u003d new Department(VALID_DEPARTMENT);","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedDepartment, ParserUtil.parseDepartment(departmentWithWhitespace));","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"purivirakarin"},"content":"    public void parseJobTitle_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseJobTitle(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":267,"author":{"gitId":"purivirakarin"},"content":"    public void parseJobTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseJobTitle(INVALID_JOB_TITLE));","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"purivirakarin"},"content":"    public void parseJobTitle_validValueWithoutWhitespace_returnsJobTitle() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":273,"author":{"gitId":"purivirakarin"},"content":"        JobTitle expectedJobTitle \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedJobTitle, ParserUtil.parseJobTitle(VALID_JOB_TITLE));","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"purivirakarin"},"content":"    public void parseJobTitle_validValueWithWhitespace_returnsTrimmedJobTitle() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"purivirakarin"},"content":"        String jobTitleWithWhitespace \u003d \"  \" + VALID_JOB_TITLE + \"  \";","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"purivirakarin"},"content":"        JobTitle expectedJobTitle \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":281,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedJobTitle, ParserUtil.parseJobTitle(jobTitleWithWhitespace));","lastModifiedDate":"2024-03-21"},{"lineNumber":282,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":284,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"purivirakarin"},"content":"    public void parseProducts_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseProducts(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":290,"author":{"gitId":"purivirakarin"},"content":"    public void parseProducts_invalidProducts_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":291,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e invalidProducts \u003d Arrays.asList(VALID_PRODUCT_1_STRING, INVALID_PRODUCT, VALID_PRODUCT_2_STRING);","lastModifiedDate":"2024-03-21"},{"lineNumber":292,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseProducts(invalidProducts));","lastModifiedDate":"2024-03-21"},{"lineNumber":293,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":294,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":295,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":296,"author":{"gitId":"purivirakarin"},"content":"    public void parseProducts_validProducts_returnsProducts() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e validProducts \u003d Arrays.asList(VALID_PRODUCT_1_STRING, VALID_PRODUCT_2_STRING,","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"purivirakarin"},"content":"                VALID_PRODUCT_3_STRING);","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"purivirakarin"},"content":"        Products expectedProducts \u003d new Products(validProducts);","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedProducts, ParserUtil.parseProducts(validProducts));","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":304,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkillsCollection_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":305,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSkills((Collection\u003cString\u003e) null));","lastModifiedDate":"2024-03-21"},{"lineNumber":306,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":307,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":308,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":309,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkills_emptyCollection_returnsEmptySkills() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":310,"author":{"gitId":"purivirakarin"},"content":"        Skills expectedSkills \u003d new Skills(Collections.emptySet());","lastModifiedDate":"2024-03-21"},{"lineNumber":311,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkills, ParserUtil.parseSkills(Collections.emptyList()));","lastModifiedDate":"2024-03-21"},{"lineNumber":312,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":313,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":314,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":315,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkills_collectionWithValidSkills_returnsSkills() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":316,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e skills \u003d new HashSet\u003c\u003e(Arrays.asList(VALID_SKILLS_1, VALID_SKILLS_2, VALID_SKILLS_3));","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"purivirakarin"},"content":"        Skills expectedSkills \u003d new Skills(skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":318,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkills, ParserUtil.parseSkills(skills));","lastModifiedDate":"2024-03-21"},{"lineNumber":319,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":320,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":322,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkills_collectionWithInvalidSkills_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":323,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSkills(","lastModifiedDate":"2024-03-21"},{"lineNumber":324,"author":{"gitId":"purivirakarin"},"content":"                Arrays.asList(VALID_SKILLS_1, INVALID_SKILLS, VALID_SKILLS_2)));","lastModifiedDate":"2024-03-21"},{"lineNumber":325,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":326,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":327,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":328,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkillsLists_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":329,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSkills(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":330,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":331,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":332,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":333,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkills_emptyList_returnsEmptySkills() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":334,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e emptyList \u003d Collections.emptyList();","lastModifiedDate":"2024-03-21"},{"lineNumber":335,"author":{"gitId":"purivirakarin"},"content":"        Skills expectedSkills \u003d new Skills(Collections.emptySet());","lastModifiedDate":"2024-03-21"},{"lineNumber":336,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkills, ParserUtil.parseSkills(emptyList));","lastModifiedDate":"2024-03-21"},{"lineNumber":337,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":338,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":339,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":340,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkills_validSkills_returnsSkills() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":341,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e skillsList \u003d Arrays.asList(VALID_SKILLS_1, VALID_SKILLS_2, VALID_SKILLS_3);","lastModifiedDate":"2024-03-21"},{"lineNumber":342,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e expectedSkillsSet \u003d new HashSet\u003c\u003e(Arrays.asList(VALID_SKILLS_1, VALID_SKILLS_2, VALID_SKILLS_3));","lastModifiedDate":"2024-03-21"},{"lineNumber":343,"author":{"gitId":"purivirakarin"},"content":"        Skills expectedSkills \u003d new Skills(expectedSkillsSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":344,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkills, ParserUtil.parseSkills(skillsList));","lastModifiedDate":"2024-03-21"},{"lineNumber":345,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":346,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":347,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":348,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkills_duplicateSkills_returnsUniqueSkills() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":349,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e skillsList \u003d Arrays.asList(VALID_SKILLS_1, VALID_SKILLS_1, VALID_SKILLS_2);","lastModifiedDate":"2024-03-21"},{"lineNumber":350,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e expectedSkillsSet \u003d new HashSet\u003c\u003e(Arrays.asList(VALID_SKILLS_1, VALID_SKILLS_2));","lastModifiedDate":"2024-03-21"},{"lineNumber":351,"author":{"gitId":"purivirakarin"},"content":"        Skills expectedSkills \u003d new Skills(expectedSkillsSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":352,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkills, ParserUtil.parseSkills(skillsList));","lastModifiedDate":"2024-03-21"},{"lineNumber":353,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":354,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":355,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":356,"author":{"gitId":"purivirakarin"},"content":"    public void parseSkills_invalidSkill_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":357,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e skillsList \u003d Arrays.asList(VALID_SKILLS_1, INVALID_SKILLS, VALID_SKILLS_2);","lastModifiedDate":"2024-03-21"},{"lineNumber":358,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSkills(skillsList));","lastModifiedDate":"2024-03-21"},{"lineNumber":359,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":360,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":361,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":362,"author":{"gitId":"purivirakarin"},"content":"    public void parsePreferences_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":363,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePreferences(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":364,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":365,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":366,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"purivirakarin"},"content":"    public void parseTermsOfService_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTermsOfService(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":369,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":370,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"purivirakarin":156,"-":192,"shaunlxw":23}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"    private final RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"    public void parse_validIndex_returnsDeleteCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"        assertParseSuccess(parser, \"1 r/remark\",","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"                new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"remark\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"    public void parse_noArgs_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"shaunlxw":33}},{"path":"src/test/java/seedu/address/logic/utils/CsvExporterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package seedu.address.logic.utils;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.io.File;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"public class CsvExporterTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    private static final String TEST_FILENAME \u003d \"test_export.csv\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    private CsvExporter csvExporter;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"    private UniquePersonList persons;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"        UniquePersonList persons \u003d new UniquePersonList();","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"        persons.setPersons(Arrays.asList(","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"                TypicalPersons.ALICE, TypicalPersons.BENSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"                TypicalPersons.DANIEL, TypicalPersons.ELLE, TypicalPersons.FIONA","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"        ));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"        csvExporter \u003d new CsvExporter(persons, TEST_FILENAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"    public void execute_exportSuccess() {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"        csvExporter.execute();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"        assertTrue(csvExporter.getIsSuccessful());","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        File exportedFile \u003d new File(TEST_FILENAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        assertTrue(exportedFile.exists());","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"        exportedFile.delete(); // Clean up after test","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"    public void execute_exportFailure() {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"        // Simulate a situation where IOException occurs during file write","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"        csvExporter \u003d new CsvExporter(persons, \"\"); // Provide an invalid filename to trigger IOException","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"        csvExporter.execute();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"        assertFalse(csvExporter.getIsSuccessful());","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"    public void convertPersonToStringArray() {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        Client person \u003d TypicalPersons.ALICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        String[] expectedArray \u003d new String[]{","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"            person.getId().toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"            person.getName().toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"            person.getPhone().toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"            person.getEmail().toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"            \"\\\"\" + person.getAddress().toString() + \"\\\"\",","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"            person.getRemark().toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"            \"\\\"\" + person.getTagsAsString() + \"\\\"\",","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"            \"\",","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"            \"\",","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"            \"\",","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"            person.getProducts().toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"            person.getPreferences().toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"            \"\"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        };","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"        assertArrayEquals(expectedArray, csvExporter.convertPersonToStringArray(person));","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nuyer":55,"purivirakarin":18}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.TypicalIds.ID_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.exceptions.IdNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.NetConnectBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(new NetConnect(), new NetConnect(modelManager.getNetConnect()));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"        userPrefs.setNetConnectFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        userPrefs.setNetConnectFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"    public void setNetConnectFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setNetConnectFilePath(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"    public void setNetConnectFilePath_validPath_setsNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        modelManager.setNetConnectFilePath(path);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(path, modelManager.getNetConnectFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    public void hasPerson_personNotInNetConnect_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"    public void hasPerson_personInNetConnect_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_nullId_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasId(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_idNotInNetConnect_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(modelManager.hasId(ID_FIRST_PERSON));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_idInNetConnect_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"shaunlxw"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(modelManager.hasId(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_nullId_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.getPersonById(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_idNotInNetConnect_throwsIdNotFoundException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(IdNotFoundException.class, () -\u003e modelManager.getPersonById(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_idInNetConnect_returnsPerson() {","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"shaunlxw"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(ALICE, modelManager.getPersonById(ALICE.getId()));","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"        NetConnect netConnect \u003d new NetConnectBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"        NetConnect differentNetConnect \u003d new NetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"        modelManager \u003d new ModelManager(netConnect, userPrefs);","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(netConnect, userPrefs);","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"        // different netConnect -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentNetConnect, userPrefs)));","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(modelManager.equals(new ModelManager(netConnect, userPrefs)));","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"        differentUserPrefs.setNetConnectFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(modelManager.equals(new ModelManager(netConnect, differentUserPrefs)));","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tanjieling0":6,"purivirakarin":15,"-":112,"shaunlxw":33}},{"path":"src/test/java/seedu/address/model/NetConnectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.exceptions.IdNotFoundException;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.SupplierBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"public class NetConnectTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    private final NetConnect netConnect \u003d new NetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(Collections.emptyList(), netConnect.getPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e netConnect.resetData(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    public void resetData_withValidReadOnlyNetConnect_replacesData() {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        NetConnect newData \u003d getTypicalNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        netConnect.resetData(newData);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(newData, netConnect);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        Client editedAliceClient \u003d new ClientBuilder(ALICE).withPreferences(\"New Preferences\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAliceClient);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        NetConnectStub newData \u003d new NetConnectStub(newPersons);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e netConnect.resetData(newData));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e netConnect.hasPerson(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"    public void hasPerson_personNotInNetConnect_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(netConnect.hasPerson(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"    public void hasPerson_personInNetConnect_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        netConnect.addPerson(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(netConnect.hasPerson(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"    public void hasPerson_personWithSameIdentityFieldsInNetConnect_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        netConnect.addPerson(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        Client editedAliceClient \u003d new ClientBuilder(ALICE).withPreferences(\"Different Preferences\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(netConnect.hasPerson(editedAliceClient));","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_nullId_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(NullPointerException.class, () -\u003e netConnect.hasId(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_idNotInNetConnect_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(netConnect.hasId(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_idInNetConnect_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"shaunlxw"},"content":"        netConnect.addPerson(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(netConnect.hasId(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_nullId_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(NullPointerException.class, () -\u003e netConnect.getPersonById(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_idNotInNetConnect_throwsIdNotFoundException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(IdNotFoundException.class, () -\u003e netConnect.getPersonById(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_idInNetConnect_returnsPerson() {","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"shaunlxw"},"content":"        netConnect.addPerson(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(ALICE, netConnect.getPersonById(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e netConnect.getPersonList().remove(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"        String expected \u003d NetConnect.class.getCanonicalName() + \"{persons\u003d\" + netConnect.getPersonList() + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expected, netConnect.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"     * Test case to verify that the `addPerson` method handles different roles with","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"     * the same identity fields correctly.","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"     * It adds an `ALICE` person to the `netConnect` object as an employee and then","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"     * as a supplier.","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"     * The method asserts that no exceptions are thrown during the process.","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"    public void addPerson_differentRolesWithSameIdentityFields_handlesCorrectly() {","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"        netConnect.addPerson(ALICE);","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"        Employee aliceEmployee \u003d new EmployeeBuilder().withName(ALICE.getName().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"                .withPhone(ALICE.getPhone().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"                .withEmail(ALICE.getEmail().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(ALICE.getAddress().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"                .withDepartment(\"Engineering\")","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"                .withJobTitle(\"Engineer\")","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"        assertDoesNotThrow(() -\u003e netConnect.addPerson(aliceEmployee));","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"        Supplier aliceSupplier \u003d new SupplierBuilder().withName(ALICE.getName().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"                .withPhone(ALICE.getPhone().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"                .withEmail(ALICE.getEmail().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(ALICE.getAddress().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"                .withTermsOfService(\"1 Year Warranty\")","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"        assertDoesNotThrow(() -\u003e netConnect.addPerson(aliceSupplier));","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"    public void hasPerson_diffRolesWithSameIdentityFieldsInNetConnect_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"purivirakarin"},"content":"        netConnect.addPerson(ALICE);","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"purivirakarin"},"content":"        Employee aliceEmployee \u003d new EmployeeBuilder().withName(ALICE.getName().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"purivirakarin"},"content":"                .withPhone(ALICE.getPhone().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"purivirakarin"},"content":"                .withEmail(ALICE.getEmail().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(ALICE.getAddress().toString())","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"                .withDepartment(\"Engineering\")","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(netConnect.hasPerson(aliceEmployee));","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":169,"author":{"gitId":"purivirakarin"},"content":"     * A stub ReadOnlyNetConnect whose persons list can violate interface","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"purivirakarin"},"content":"     * constraints.","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":172,"author":{"gitId":"purivirakarin"},"content":"    private static class NetConnectStub implements ReadOnlyNetConnect {","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":175,"author":{"gitId":"purivirakarin"},"content":"        NetConnectStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"purivirakarin":80,"-":72,"shaunlxw":32}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    public void setNetConnectFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setNetConnectFilePath(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"purivirakarin":2,"-":19}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(address.equals(0.5f));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"purivirakarin":1,"-":55}},{"path":"src/test/java/seedu/address/model/person/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"public class ClientTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_validFields_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"        Email email \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        Address address \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        Remark remark \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        Products products \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        String preferences \u003d \"Swimming\";","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        Client client \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(name, client.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(phone, client.getPhone());","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(email, client.getEmail());","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(address, client.getAddress());","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(remark, client.getRemark());","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(tags, client.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(products, client.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(preferences, client.getPreferences());","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    public void isSamePerson_sameClient_true() {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        Email email \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        Address address \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        Remark remark \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        Products products \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        String preferences \u003d \"Swimming\";","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        Client client1 \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        Client client2 \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(client1.isSamePerson(client2));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    public void isSamePerson_differentClient_false() {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        Name name1 \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        Phone phone1 \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        Email email1 \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        Address address1 \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        Remark remark1 \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        Products products1 \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        String preferences1 \u003d \"Swimming\";","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"        Name name2 \u003d new Name(\"Jane Smith\");","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        Phone phone2 \u003d new Phone(\"98765432\");","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        Email email2 \u003d new Email(\"janesmith@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        Address address2 \u003d new Address(\"456, Orchard Road, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        Remark remark2 \u003d new Remark(\"Likes to read\");","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        Products products2 \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        String preferences2 \u003d \"Reading\";","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        Client client1 \u003d new Client(name1, phone1, email1, address1, remark1, tags1, products1, preferences1);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        Client client2 \u003d new Client(name2, phone2, email2, address2, remark2, tags2, products2, preferences2);","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(client1.isSamePerson(client2));","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameClient_true() {","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        Email email \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"        Address address \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"        Remark remark \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"        Products products \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"        String preferences \u003d \"Swimming\";","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"        Client client1 \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"        Client client2 \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(client1, client2);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentClient_false() {","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"        Name name1 \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"        Phone phone1 \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"        Email email1 \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        Address address1 \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"        Remark remark1 \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"        Products products1 \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"        String preferences1 \u003d \"Swimming\";","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"        Name name2 \u003d new Name(\"Jane Smith\");","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        Phone phone2 \u003d new Phone(\"98765432\");","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"        Email email2 \u003d new Email(\"janesmith@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"        Address address2 \u003d new Address(\"456, Orchard Road, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"        Remark remark2 \u003d new Remark(\"Likes to read\");","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"        Products products2 \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"        String preferences2 \u003d \"Reading\";","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"        Client client1 \u003d new Client(name1, phone1, email1, address1, remark1, tags1, products1, preferences1);","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"        Client client2 \u003d new Client(name2, phone2, email2, address2, remark2, tags2, products2, preferences2);","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(client1, client2);","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"    public void hashCode_sameClient_sameHashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"        Email email \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"        Address address \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"        Remark remark \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"        Products products \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"        String preferences \u003d \"Swimming\";","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"        Client client1 \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"        Client client2 \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(client1.hashCode(), client2.hashCode());","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"    public void toString_validClient_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"        Email email \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"        Address address \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"        Remark remark \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"        Products products \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"        String preferences \u003d \"Swimming\";","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"        Client client \u003d new Client(name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"        String expected \u003d Client.class.getCanonicalName() + \"{id\u003d\" + client.getId() + \", name\u003d\" + name + \", phone\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"                + phone + \", email\u003d\" + email + \", address\u003d\" + address + \", remark\u003d\" + remark + \", tags\u003d\" + tags","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"purivirakarin"},"content":"                + \", products\u003d\" + products + \", preferences\u003d\" + preferences + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expected, client.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":162}},{"path":"src/test/java/seedu/address/model/person/DepartmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"public class DepartmentTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"    public void isValidDepartment_validDepartment_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(Department.isValidDepartment(\"Sales\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(Department.isValidDepartment(\"Marketing Department\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(Department.isValidDepartment(\"123 Department\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    public void isValidDepartment_invalidDepartment_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(Department.isValidDepartment(\"\")); // empty string","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(Department.isValidDepartment(\" \")); // whitespace","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(Department.isValidDepartment(\"Department!\")); // contains special characters","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameDepartment_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        Department department1 \u003d new Department(\"Sales\");","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        Department department2 \u003d new Department(\"Sales\");","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(department1.equals(department2));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentDepartment_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        Department department1 \u003d new Department(\"Sales\");","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        Department department2 \u003d new Department(\"Marketing\");","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(department1.equals(department2));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":37}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(email.equals(0.5f));","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"purivirakarin":1,"-":87}},{"path":"src/test/java/seedu/address/model/person/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"public class IdTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"    public void generateNextId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"        Id id \u003d Id.generateNextId();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"        Id next \u003d Id.generateNextId();","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(next.value, id.value + 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"    public void generateId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"        int nextValue \u003d Id.generateNextId().value + 1;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"        Id id \u003d Id.generateId(nextValue);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"        Id next \u003d Id.generateNextId();","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(next.value, id.value + 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"    public void factoryMethods_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"        // Invalid id","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"        int invalidId \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Id.generateId(invalidId));","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Id.generateTempId(invalidId));","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"    public void isValidId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"        // invalid id","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(Id.isValidId(0)); // zero","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(Id.isValidId(-10)); // negative integer","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"        // valid id","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(Id.isValidId(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(Id.isValidId(Integer.MAX_VALUE));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"        Id id \u003d Id.generateId(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"tanjieling0"},"content":"        assertTrue(id.equals(Id.generateId(1)));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"tanjieling0"},"content":"        assertTrue(id.equals(id));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(id.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(id.equals(\"hi\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(id.equals(Id.generateId(2)));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"tanjieling0":3,"shaunlxw":62}},{"path":"src/test/java/seedu/address/model/person/JobTitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"public class JobTitleTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_JOB_TITLE \u003d \"Software Engineer\";","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    public static final String VALID_JOB_TITLE_2 \u003d \"Product Manager\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    public static final String INVALID_JOB_TITLE \u003d \"Software Engineer!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    public void isValidJobTitle() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"        // Valid job titles","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(JobTitle.isValidJobTitle(\"Software Engineer\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(JobTitle.isValidJobTitle(\"Product Manager\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(JobTitle.isValidJobTitle(\"Data Analyst\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(JobTitle.isValidJobTitle(\"Senior Software Developer\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        // Invalid job titles","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(JobTitle.isValidJobTitle(\"\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(JobTitle.isValidJobTitle(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(JobTitle.isValidJobTitle(\"123\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(JobTitle.isValidJobTitle(\"INVALID_JOB_TITLE\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    public void getTitle() {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(VALID_JOB_TITLE, jobTitle.getTitle());","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(jobTitle.equals(jobTitle));","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(jobTitle.equals(VALID_JOB_TITLE));","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameTitle_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle1 \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle2 \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(jobTitle1.equals(jobTitle2));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentTitle_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle1 \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle2 \u003d new JobTitle(VALID_JOB_TITLE_2);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(jobTitle1.equals(jobTitle2));","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    public void hashCode_sameTitle_sameHashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle1 \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle2 \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(jobTitle1.hashCode(), jobTitle2.hashCode());","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"    public void hashCode_differentTitle_differentHashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle1 \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        JobTitle jobTitle2 \u003d new JobTitle(VALID_JOB_TITLE_2);","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(jobTitle1.hashCode(), jobTitle2.hashCode());","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":77}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.SupplierBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        // Using ClientBuilder","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        // Using EmployeeBuilder with Multiple keywords","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        // Using SupplierBuilder","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Supplier\", \"Name\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(predicate.test(new SupplierBuilder().withName(\"Supplier Name\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(List.of(\"Carol\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        // Keywords match phone, email, and address, but does not match name","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"purivirakarin":18,"-":73}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(name.equals(0.5f));","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"purivirakarin":1,"-":59}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        Person editedAlice \u003d new ClientBuilder(ALICE).withId(VALID_ID_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        Person editedBob \u003d new EmployeeBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        editedBob \u003d new EmployeeBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"    public void hasSameId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(ALICE.hasSameId(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(ALICE.hasSameId(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        Person editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(ALICE.hasSameId(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(ALICE.hasSameId(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        Person aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"        Person editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withRemark(\"Different remark\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"        String expected \u003d Client.class.getCanonicalName() + \"{id\u003d\" + ALICE.getId() + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"shaunlxw"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \", tags\u003d\" + ALICE.getTags() + \", products\u003d\" + ALICE.getProducts()","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"                + \", preferences\u003d\" + ALICE.getPreferences() + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"purivirakarin":25,"-":83,"shaunlxw":18}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsDigitsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"public class PhoneContainsDigitsPredicateTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"94351253\");","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"94351253\", \"98765432\");","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate firstPredicate \u003d new PhoneContainsDigitsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate secondPredicate \u003d new PhoneContainsDigitsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate firstPredicateCopy \u003d new PhoneContainsDigitsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"        // different instance -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"        assertFalse(firstPredicate.equals(new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"    public void test_numberContainsDigits_returnsTrue() {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"        // One keyword","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate predicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"                new PhoneContainsDigitsPredicate(Collections.singletonList(\"94351253\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(predicate.test(new ClientBuilder().withPhone(\"94351253\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"    public void test_phoneDoesNotContainDigits_returnsFalse() {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate predicate \u003d new PhoneContainsDigitsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(predicate.test(new ClientBuilder().withPhone(\"94351253\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"starsia"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"starsia"},"content":"        predicate \u003d new PhoneContainsDigitsPredicate(List.of(\"95352563\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(predicate.test(new ClientBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"starsia"},"content":"        // Keywords match name, email and address, but does not match phone","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"starsia"},"content":"        predicate \u003d new PhoneContainsDigitsPredicate(Arrays.asList(\"Alice\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"starsia"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"starsia"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"starsia"},"content":"        List\u003cString\u003e phones \u003d List.of(\"94351253\", \"98765432\");","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"starsia"},"content":"        PhoneContainsDigitsPredicate predicate \u003d new PhoneContainsDigitsPredicate(phones);","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"starsia"},"content":"        String expected \u003d PhoneContainsDigitsPredicate.class.getCanonicalName() + \"{phones\u003d\" + phones + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"starsia"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"tanjieling0":3,"starsia":70,"purivirakarin":5}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(phone.equals(0.5f));","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"purivirakarin":1,"-":59}},{"path":"src/test/java/seedu/address/model/person/ProductsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"public class ProductsTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    private static final List\u003cString\u003e PRODUCT_LIST \u003d Arrays.asList(\"Product1\", \"Product2\", \"Product3\");","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    private static final List\u003cString\u003e EMPTY_LIST \u003d List.of();","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    private static final String PRODUCT_STRING \u003d \"Product1 Product2 Product3\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    private Products products;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_emptyList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(EMPTY_LIST.size(), products.getProducts().size());","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_validList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(PRODUCT_LIST, products.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_validString_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(PRODUCT_STRING);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(PRODUCT_LIST, products.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    public void isValidProducts_validList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(Products.isValidProducts(PRODUCT_LIST));","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    public void isValidProducts_invalidList_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e productList \u003d Arrays.asList(\"Product1\", \"Product2\", \"Product@3\");","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(Products.isValidProducts(productList));","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    public void removeProduct_nonExistingProduct_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        products.removeProduct(\"Product4\");","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(PRODUCT_LIST, products.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    public void isEmpty_emptyList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(products.isEmpty());","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    public void isEmpty_nonEmptyList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(products.isEmpty());","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"    public void toString_emptyList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(EMPTY_STRING, products.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"    public void toString_nonEmptyList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"Product1, Product2, Product3\", products.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameObject_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(products, products);","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentObject_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"        Products otherProducts \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(products, otherProducts);","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentType_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(\"Product1\", products);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameProducts_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"        Products otherProducts \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(products, otherProducts);","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"    public void hashCode_sameProducts_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"        Products otherProducts \u003d new Products(PRODUCT_LIST);","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(products.hashCode(), otherProducts.hashCode());","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":115}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"tanjieling0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"public class RemarkTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"        Remark remark \u003d new Remark(\"Valid Remark\");","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"tanjieling0"},"content":"        assertTrue(remark.equals(new Remark(\"Valid Remark\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"tanjieling0"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(remark.equals(0.5f));","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"tanjieling0"},"content":"        assertFalse(remark.equals(new Remark(\"Other Valid Remark\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"tanjieling0":5,"shaunlxw":29}},{"path":"src/test/java/seedu/address/model/person/SkillsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"public class SkillsTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_noArgs_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills();","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(skills.getSkills().isEmpty());","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_setOfSkills_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e skillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        skillsSet.add(\"Java\");","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"        skillsSet.add(\"Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills(skillsSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(skillsSet, skills.getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_stringOfSkills_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        String skillsString \u003d \"Java Python\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills(skillsString);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e expectedSkillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        expectedSkillsSet.add(\"Java\");","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        expectedSkillsSet.add(\"Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkillsSet, skills.getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    public void isValidSkills_validSkills_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(Skills.isValidSkills(\"Java Python\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    public void isValidSkills_invalidSkills_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(Skills.isValidSkills(\"Java@Python\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    public void addSkills_validSkills_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e skillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        skillsSet.add(\"Java\");","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        skillsSet.add(\"Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        skills.addSkills(skillsSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(skillsSet, skills.getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    public void removeSkill_existingSkill_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        skills.removeSkill(\"Java\");","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e expectedSkillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        expectedSkillsSet.add(\"Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkillsSet, skills.getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    public void removeSkill_nonExistingSkill_noChange() {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        skills.removeSkill(\"C++\");","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cString\u003e expectedSkillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        expectedSkillsSet.add(\"Java\");","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        expectedSkillsSet.add(\"Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedSkillsSet, skills.getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"    public void containsSkill_existingSkill_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(skills.containsSkill(\"Java\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"    public void containsSkill_nonExistingSkill_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(skills.containsSkill(\"C++\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"    public void toString_validSkills_returnsStringRepresentation() {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"[Java, Python]\", skills.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameSkills_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        Skills skills1 \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"        Skills skills2 \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(skills1.equals(skills2));","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentSkills_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        Skills skills1 \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"        Skills skills2 \u003d new Skills(\"C++ Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(skills1.equals(skills2));","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"    public void hashCode_sameSkills_returnsSameHashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        Skills skills1 \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"        Skills skills2 \u003d new Skills(\"Java Python\");","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(skills1.hashCode(), skills2.hashCode());","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":116}},{"path":"src/test/java/seedu/address/model/person/SupplierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"public class SupplierTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    private final Name validName \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    private final Phone validPhone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    private final Email validEmail \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    private final Address validAddress \u003d new Address(\"123, Main Street, Singapore\");","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    private final Remark validRemark \u003d new Remark(\"Test remark\");","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    private final Set\u003cTag\u003e validTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    private final Products validProducts \u003d new Products(Arrays.asList(\"Product A\", \"Product B\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    private final TermsOfService validTermsOfService \u003d new TermsOfService(\"Terms of Service\");","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_allFieldsPresent_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validName, supplier.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validPhone, supplier.getPhone());","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validEmail, supplier.getEmail());","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validAddress, supplier.getAddress());","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validRemark, supplier.getRemark());","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validTag, supplier.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validProducts, supplier.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(validTermsOfService, supplier.getTermsOfService());","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    public void isSamePerson_sameSupplier_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier1 \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier2 \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(supplier1.isSamePerson(supplier2));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    public void isSamePerson_differentSupplier_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier1 \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier2 \u003d new Supplier(new Name(\"Jane Smith\"), validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(supplier1.isSamePerson(supplier2));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameSupplier_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier1 \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier2 \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(supplier1, supplier2);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentSupplier_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier1 \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier2 \u003d new Supplier(new Name(\"Jane Smith\"), validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(supplier1, supplier2);","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    public void toString_validSupplier_returnsStringRepresentation() {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"        Supplier supplier \u003d new Supplier(validName, validPhone, validEmail, validAddress, validRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"                validTag, validProducts, validTermsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"        String expected \u003d Supplier.class.getCanonicalName() + \"{id\u003d\" + supplier.getId() + \", name\u003dJohn Doe, \"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"                + \"phone\u003d12345678, email\u003djohndoe@example.com, address\u003d123, Main Street, Singapore, remark\u003dTest remark, \"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"                + \"tags\u003d[], products\u003dProduct A, Product B, termsOfService\u003dTerms of Service}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expected, supplier.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":93}},{"path":"src/test/java/seedu/address/model/person/TermsOfServiceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"public class TermsOfServiceTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_noArgs_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService \u003d new TermsOfService();","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(\"-\", termsOfService.getTerms());","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_withArgs_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"        String terms \u003d \"Sample terms of service\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService \u003d new TermsOfService(terms);","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(terms, termsOfService.getTerms());","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService \u003d new TermsOfService(\"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(termsOfService.equals(termsOfService));","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService1 \u003d new TermsOfService(\"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService2 \u003d new TermsOfService(\"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(termsOfService1.equals(termsOfService2));","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentValues_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService1 \u003d new TermsOfService(\"Sample terms 1\");","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService2 \u003d new TermsOfService(\"Sample terms 2\");","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(termsOfService1, termsOfService2);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    public void equals_differentType_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService \u003d new TermsOfService(\"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(termsOfService, \"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService \u003d new TermsOfService(\"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        assertNotEquals(termsOfService, null);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    public void hashCode_sameValues_returnsSameHashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService1 \u003d new TermsOfService(\"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        TermsOfService termsOfService2 \u003d new TermsOfService(\"Sample terms\");","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(termsOfService1.hashCode(), termsOfService2.hashCode());","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":65}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.exceptions.DuplicateIdException;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.exceptions.IdNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.testutil.SupplierBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE)","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    public void contains_employeeWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        uniquePersonList.add(DANIEL);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        Employee editedDaniel \u003d new EmployeeBuilder(DANIEL)","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"                .withDepartment(\"New Department\")","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(uniquePersonList.contains(editedDaniel));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    public void contains_supplierWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        uniquePersonList.add(FIONA);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        Supplier editedFiona \u003d new SupplierBuilder(FIONA)","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"                .withTermsOfService(\"New Terms of Service\")","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        assertTrue(uniquePersonList.contains(editedFiona));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.hasId(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_idNotInList_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"        assertFalse(uniquePersonList.hasId(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"    public void hasId_idInList_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"        assertTrue(uniquePersonList.hasId(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_nullId_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.getPersonById(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_idNotInList_throwsIdNotFoundException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(IdNotFoundException.class, () -\u003e uniquePersonList.getPersonById(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"shaunlxw"},"content":"    public void getPersonById_idInList_returnsPerson() {","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"shaunlxw"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"shaunlxw"},"content":"        assertEquals(ALICE, uniquePersonList.getPersonById(ALICE.getId()));","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"shaunlxw"},"content":"    public void add_duplicateId_throwsDuplicateIdException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"shaunlxw"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"        Person sameIdPerson \u003d new EmployeeBuilder((Employee) BOB).withId(ALICE.getId().value).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(DuplicateIdException.class, () -\u003e uniquePersonList.add(sameIdPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"    public void setPerson_editedClientHasSameIdentity_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE)","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"purivirakarin"},"content":"    public void setPerson_editedEmployeeHasSameIdentity_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"        uniquePersonList.add(DANIEL);","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"        Employee editedDaniel \u003d new EmployeeBuilder(DANIEL)","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"                .withDepartment(\"Updated Department\")","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"purivirakarin"},"content":"        uniquePersonList.setPerson(DANIEL, editedDaniel);","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"purivirakarin"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"        expectedUniquePersonList.add(editedDaniel);","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"purivirakarin"},"content":"    public void setPerson_editedSupplierHasSameIdentity_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"purivirakarin"},"content":"        uniquePersonList.add(FIONA);","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"purivirakarin"},"content":"        Supplier editedFiona \u003d new SupplierBuilder(FIONA)","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"purivirakarin"},"content":"                .withTermsOfService(\"Updated Terms of Service\")","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"purivirakarin"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"purivirakarin"},"content":"        uniquePersonList.setPerson(FIONA, editedFiona);","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"purivirakarin"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"purivirakarin"},"content":"        expectedUniquePersonList.add(editedFiona);","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":204,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"shaunlxw"},"content":"    public void setPerson_editedPersonHasDuplicateId_throwsDuplicateIdException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"shaunlxw"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"shaunlxw"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"purivirakarin"},"content":"        Person editedAlice \u003d new ClientBuilder(ALICE).withId(BOB.getId().value).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(DuplicateIdException.class, () -\u003e uniquePersonList.setPerson(ALICE, editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":265,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":266,"author":{"gitId":"shaunlxw"},"content":"    public void setPersons_listWithDuplicateIds_throwsDuplicateIdException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":267,"author":{"gitId":"shaunlxw"},"content":"        List\u003cPerson\u003e listWithDuplicateIds \u003d Arrays.asList(ALICE,","lastModifiedDate":"2024-03-19"},{"lineNumber":268,"author":{"gitId":"purivirakarin"},"content":"                new EmployeeBuilder((Employee) BOB).withId(ALICE.getId().value).build());","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(DuplicateIdException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicateIds));","lastModifiedDate":"2024-03-19"},{"lineNumber":270,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":271,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"purivirakarin":60,"-":170,"shaunlxw":52}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    public void getSamplePersons_validData_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"        Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(samplePersons);","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(6, samplePersons.length);","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    public void getSampleNetConnect_validData_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        ReadOnlyNetConnect sampleNetConnect \u003d SampleDataUtil.getSampleNetConnect();","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(sampleNetConnect);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    public void getTagSet_validStrings_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        Set\u003cTag\u003e tagSet \u003d SampleDataUtil.getTagSet(\"friends\", \"colleagues\");","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(tagSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(2, tagSet.size());","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    public void getProducts_validStrings_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        Products products \u003d SampleDataUtil.getProducts(\"milk\", \"bread\", \"eggs\");","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"    public void getSkills_validStrings_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        Skills skills \u003d SampleDataUtil.getSkills(\"Java\", \"Python\", \"C++\");","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":49}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"    private static final int INVALID_ID \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"    private static final int VALID_ID \u003d BENSON.getId().value;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().fullName;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().value;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().value;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_ADDRESS \u003d \"Central Perk\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_ROLE_CLIENT \u003d \"client\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_ROLE_EMPLOYEE \u003d \"employee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_ROLE_SUPPLIER \u003d \"supplier\";","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"    private static final JsonAdaptedProducts VALID_PRODUCTS \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"            new JsonAdaptedProducts(new Products(Arrays.asList(\"Coffee\", \"Cake\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_PREFERENCES \u003d \"Cafe\";","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    private static final String VALID_REMARK \u003d \"Loves coffee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"                Collections.singletonList(new JsonAdaptedTag(\"Friend\")), VALID_ROLE_CLIENT, VALID_PRODUCTS,","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"                VALID_PREFERENCES, null, null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(person.toModelType().getName(), new Name(VALID_NAME));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(person.toModelType().getPhone(), new Phone(VALID_PHONE));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(person.toModelType().getEmail(), new Email(VALID_EMAIL));","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(person.toModelType().getAddress(), new Address(VALID_ADDRESS));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(person.toModelType().getTags().size(), 1);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(((Tag) person.toModelType().getTags().toArray()[0]).tagName, \"Friend\");","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"                new JsonAdaptedPerson(INVALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"shaunlxw"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"shaunlxw"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"                INVALID_ADDRESS, Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"shaunlxw"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), \"invalidRole\", VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d JsonAdaptedPerson.INVALID_ROLE_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"                Collections.singletonList(new JsonAdaptedTag(INVALID_TAG)), VALID_ROLE_CLIENT, VALID_PRODUCTS,","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"                VALID_PREFERENCES, null, null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_CLIENT, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_EMPLOYEE, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_EMPLOYEE, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_EMPLOYEE, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_EMPLOYEE, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_EMPLOYEE, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"purivirakarin"},"content":"                INVALID_ADDRESS, Collections.emptyList(), VALID_ROLE_EMPLOYEE, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_EMPLOYEE, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"purivirakarin"},"content":"    public void toEmployeeModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"purivirakarin"},"content":"                Collections.singletonList(new JsonAdaptedTag(INVALID_TAG)), VALID_ROLE_CLIENT, VALID_PRODUCTS,","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"purivirakarin"},"content":"                VALID_PREFERENCES, null, null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, person::toEmployeeModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":246,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":267,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":273,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"purivirakarin"},"content":"                VALID_ADDRESS, Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":281,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":282,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":284,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":290,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":291,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":292,"author":{"gitId":"purivirakarin"},"content":"                INVALID_ADDRESS, Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":293,"author":{"gitId":"purivirakarin"},"content":"                null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":294,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":295,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":296,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"purivirakarin"},"content":"                Collections.emptyList(), VALID_ROLE_SUPPLIER, VALID_PRODUCTS, VALID_PREFERENCES, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"purivirakarin"},"content":"                null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"purivirakarin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":304,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":305,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":306,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":307,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":308,"author":{"gitId":"purivirakarin"},"content":"    public void toSupplierModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":309,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":310,"author":{"gitId":"purivirakarin"},"content":"                Collections.singletonList(new JsonAdaptedTag(INVALID_TAG)), VALID_ROLE_SUPPLIER, VALID_PRODUCTS,","lastModifiedDate":"2024-03-21"},{"lineNumber":311,"author":{"gitId":"purivirakarin"},"content":"                VALID_PREFERENCES, null, null, null, null, VALID_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":312,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, person::toSupplierModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":313,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":314,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"purivirakarin":219,"-":84,"shaunlxw":12}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedProductsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"public class JsonAdaptedProductsTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_noArgs_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedProducts adaptedProducts \u003d new JsonAdaptedProducts();","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(new ArrayList\u003c\u003e(), adaptedProducts.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    public void constructor_withProducts_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e products \u003d Arrays.asList(\"Product 1\", \"Product 2\", \"Product 3\");","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedProducts adaptedProducts \u003d new JsonAdaptedProducts(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(products, adaptedProducts.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    public void toModelType_validProducts_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e products \u003d Arrays.asList(\"Product 1\", \"Product 2\", \"Product 3\");","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedProducts adaptedProducts \u003d new JsonAdaptedProducts(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"            Products modelProducts \u003d adaptedProducts.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"            assertEquals(products, modelProducts.getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"            // Unexpected exception","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"            assert false;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    public void toModelType_invalidProducts_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        List\u003cString\u003e products \u003d Arrays.asList(\"Product 1\", \"Invalid Product!!\", \"Product 3\");","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"        JsonAdaptedProducts adaptedProducts \u003d new JsonAdaptedProducts(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, adaptedProducts::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":49}},{"path":"src/test/java/seedu/address/storage/JsonNetConnectStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"public class JsonNetConnectStorageTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonNetConnectStorageTest\");","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"    @TempDir","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    public Path testFolder;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    public void readNetConnect_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e readNetConnect(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    private java.util.Optional\u003cReadOnlyNetConnect\u003e readNetConnect(String filePath) throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        return new JsonNetConnectStorage(Paths.get(filePath)).readNetConnect(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"                : null;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        assertFalse(readNetConnect(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readNetConnect(\"notJsonFormatNetConnect.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    public void readNetConnect_invalidPersonNetConnect_throwDataLoadingException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readNetConnect(\"invalidPersonNetConnect.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    public void readNetConnect_invalidAndValidPersonNetConnect_throwDataLoadingException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readNetConnect(\"invalidAndValidPersonNetConnect.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    public void readAndSaveNetConnect_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"        Path filePath \u003d testFolder.resolve(\"TempNetConnect.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        NetConnect original \u003d getTypicalNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        JsonNetConnectStorage jsonNetConnectStorage \u003d new JsonNetConnectStorage(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        jsonNetConnectStorage.saveNetConnect(original, filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        ReadOnlyNetConnect readBack \u003d jsonNetConnectStorage.readNetConnect(filePath).get();","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(original, new NetConnect(readBack));","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"        jsonNetConnectStorage.saveNetConnect(original, filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"        readBack \u003d jsonNetConnectStorage.readNetConnect(filePath).get();","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(original, new NetConnect(readBack));","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"        jsonNetConnectStorage.saveNetConnect(original); // file path not specified","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"        readBack \u003d jsonNetConnectStorage.readNetConnect().get(); // file path not specified","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(original, new NetConnect(readBack));","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"purivirakarin"},"content":"    public void saveNetConnect_nullNetConnect_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNetConnect(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"     * Saves {@code netConnect} at the specified {@code filePath}.","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"    private void saveNetConnect(ReadOnlyNetConnect netConnect, String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"            new JsonNetConnectStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"                    .saveNetConnect(netConnect, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"    public void saveNetConnect_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNetConnect(new NetConnect(), null));","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"purivirakarin":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableNetConnectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"public class JsonSerializableNetConnectTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableNetConnectTest\");","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsNetConnect.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonNetConnect.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonNetConnect.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"    private static final Path DUPLICATE_ID_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateIdNetConnect.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        JsonSerializableNetConnect dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"                JsonSerializableNetConnect.class).get();","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        NetConnect netConnectFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        NetConnect typicalPersonsNetConnect \u003d TypicalPersons.getTypicalNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(netConnectFromFile, typicalPersonsNetConnect);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"        JsonSerializableNetConnect dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"                JsonSerializableNetConnect.class).get();","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"        JsonSerializableNetConnect dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"                JsonSerializableNetConnect.class).get();","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableNetConnect.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"    public void toModelType_duplicateIds_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"        JsonSerializableNetConnect dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ID_FILE,","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"                JsonSerializableNetConnect.class).get();","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableNetConnect.MESSAGE_DUPLICATE_ID,","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"purivirakarin":16,"-":31,"shaunlxw":8}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"        userPrefs.setNetConnectFilePath(Paths.get(\"netconnect.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder}","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"     * filepath.","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"purivirakarin":3,"-":121}},{"path":"src/test/java/seedu/address/storage/StateStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanjieling0"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"tanjieling0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"tanjieling0"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.storage.StateStorage.clearState;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.storage.StateStorage.deleteStateStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.storage.StateStorage.getLastCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.storage.StateStorage.loadState;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.storage.StateStorage.writeState;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"tanjieling0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"tanjieling0"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"tanjieling0"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"tanjieling0"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"tanjieling0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"tanjieling0"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"tanjieling0"},"content":"public class StateStorageTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"tanjieling0"},"content":"    private StateStorage stateStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"tanjieling0"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"tanjieling0"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"tanjieling0"},"content":"        this.stateStorage \u003d new StateStorage();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"tanjieling0"},"content":"    @AfterAll","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"tanjieling0"},"content":"    public static void tearDown() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"tanjieling0"},"content":"        clearState();","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"tanjieling0"},"content":"    public void createStorage_successfullyCreated_throwsNullPointerException() throws NullPointerException {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"tanjieling0"},"content":"        assertNotNull(stateStorage);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"tanjieling0"},"content":"    public void getFilePath_successfullyReturned() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"tanjieling0"},"content":"        assertNotNull(StateStorage.getFilePath());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(Paths.get(\"./data/state.txt\"), StateStorage.getFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"tanjieling0"},"content":"    public void getFilePathString_successfullyReturned() {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(\"./data/state.txt\", StateStorage.getFilePathString());","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"tanjieling0"},"content":"    public void getDirectoryPath_successfullyReturned() {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(Paths.get(\"./data\"), StateStorage.getDirectoryPath());","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"tanjieling0"},"content":"    public void loadState_emptyFile_successfullyLoaded() throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"tanjieling0"},"content":"        clearState();","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"tanjieling0"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"tanjieling0"},"content":"        String actual \u003d loadState();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"tanjieling0"},"content":"    public void getLastCommand_emptyFile_successfullyLoaded() throws DataLoadingException {","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"tanjieling0"},"content":"        clearState();","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"tanjieling0"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"tanjieling0"},"content":"        String actual \u003d getLastCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"tanjieling0"},"content":"    public void writeState_successfullyWritten() throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"tanjieling0"},"content":"        String expected \u003d \"test123abc cba321tset\";","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"tanjieling0"},"content":"        writeState(expected);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"tanjieling0"},"content":"        String actual \u003d loadState();","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"tanjieling0"},"content":"    public void overWriteState_successfullyOverWritten() throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"tanjieling0"},"content":"        String expected \u003d \"test123abc cba321tset\";","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"tanjieling0"},"content":"        writeState(expected);","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"tanjieling0"},"content":"        String actual \u003d loadState();","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"tanjieling0"},"content":"        String overWriteString \u003d \"newTest\";","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"tanjieling0"},"content":"        writeState(overWriteString);","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"tanjieling0"},"content":"        String actualOverWrittenString \u003d loadState();","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(overWriteString, actualOverWrittenString);","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"tanjieling0"},"content":"    public void loadFromFile_fileDoesNotExist_handlesDataLoadingException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"tanjieling0"},"content":"        deleteStateStorage();","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"tanjieling0"},"content":"        assertThrows(DataLoadingException.class, () -\u003e loadState());","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"tanjieling0"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"tanjieling0"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"tanjieling0"},"content":"    public void isStateStorageExists_fileDoesNotExist_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"tanjieling0"},"content":"        deleteStateStorage();","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"tanjieling0"},"content":"        assertEquals(false, StateStorage.isStateStorageExists());","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"tanjieling0"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"tanjieling0"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"tanjieling0":105}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.ReadOnlyNetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        JsonNetConnectStorage netConnectStorage \u003d new JsonNetConnectStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        storageManager \u003d new StorageManager(netConnectStorage, userPrefsStorage);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"         * properly wired to the","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"         * JsonUserPrefsStorageTest} class.","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    public void netConnectReadSave() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"         * properly wired to the","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"         * {@link JsonNetConnectStorage} class.","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"         * JsonNetConnectStorageTest} class.","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"        NetConnect original \u003d getTypicalNetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        storageManager.saveNetConnect(original);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        ReadOnlyNetConnect retrieved \u003d storageManager.readNetConnect().get();","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"        assertEquals(original, new NetConnect(retrieved));","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    public void getNetConnectFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"        assertNotNull(storageManager.getNetConnectFilePath());","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"purivirakarin":21,"-":51}},{"path":"src/test/java/seedu/address/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" * Represents a builder class for creating instances of the Client class.","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" * Inherits from the PersonBuilder class.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"public class ClientBuilder extends PersonBuilder\u003cClientBuilder\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_PREFERENCES \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_PRODUCTS \u003d \"Apple Banana\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    private Products products;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    private String preferences;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a new ClientBuilder with default values.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    public ClientBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"        super();","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(DEFAULT_PRODUCTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        preferences \u003d DEFAULT_PREFERENCES;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    public ClientBuilder(Client client) {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        super(client);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"        products \u003d client.getProducts();","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"        preferences \u003d client.getPreferences();","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"     * Sets the products of the client that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     * @param products The products of the client.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"     * @return The ClientBuilder with the products set to {@code products}.","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"    public ClientBuilder withProducts(String... products) {","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d SampleDataUtil.getProducts(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"     * Sets the preferences of the client that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"     * @param preferences The preferences of the client.","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"     * @return The ClientBuilder with the preferences set to {@code preferences}.","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"    public ClientBuilder withPreferences(String preferences) {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        this.preferences \u003d preferences;","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"     * Builds a new Client object with the attributes of the ClientBuilder.","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"     * @return A new Client object.","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"    public Client build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"        return new Client(id, name, phone, email, address, remark, tags, products, preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":68}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        if (person instanceof Client) {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"            descriptor.setProducts(((Client) person).getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"            descriptor.setPreferences(((Client) person).getPreferences());","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Supplier) {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"            descriptor.setProducts(((Supplier) person).getProducts());","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"            descriptor.setTermsOfService(((Supplier) person).getTermsOfService());","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Employee) {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"            descriptor.setDepartment(((Employee) person).getDepartment());","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"            descriptor.setJobTitle(((Employee) person).getJobTitle());","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"            descriptor.setSkills(((Employee) person).getSkills());","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"purivirakarin"},"content":"     * Sets the {@code Products} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"purivirakarin"},"content":"    public EditPersonDescriptorBuilder withProducts(String... products) {","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"        Products productList \u003d new Products(Arrays.asList(products));","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setProducts(productList);","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"     * Sets the {@code Preferences} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"purivirakarin"},"content":"    public EditPersonDescriptorBuilder withPreferences(String preferences) {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setPreferences(preferences);","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"     * Sets the {@code TermsOfService} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"    public EditPersonDescriptorBuilder withTermsOfService(String termsOfService) {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setTermsOfService(new TermsOfService(termsOfService));","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"     * Sets the {@code Department} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"    public EditPersonDescriptorBuilder withDepartment(String department) {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setDepartment(new Department(department));","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"     * Sets the {@code JobTitle} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"    public EditPersonDescriptorBuilder withJobTitle(String jobTitle) {","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setJobTitle(new JobTitle(jobTitle));","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"purivirakarin"},"content":"     * Parses the {@code skills} into a {@code Set\u003cSkills\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"purivirakarin"},"content":"     * that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"purivirakarin"},"content":"    public EditPersonDescriptorBuilder withSkills(String... skills) {","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"purivirakarin"},"content":"        final Set\u003cString\u003e skillsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"purivirakarin"},"content":"        for (String skill : skills) {","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"purivirakarin"},"content":"            skillsSet.add(skill);","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"purivirakarin"},"content":"        descriptor.setSkills(new Skills(skillsSet));","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"purivirakarin"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"purivirakarin":89,"-":86}},{"path":"src/test/java/seedu/address/testutil/EmployeeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" * The EmployeeBuilder class is responsible for building Employee objects for testing purposes.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" * It extends the PersonBuilder class and provides additional methods to set the department,","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":" * job title, and skills of an employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"public class EmployeeBuilder extends PersonBuilder\u003cEmployeeBuilder\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_DEPARTMENT \u003d \"IT\";","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_JOB_TITLE \u003d \"Software Engineer\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_SKILLS \u003d \"Java C++\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    private Department department;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    private JobTitle jobTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"    private Skills skills;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a new EmployeeBuilder with default values.","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"    public EmployeeBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        super();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"        department \u003d new Department(DEFAULT_DEPARTMENT);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"        jobTitle \u003d new JobTitle(DEFAULT_JOB_TITLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"        skills \u003d new Skills(DEFAULT_SKILLS);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"     * Initializes the EmployeeBuilder with the data of {@code employeeToCopy}.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    public EmployeeBuilder(Employee employee) {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        super(employee);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"        department \u003d employee.getDepartment();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"        jobTitle \u003d employee.getJobTitle();","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"        skills \u003d employee.getSkills();","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"     * Sets the department of the employee that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"     * @param department The department of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"     * @return The EmployeeBuilder with the department set to {@code department}.","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    public EmployeeBuilder withDepartment(String department) {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"        this.department \u003d new Department(department);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"     * Sets the job title of the employee that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"     * @param jobTitle The job title of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"     * @return The EmployeeBuilder with the job title set to {@code jobTitle}.","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    public EmployeeBuilder withJobTitle(String jobTitle) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        this.jobTitle \u003d new JobTitle(jobTitle);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"     * Sets the skills of the employee that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"     * @param skills The skills of the employee.","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"     * @return The EmployeeBuilder with the skills set to {@code skills}.","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"    public EmployeeBuilder withSkills(String... skills) {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        this.skills \u003d SampleDataUtil.getSkills(skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"     * Builds an Employee object with the specified attributes.","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"     * @return The Employee object with the specified attributes.","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"    public Employee build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"purivirakarin"},"content":"        return new Employee(id, name, phone, email, address, remark, tags, department, jobTitle, skills);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":86}},{"path":"src/test/java/seedu/address/testutil/NetConnectBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":" * A utility class to help with building netconnect objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" * {@code NetConnect ab \u003d new NetConnectBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"public class NetConnectBuilder {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"    private final NetConnect netConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    public NetConnectBuilder() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"        netConnect \u003d new NetConnect();","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"    public NetConnectBuilder(NetConnect netConnect) {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"        this.netConnect \u003d netConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"     * Adds a new {@code Person} to the {@code NetConnect} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"    public NetConnectBuilder withPerson(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        netConnect.addPerson(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    public NetConnect build() {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"        return netConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"purivirakarin":34}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":" * Represents a builder class for creating instances of the Person class.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":" * This class provides methods for setting the attributes of a Person object.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":" * The builder pattern is used to allow for a flexible and fluent way of constructing Person objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":" *","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":" * @param \u003cT\u003e The type of the builder class.","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"public abstract class PersonBuilder\u003cT extends PersonBuilder\u003cT\u003e\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_REMARK \u003d \"some remarks\";","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"    protected Id id;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"    protected Name name;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"    protected Phone phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"    protected Email email;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    protected Address address;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"    protected Remark remark;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"    protected Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a new PersonBuilder with default values.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"        id \u003d Id.generateNextId();","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"    private T self() {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"        return (T) this;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"     * Sets the id of the person that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"purivirakarin"},"content":"     * @param id The id of the person.","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"purivirakarin"},"content":"     * @return The updated PersonBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"    public T withId(int id) {","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"        this.id \u003d Id.generateId(id);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"        return self();","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"     * Sets the name of the person that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"     * @param name The name of the person.","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"     * @return The updated PersonBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"purivirakarin"},"content":"    public T withName(String name) {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"purivirakarin"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"        return self();","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"     * Sets the phone number of the person that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"     * @param phone The phone number of the person.","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"     * @return The updated PersonBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"    public T withPhone(String phone) {","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"        return self();","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"     * Sets the email of the person that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"purivirakarin"},"content":"     * @param email The email of the person.","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"purivirakarin"},"content":"     * @return The updated PersonBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"purivirakarin"},"content":"    public T withEmail(String email) {","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"purivirakarin"},"content":"        return self();","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"purivirakarin"},"content":"     * Sets the address of the person that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"purivirakarin"},"content":"     * @param address The address of the person.","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"purivirakarin"},"content":"     * @return The updated PersonBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"purivirakarin"},"content":"    public T withAddress(String address) {","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"purivirakarin"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"purivirakarin"},"content":"        return self();","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"purivirakarin"},"content":"     * Sets the remark of the person that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"purivirakarin"},"content":"     * @param remark The remark of the person.","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"purivirakarin"},"content":"     * @return The updated PersonBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"purivirakarin"},"content":"    public T withRemark(String remark) {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"purivirakarin"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"purivirakarin"},"content":"        return self();","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"purivirakarin"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"purivirakarin"},"content":"    public T withTags(String... tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"purivirakarin"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"purivirakarin"},"content":"        return self();","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"purivirakarin"},"content":"     * Builds the person object.","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"purivirakarin"},"content":"     * @return The person object.","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"purivirakarin"},"content":"    public abstract Person build();","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"purivirakarin":76,"-":72,"shaunlxw":6}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCES;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILLS;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TERMSOFSERVICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"        person.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"        sb.append(PREFIX_ROLE + person.getRole() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"        if (person instanceof Client) {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"            Client client \u003d (Client) person;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"            client.getProducts().getProducts().stream().forEach(","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"                    s -\u003e sb.append(PREFIX_PRODUCTS + s + \" \")","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"            );","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"            sb.append(PREFIX_PREFERENCES + client.getPreferences() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Employee) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"            Employee employee \u003d (Employee) person;","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"            sb.append(PREFIX_DEPARTMENT + employee.getDepartment().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"            sb.append(PREFIX_JOBTITLE + employee.getJobTitle().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"            sb.append(PREFIX_SKILLS + employee.getSkills().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"        } else if (person instanceof Supplier) {","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"            Supplier supplier \u003d (Supplier) person;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"            supplier.getProducts().getProducts().stream().forEach(","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"                    s -\u003e sb.append(PREFIX_PRODUCTS + s + \" \")","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"            );","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"            sb.append(PREFIX_TERMSOFSERVICE + supplier.getTermsOfService().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"purivirakarin"},"content":"        if (descriptor.getProducts().isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"            Products products \u003d descriptor.getProducts().get();","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"purivirakarin"},"content":"            if (products.isEmpty()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"                sb.append(PREFIX_PRODUCTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"purivirakarin"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"purivirakarin"},"content":"                products.getProducts().forEach(s -\u003e sb.append(PREFIX_PRODUCTS).append(s).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"purivirakarin"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"purivirakarin"},"content":"        descriptor.getPreferences().ifPresent(preferences -\u003e sb.append(PREFIX_PREFERENCES)","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"purivirakarin"},"content":"                .append(preferences).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"purivirakarin"},"content":"        descriptor.getDepartment().ifPresent(department -\u003e sb.append(PREFIX_DEPARTMENT).append(department).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"purivirakarin"},"content":"        descriptor.getJobTitle().ifPresent(jobTitle -\u003e sb.append(PREFIX_JOBTITLE).append(jobTitle).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"purivirakarin"},"content":"        descriptor.getSkills().ifPresent(skills -\u003e sb.append(PREFIX_SKILLS).append(skills).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"purivirakarin"},"content":"        descriptor.getTermsOfService().ifPresent(termsOfService -\u003e sb.append(PREFIX_TERMSOFSERVICE)","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"purivirakarin"},"content":"                .append(termsOfService).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":112,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"shaunlxw"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"shaunlxw"},"content":"     * Returns a delete command string for deleting the {@code person}.","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"shaunlxw"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"shaunlxw"},"content":"    public static String getDeleteCommand(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"shaunlxw"},"content":"        return DeleteCommand.COMMAND_WORD + \" \" + PREFIX_ID + person.getId().value;","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"purivirakarin":49,"-":61,"shaunlxw":9}},{"path":"src/test/java/seedu/address/testutil/SupplierBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"purivirakarin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Products;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.TermsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"purivirakarin"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"purivirakarin"},"content":" * A builder class for creating instances of the {@link Supplier} class for testing purposes.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":" * Allows customization of the supplier\u0027s products and terms of service.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"purivirakarin"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"purivirakarin"},"content":"public class SupplierBuilder extends PersonBuilder\u003cSupplierBuilder\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_TERMS_OF_SERVICE \u003d \"PDPA compliant\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"    public static final String DEFAULT_PRODUCTS \u003d \"Apple Banana\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"    private Products products;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"    private TermsOfService termsOfService;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a new SupplierBuilder with default values.","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"purivirakarin"},"content":"     * The default products are \"Apple Banana\" and the default terms of service is an empty string.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"purivirakarin"},"content":"    public SupplierBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"purivirakarin"},"content":"        super();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"purivirakarin"},"content":"        products \u003d new Products(DEFAULT_PRODUCTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"purivirakarin"},"content":"        termsOfService \u003d new TermsOfService(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"     * Constructs a new SupplierBuilder with the same values as the given supplier.","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"     * @param supplier The supplier to copy values from.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"purivirakarin"},"content":"    public SupplierBuilder(Supplier supplier) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"purivirakarin"},"content":"        super(supplier);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"purivirakarin"},"content":"        products \u003d supplier.getProducts();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"purivirakarin"},"content":"        termsOfService \u003d supplier.getTermsOfService();","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"purivirakarin"},"content":"     * Sets the products of the supplier to the given list of product names.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"     * @param products The product names.","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"     * @return This SupplierBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"    public SupplierBuilder withProducts(String... products) {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"        this.products \u003d SampleDataUtil.getProducts(products);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"     * Sets the terms of service of the supplier to the given string.","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"     * @param termsOfService The terms of service.","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"     * @return This SupplierBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"    public SupplierBuilder withTermsOfService(String termsOfService) {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"        this.termsOfService \u003d new TermsOfService(termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"     * Builds and returns a new instance of the Supplier class with the configured values.","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"     * @return A new Supplier object.","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"purivirakarin"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"purivirakarin"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    public Supplier build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"        return new Supplier(id, name, phone, email, address, remark, tags, products, termsOfService);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"purivirakarin":72}},{"path":"src/test/java/seedu/address/testutil/TypicalIds.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":" * A utility class containing a list of {@code Id} objects to be used in tests.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"public class TypicalIds {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"    public static final Id ID_FIRST_PERSON \u003d Id.generateId(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    public static final Id ID_SECOND_PERSON \u003d Id.generateId(2);","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shaunlxw":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERENCE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRODUCTS_LAPTOP;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRODUCTS_SMARTPHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILLS_COMMUNICATION;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"purivirakarin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILLS_NEGOTIATION;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.NetConnect;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Employee;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"purivirakarin"},"content":"import seedu.address.model.person.Supplier;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"purivirakarin"},"content":"    // Using specific Builders for Clients, Employees, and Suppliers","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"purivirakarin"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withId(1).withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").withProducts(\"Product1\", \"Product2\")","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"purivirakarin"},"content":"            .withPreferences(\"Vegan\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"purivirakarin"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withId(2).withName(\"Benson Meier\")","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"purivirakarin"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\").withProducts(\"Product3\")","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"purivirakarin"},"content":"            .withPreferences(\"Gluten-Free\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"purivirakarin"},"content":"    public static final Employee DANIEL \u003d new EmployeeBuilder().withId(3).withName(\"Daniel Meier\")","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"purivirakarin"},"content":"            .withTags(\"friends\").withDepartment(\"Marketing\").withJobTitle(\"Manager\")","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"purivirakarin"},"content":"            .withSkills(\"Public Speaking\", \"Digital Marketing\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"purivirakarin"},"content":"    public static final Employee ELLE \u003d new EmployeeBuilder().withId(4).withName(\"Elle Meyer\")","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"purivirakarin"},"content":"            .withDepartment(\"IT\").withJobTitle(\"Developer\").withSkills(\"Java\", \"C++\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"purivirakarin"},"content":"    public static final Supplier FIONA \u003d new SupplierBuilder().withId(5).withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"purivirakarin"},"content":"            .withProducts(\"Office Supplies\", \"Furniture\").withTermsOfService(\"Delivery within 2 weeks\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"purivirakarin"},"content":"    public static final Supplier GEORGE \u003d new SupplierBuilder().withId(6).withName(\"George Best\")","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"purivirakarin"},"content":"            .withProducts(\"Electronics\", \"Gadgets\").withTermsOfService(\"Warranty for 1 year\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"purivirakarin"},"content":"    public static final Employee HOON \u003d new EmployeeBuilder().withId(9).withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"purivirakarin"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"purivirakarin"},"content":"            .withDepartment(\"Tech Support\").withJobTitle(\"Technician\")","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"purivirakarin"},"content":"            .withSkills(\"Technical Support\", \"Customer Service\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"purivirakarin"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"purivirakarin"},"content":"    public static final Supplier IDA \u003d new SupplierBuilder().withId(10).withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"purivirakarin"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"purivirakarin"},"content":"            .withProducts(\"Computer Hardware\", \"Printers\").withTermsOfService(\"Returns within 30 days\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":79,"author":{"gitId":"purivirakarin"},"content":"    public static final Client AMY \u003d new ClientBuilder().withId(VALID_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"purivirakarin"},"content":"            .withTags(VALID_TAG_FRIEND).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"purivirakarin"},"content":"            .withProducts(VALID_PRODUCTS_LAPTOP, VALID_PRODUCTS_SMARTPHONE)","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"purivirakarin"},"content":"            .withPreferences(VALID_PREFERENCE_AMY).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":85,"author":{"gitId":"purivirakarin"},"content":"    public static final Employee BOB \u003d new EmployeeBuilder().withId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"purivirakarin"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"purivirakarin"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"purivirakarin"},"content":"            .withDepartment(VALID_DEPARTMENT_BOB).withJobTitle(VALID_JOB_TITLE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"purivirakarin"},"content":"            .withSkills(VALID_SKILLS_NEGOTIATION, VALID_SKILLS_COMMUNICATION).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":93,"author":{"gitId":"purivirakarin"},"content":"    public static NetConnect getTypicalNetConnect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"purivirakarin"},"content":"        NetConnect nc \u003d new NetConnect();","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"purivirakarin"},"content":"            nc.addPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":98,"author":{"gitId":"purivirakarin"},"content":"        return nc;","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"purivirakarin"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, DANIEL, ELLE, FIONA, GEORGE, AMY, BOB));","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"purivirakarin":62,"-":40,"shaunlxw":2}}]
